{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/login/LoginForm.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { object as yupObject, string as yupString } from 'yup';\nimport swal from 'sweetalert';\nimport { login, resetLogin } from '../../store/actions/loginActions';\n\nconst LoginForm = ({\n  // login,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isSuccess,\n  isError,\n  errors,\n  touched,\n  data,\n  resetLogin\n}) => {\n  useEffect(() => {\n    if (isSuccess) {\n      resetLogin();\n    } else if (isError) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n      resetLogin();\n    }\n  }, [isSuccess, isError, data, resetLogin]); // console.log('data', data);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    className: \"form-control\",\n    name: \"username\",\n    tabIndex: \"1\",\n    required: true,\n    autoFocus: true,\n    value: values.username,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Please fill in your email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Password\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    className: \"form-control\",\n    name: \"password\",\n    tabIndex: \"2\",\n    required: true,\n    value: values.password,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"please fill in your password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot-password\",\n    className: \"float-left mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary btn-lg btn-icon icon-right ${isRequesting ? 'btn-progress disabled' : ''}`,\n    tabIndex: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nconst LoginFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    username: yupString().email('Email Required '),\n    password: yupString().min(8)\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // const { router } = props;\n    // console.log('state values', values);\n    props.login({\n      username: values.username,\n      password: values.password,\n      client_id: '5x7EuN09HAeBn2pYJnvvq7szgJaULh14',\n      grant_type: 'password'\n    }); // resetForm();\n  },\n  displayName: 'Login' // helps with React DevTools\n\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  data: state.login.data,\n  isRequesting: state.login.isRequesting,\n  isSuccess: state.login.isSuccess,\n  isError: state.login.isError\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  resetLogin\n})(LoginFormFormik);","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/login/LoginForm.js"],"names":["React","useEffect","Link","connect","withFormik","object","yupObject","string","yupString","swal","login","resetLogin","LoginForm","handleSubmit","handleBlur","handleChange","values","isRequesting","isSuccess","isError","errors","touched","data","message","buttons","timer","username","password","LoginFormFormik","enableReinitialize","mapPropsToValues","validationSchema","shape","email","min","props","setSubmitting","resetForm","client_id","grant_type","displayName","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { object as yupObject, string as yupString } from 'yup';\nimport swal from 'sweetalert';\n\nimport { login, resetLogin } from '../../store/actions/loginActions';\n\nconst LoginForm = ({\n  // login,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isSuccess,\n  isError,\n  errors,\n  touched,\n  data,\n  resetLogin\n}) => {\n  useEffect(() => {\n    if (isSuccess) {\n      resetLogin();\n    } else if (isError) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n      resetLogin();\n    }\n  }, [isSuccess, isError, data, resetLogin]);\n  // console.log('data', data);\n  return (\n    <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate=\"\">\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          className=\"form-control\"\n          name=\"username\"\n          tabIndex=\"1\"\n          required\n          autoFocus\n          value={values.username}\n          onBlur={handleBlur}\n          onChange={handleChange}\n        />\n        <div className=\"invalid-feedback\">Please fill in your email</div>\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"d-block\">\n          <label htmlFor=\"password\" className=\"control-label\">\n            Password\n          </label>\n        </div>\n        <input\n          id=\"password\"\n          type=\"password\"\n          className=\"form-control\"\n          name=\"password\"\n          tabIndex=\"2\"\n          required\n          value={values.password}\n          onBlur={handleBlur}\n          onChange={handleChange}\n        />\n        <div className=\"invalid-feedback\">please fill in your password</div>\n      </div>\n\n      <div className=\"form-group text-right\">\n        <Link to=\"/forgot-password\" className=\"float-left mt-3\">\n          Forgot Password?\n        </Link>\n        <button\n          type=\"submit\"\n          className={`btn btn-primary btn-lg btn-icon icon-right ${\n            isRequesting ? 'btn-progress disabled' : ''\n          }`}\n          tabIndex=\"4\"\n        >\n          Login\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    username: yupString().email('Email Required '),\n    password: yupString().min(8)\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // const { router } = props;\n    // console.log('state values', values);\n    props.login({\n      username: values.username,\n      password: values.password,\n      client_id: '5x7EuN09HAeBn2pYJnvvq7szgJaULh14',\n      grant_type: 'password'\n    });\n    // resetForm();\n  },\n\n  displayName: 'Login' // helps with React DevTools\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  data: state.login.data,\n  isRequesting: state.login.isRequesting,\n  isSuccess: state.login.isSuccess,\n  isError: state.login.isError\n});\n\nexport default connect(mapStateToProps, { login, resetLogin })(LoginFormFormik);\n"]},"metadata":{},"sourceType":"module"}