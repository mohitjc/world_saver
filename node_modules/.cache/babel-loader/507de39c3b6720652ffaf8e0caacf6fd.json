{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/global/LocationSearchInput.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n    this.handleSelect = address => {\n      const {\n        getAddressDetails\n      } = this.props;\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n        getAddressDetails({\n          address,\n          latLng\n        });\n        // this.setState({ lat: latLng.lat, lng: latLng.lng });\n        console.log('Success', latLng);\n      }).catch(error => console.error('Error', error));\n      this.setState({\n        address\n      });\n    };\n    console.log('LocationSearchInput', props);\n    this.state = {\n      address: props.value,\n      lat: null,\n      lng: null\n    };\n  }\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     address: nextProps.value\n  //   };\n  // }\n\n  componentDidUpdate(nextProps) {\n    const {\n      value\n    } = this.props;\n    if (nextProps.value !== value) {\n      if (value) {\n        this.setState({\n          address: value\n        });\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, _ref => {\n      let {\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      } = _ref;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        className: \"form-control location-search-input\",\n        name: \"address\"\n      }, getInputProps({\n        placeholder: 'Search Places ...'\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"autocomplete-dropdown-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, loading && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      }, \"Loading...\"), suggestions.map(suggestion => {\n        const className = suggestion.active ? 'suggestion-item--active dropdown-item' : 'suggestion-item dropdown-item';\n        // inline style for demonstration purpose\n        const style = suggestion.active ? {\n          backgroundColor: '#fafafa',\n          cursor: 'pointer'\n        } : {\n          backgroundColor: '#ffffff',\n          cursor: 'pointer'\n        };\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n          className,\n          style\n        }), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, suggestion.description));\n      })));\n    });\n  }\n}","map":{"version":3,"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","Component","constructor","props","handleChange","address","setState","handleSelect","getAddressDetails","then","results","latLng","console","log","catch","error","state","value","lat","lng","componentDidUpdate","nextProps","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","className","active","style","backgroundColor","cursor","description"],"sources":["/home/jc-2/Documents/sociality-web/src/components/global/LocationSearchInput.js"],"sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('LocationSearchInput', props);\n    this.state = { address: props.value, lat: null, lng: null };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     address: nextProps.value\n  //   };\n  // }\n\n  componentDidUpdate(nextProps) {\n    const { value } = this.props;\n    if (nextProps.value !== value) {\n      if (value) {\n        this.setState({ address: value });\n      }\n    }\n  }\n\n  handleSelect = address => {\n    const { getAddressDetails } = this.props;\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        getAddressDetails({\n          address,\n          latLng\n        });\n        // this.setState({ lat: latLng.lat, lng: latLng.lng });\n        console.log('Success', latLng);\n      })\n      .catch(error => console.error('Error', error));\n    this.setState({ address });\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              className=\"form-control location-search-input\"\n              name=\"address\"\n              {...getInputProps({\n                placeholder: 'Search Places ...'\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active dropdown-item'\n                  : 'suggestion-item dropdown-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}