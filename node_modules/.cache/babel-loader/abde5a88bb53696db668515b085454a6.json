{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/contents/ContentForm.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport swal from 'sweetalert';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ApiClient from '../apiClient';\n\nconst ContentForm = ({\n  handleFormVisibilty,\n  isRequesting,\n  isUpdateRequesting,\n  isAddForm,\n  blogId,\n  getData,\n  singleContent\n}) => {\n  const [form, setForm] = useState({\n    title: '',\n    meta_description: '',\n    description: '',\n    meta_title: ''\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (blogId) {\n      setForm(singleContent);\n    }\n  }, [blogId, isAddForm, singleContent]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    let description = '';\n\n    if (editorRef.current) {\n      description = editorRef.current.getContent();\n    }\n\n    setForm({ ...form,\n      description: description\n    });\n\n    if (!form.description || !form.title || !form.meta_description || !form.meta_title) {\n      return;\n    }\n\n    let value = {\n      title: form.title,\n      description: form.description,\n      meta_description: form.meta_description,\n      meta_title: form.meta_title\n    };\n\n    if (blogId) {\n      ApiClient.put('/page/edit?slug=' + blogId, value).then(res => {\n        if (res.data.success) {\n          swal('Page updated!', '', 'success');\n          getData();\n          handleFormVisibilty();\n        }\n      });\n    } else {\n      ApiClient.post('/page', value).then(res => {\n        if (res.success) {\n          swal('New Page added!', '', 'success');\n          getData();\n          handleFormVisibilty();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"View Content\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" Content\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: form.title,\n    onChange: e => setForm({ ...form,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }), submitted && !form.title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }, \"Title is required\") : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Meta Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: form.meta_title,\n    onChange: e => setForm({ ...form,\n      meta_title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }), submitted && !form.meta_title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 50\n    }\n  }, \"Meta Title is required\") : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Editor, {\n    onInit: (evt, editor) => editorRef.current = editor,\n    initialValue: form.description,\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n      toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat | help',\n      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), submitted && !form.description ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 51\n    }\n  }, \"description is required\") : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, \"Meta Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    value: form.meta_description,\n    onChange: e => setForm({ ...form,\n      meta_description: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }), submitted && !form.meta_description ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 56\n    }\n  }, \"Meta Description is required\") : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nexport default ContentForm;","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/contents/ContentForm.js"],"names":["React","useEffect","useState","useRef","swal","Editor","ApiClient","ContentForm","handleFormVisibilty","isRequesting","isUpdateRequesting","isAddForm","blogId","getData","singleContent","form","setForm","title","meta_description","description","meta_title","submitted","setSubmitted","editorRef","handleSubmit","e","preventDefault","current","getContent","value","put","then","res","data","success","post","target","display","evt","editor","height","menubar","plugins","toolbar","content_style"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\nimport swal from 'sweetalert';\nimport { Editor } from '@tinymce/tinymce-react';\nimport ApiClient from '../apiClient';\n\nconst ContentForm = ({\n  handleFormVisibilty,\n  isRequesting,\n  isUpdateRequesting,\n  isAddForm,\n  blogId,\n  getData,\n  singleContent\n}) => {\n  const [form, setForm] = useState({ title: '',meta_description:'',description:'',meta_title:'' });\n  const [submitted, setSubmitted] = useState(false);\n\n\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if(blogId){\n      setForm(singleContent)\n    }\n    \n  }, [blogId, isAddForm, singleContent]);\n\n  \n  const handleSubmit=(e)=>{\n    e.preventDefault()\n    setSubmitted(true)\n    let description=''\n    if (editorRef.current) {\n      description=editorRef.current.getContent()\n    }\n    setForm({...form,description:description})\n\n\n    if(!form.description || !form.title || !form.meta_description || !form.meta_title){\n      return\n    }\n\n    let value={\n      title:form.title,\n      description:form.description,\n      meta_description:form.meta_description,\n      meta_title:form.meta_title\n    }\n\n    if(blogId){\n      ApiClient.put('/page/edit?slug='+blogId,value).then(res=>{\n        if(res.data.success){\n          swal('Page updated!', '', 'success');\n          getData()\n          handleFormVisibilty();\n        }\n      })\n    }else{\n      ApiClient.post('/page',value).then(res=>{\n        if(res.success){\n          swal('New Page added!', '', 'success');\n          getData()\n          handleFormVisibilty();\n        }\n      })\n    }\n    \n    \n  }\n\n  return (\n    <div className=\"\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mb-3\"\n        onClick={handleFormVisibilty}\n      >\n        View Content\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} Content</h4>\n          </div>\n\n          <div className=\"card-body\">\n           \n            <div className=\"row\">\n            <div className=\"form-group col-md-12\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={form.title}\n                    onChange={e=>setForm({...form,title:e.target.value})}\n                  />\n\n                  {submitted && !form.title?<div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      Title is required\n                    </div>:<></>}\n                  \n                </div>\n\n                <div className=\"form-group col-md-12\">\n                  <label>Meta Title</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={form.meta_title}\n                    onChange={e=>setForm({...form,meta_title:e.target.value})}\n                  />\n\n                  {submitted && !form.meta_title?<div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      Meta Title is required\n                    </div>:<></>}\n                  \n                </div>\n\n              \n\n                <div className=\"form-group col-md-12\">\n                  <label>Description</label>\n                \n                    <Editor\n                    onInit={(evt, editor) => editorRef.current = editor}\n                    initialValue={form.description}\n                    init={{\n                      height: 500,\n                      menubar: false,\n                      plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                      ],\n                      toolbar: 'undo redo | formatselect | ' +\n                      'bold italic backcolor | alignleft aligncenter ' +\n                      'alignright alignjustify | bullist numlist outdent indent | ' +\n                      'removeformat | help',\n                      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n                    }}\n                  />\n\n                  {submitted && !form.description?<div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      description is required\n                    </div>:<></>}\n\n               \n                </div>\n              \n\n                <div className=\"form-group col-md-12\">\n                  <label>Meta Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    value={form.meta_description}\n                    onChange={e=>setForm({...form,meta_description:e.target.value})}\n                  />\n\n                  {submitted && !form.meta_description?<div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      Meta Description is required\n                    </div>:<></>}\n                  \n                </div>\n            </div>\n          </div>\n\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n\nexport default ContentForm;\n\n"]},"metadata":{},"sourceType":"module"}