{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/pages/Project.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport CategoryForm from '../components/categories/CategoryForm';\nimport { skills, resetSingleSkill, deleteSkill, resetDeleteSkill } from '../store/actions/skillsActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport { getCatByType } from '../store/actions/categoryActions';\nimport ProjectsListing from '../components/projects/ProjectsListing';\nimport ProjectsForm from '../components/projects/ProjectsForm';\n\nconst Project = ({\n  skills,\n  data,\n  resetSingleSkill,\n  deleteSkill,\n  resetDeleteSkill,\n  isDeleteSuccess,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isSuccess,\n  isRequesting,\n  getCatByType,\n  catByTypeData\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null); // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    skills(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [skills, reloadToggle, page, sort, searchKeyword, isDeleteSuccess, token, type, count, sortType]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Project has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    resetDeleteSkill();\n  }, [isDeleteSuccess, isDeleteError, resetDeleteSkill]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Project has been activated' : 'Project has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError, status, reloadToggle, resetStatus]);\n  useEffect(() => {\n    getCatByType('5eb4f8b871d9eb3ee7bc97f5', token);\n  }, [getCatByType, token]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [skillId, setSkillId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getSkillId = id => {\n    setSkillId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSortType(value);\n    setSort(!sort);\n  };\n\n  console.log('catByTypeData', catByTypeData);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), !formVisibility ? /*#__PURE__*/React.createElement(ProjectsListing, {\n    handleFormVisibilty: handleFormVisibilty,\n    skills: data && data.result,\n    total: data && data.total,\n    handAddFormToggle: handAddFormToggle,\n    getSkillId: getSkillId,\n    isRequesting: isRequesting // UserListing={UserListing}\n    ,\n    resetSingleSkill: resetSingleSkill,\n    deleteSkill: deleteSkill,\n    sort: sort,\n    setSort: setSort,\n    setPage: setPage,\n    page: page,\n    count: count,\n    getSearchKeyword: getSearchKeyword,\n    changeStatus: changeStatus,\n    getStatus: getStatus,\n    toggleSort: toggleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(ProjectsForm, {\n    handleFormVisibilty: handleFormVisibilty,\n    isAddForm: isAddForm,\n    skillId: skillId,\n    setReloadToggle: setReloadToggle,\n    reloadToggle: reloadToggle,\n    catByTypeData: catByTypeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  data: state.skills.data,\n  isRequesting: state.skills.isRequesting,\n  isSuccess: state.skills.isSuccess,\n  isError: state.skills.isError,\n  isDeleteSuccess: state.deleteSkill.isSuccess,\n  isDeleteError: state.deleteSkill.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError,\n  catByTypeData: state.catByType.data\n});\n\nexport default connect(mapStateToProps, {\n  skills,\n  resetSingleSkill,\n  deleteSkill,\n  resetDeleteSkill,\n  changeStatus,\n  resetStatus,\n  getCatByType\n})(Project);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/pages/Project.js"],"names":["React","useState","useEffect","connect","swal","Layout","MainSidebar","SectionHeader","CategoryForm","skills","resetSingleSkill","deleteSkill","resetDeleteSkill","changeStatus","resetStatus","getCatByType","ProjectsListing","ProjectsForm","Project","data","isDeleteSuccess","isDeleteError","isChangeStatusSuccess","isChangeStatusError","isSuccess","isRequesting","catByTypeData","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","skillId","setSkillId","handleFormVisibilty","handAddFormToggle","bool","getSkillId","id","getSearchKeyword","value","getStatus","toggleSort","console","log","result","total","mapStateToProps","state","isError","catByType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport CategoryForm from '../components/categories/CategoryForm';\nimport {\n  skills,\n  resetSingleSkill,\n  deleteSkill,\n  resetDeleteSkill\n} from '../store/actions/skillsActions';\nimport {\n  changeStatus,\n  resetStatus\n} from '../store/actions/changeStatusActions';\nimport { getCatByType } from '../store/actions/categoryActions';\nimport ProjectsListing from '../components/projects/ProjectsListing';\nimport ProjectsForm from '../components/projects/ProjectsForm';\n\nconst Project = ({\n  skills,\n  data,\n  resetSingleSkill,\n  deleteSkill,\n  resetDeleteSkill,\n  isDeleteSuccess,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isSuccess,\n  isRequesting,\n  getCatByType,\n  catByTypeData\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    skills(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [\n    skills,\n    reloadToggle,\n    page,\n    sort,\n    searchKeyword,\n    isDeleteSuccess,\n    token,\n    type,\n    count,\n    sortType\n  ]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Project has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n    resetDeleteSkill();\n  }, [isDeleteSuccess, isDeleteError, resetDeleteSkill]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Project has been activated'\n          : 'Project has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    status,\n    reloadToggle,\n    resetStatus\n  ]);\n\n  useEffect(() => {\n    getCatByType('5eb4f8b871d9eb3ee7bc97f5', token);\n  }, [getCatByType, token]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [skillId, setSkillId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getSkillId = id => {\n    setSkillId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSortType(value);\n    setSort(!sort);\n  };\n\n  console.log('catByTypeData', catByTypeData);\n  return (\n    <Layout title=\"Projects\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Projects\" />\n          {!formVisibility ? (\n            <ProjectsListing\n              handleFormVisibilty={handleFormVisibilty}\n              skills={data && data.result}\n              total={data && data.total}\n              handAddFormToggle={handAddFormToggle}\n              getSkillId={getSkillId}\n              isRequesting={isRequesting}\n              // UserListing={UserListing}\n              resetSingleSkill={resetSingleSkill}\n              deleteSkill={deleteSkill}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : (\n            <ProjectsForm\n              handleFormVisibilty={handleFormVisibilty}\n              isAddForm={isAddForm}\n              skillId={skillId}\n              setReloadToggle={setReloadToggle}\n              reloadToggle={reloadToggle}\n              catByTypeData={catByTypeData}\n            />\n          )}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.skills.data,\n  isRequesting: state.skills.isRequesting,\n  isSuccess: state.skills.isSuccess,\n  isError: state.skills.isError,\n  isDeleteSuccess: state.deleteSkill.isSuccess,\n  isDeleteError: state.deleteSkill.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError,\n  catByTypeData: state.catByType.data\n});\n\nexport default connect(mapStateToProps, {\n  skills,\n  resetSingleSkill,\n  deleteSkill,\n  resetDeleteSkill,\n  changeStatus,\n  resetStatus,\n  getCatByType\n})(Project);\n"]},"metadata":{},"sourceType":"module"}