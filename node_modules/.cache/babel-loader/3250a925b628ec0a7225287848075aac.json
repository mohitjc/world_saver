{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/types/TypeForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport { isNull } from 'lodash';\nimport { typeAdd, typeUpdate, singleType, resetAddType, resetUpdateType, types } from '../../store/actions/typeActions';\n\nconst TypeForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  questions,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  questionId,\n  singleType,\n  singleTypeData,\n  resetAddType,\n  resetUpdateType\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New Type added!', '', 'success');\n      handleFormVisibilty();\n      resetAddType();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning'); // handleFormVisibilty();\n\n      resetUpdateType(); // setReloadToggle(!reloadToggle);\n    }\n\n    if (isUpdateSuccess) {\n      swal('Type updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateType();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess, handleFormVisibilty, setReloadToggle, reloadToggle, data, resetAddType, resetUpdateType]);\n  useEffect(() => {\n    if (!isAddForm) {\n      singleType(questionId, token); // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, questionId, singleType, token]); // console.log('data', data);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"View Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" type\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, errors.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst TypeFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleQuestionData\n  }) => {\n    console.log('singleQuestionData', singleQuestionData);\n    return {\n      name: singleQuestionData && singleQuestionData.name || ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    name: yupString().max(50).required()\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    console.log(values, \"values\"); // const { router } = props;\n\n    const token = localStorage.getItem('token'); // console.log('state values', values);\n\n    if (props.isAddForm) {\n      props.typeAdd({\n        name: values.name\n      }, token);\n    } else {\n      props.typeUpdate({\n        name: values.name\n      }, props.questionId, token);\n    } // resetForm();\n\n  },\n  displayName: 'QuestionForm' // helps with React DevTools\n\n})(TypeForm);\n\nconst mapStateToProps = state => ({\n  data: state.typeAdd.data,\n  isRequesting: state.typeAdd.isRequesting,\n  isUpdateRequesting: state.typeAdd.isRequesting,\n  isSuccess: state.typeAdd.isSuccess,\n  isUpdateSuccess: state.typeUpdate.isSuccess,\n  isError: state.typeAdd.isError,\n  singleQuestionData: state.type.data\n});\n\nexport default connect(mapStateToProps, {\n  typeAdd,\n  typeUpdate,\n  singleType,\n  resetAddType,\n  resetUpdateType,\n  types\n})(TypeFormFormik);","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/types/TypeForm.js"],"names":["React","useEffect","useState","connect","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","withRouter","isNull","typeAdd","typeUpdate","singleType","resetAddType","resetUpdateType","types","TypeForm","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","questions","data","isAddForm","reloadToggle","setReloadToggle","questionId","singleTypeData","token","localStorage","getItem","message","name","display","TypeFormFormik","enableReinitialize","mapPropsToValues","singleQuestionData","console","log","validationSchema","shape","max","required","props","setSubmitting","resetForm","displayName","mapStateToProps","state","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,GAAP,IACEC,MAAM,IAAIC,SADZ,EAEEC,MAAM,IAAIC,SAFZ,EAGEC,MAAM,IAAIC,SAHZ,QAIO,KAJP;AAKA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,eALF,EAMEC,KANF,QAOO,iCAPP;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,mBADgB;AAEhBC,EAAAA,YAFgB;AAGhBC,EAAAA,UAHgB;AAIhBC,EAAAA,YAJgB;AAKhBC,EAAAA,MALgB;AAMhBC,EAAAA,YANgB;AAOhBC,EAAAA,kBAPgB;AAQhBC,EAAAA,SARgB;AAShBC,EAAAA,eATgB;AAUhBC,EAAAA,OAVgB;AAWhBC,EAAAA,MAXgB;AAYhBC,EAAAA,OAZgB;AAahBC,EAAAA,SAbgB;AAchBC,EAAAA,IAdgB;AAehBC,EAAAA,SAfgB;AAgBhBC,EAAAA,YAhBgB;AAiBhBC,EAAAA,eAjBgB;AAkBhBC,EAAAA,UAlBgB;AAmBhBtB,EAAAA,UAnBgB;AAoBhBuB,EAAAA,cApBgB;AAqBhBtB,EAAAA,YArBgB;AAsBhBC,EAAAA;AAtBgB,CAAD,KAuBX;AACJ,QAAMsB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA1C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,SAAJ,EAAe;AACbjB,MAAAA,IAAI,CAAC,iBAAD,EAAoB,EAApB,EAAwB,SAAxB,CAAJ;AACAU,MAAAA,mBAAmB;AACnBJ,MAAAA,YAAY;AACZoB,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;;AACD,QAAIN,OAAJ,EAAa;AACXnB,MAAAA,IAAI,CAACuB,IAAI,IAAIA,IAAI,CAACA,IAAb,IAAqBA,IAAI,CAACA,IAAL,CAAUS,OAAhC,EAAyC,EAAzC,EAA6C,SAA7C,CAAJ,CADW,CAEX;;AACAzB,MAAAA,eAAe,GAHJ,CAIX;AACD;;AACD,QAAIW,eAAJ,EAAqB;AACnBlB,MAAAA,IAAI,CAAC,eAAD,EAAkB,EAAlB,EAAsB,SAAtB,CAAJ;AACAU,MAAAA,mBAAmB;AACnBH,MAAAA,eAAe;AACfmB,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;AACF,GAnBQ,EAmBN,CACDR,SADC,EAEDE,OAFC,EAGDD,eAHC,EAIDR,mBAJC,EAKDgB,eALC,EAMDD,YANC,EAODF,IAPC,EAQDjB,YARC,EASDC,eATC,CAnBM,CAAT;AA+BAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACmC,SAAL,EAAgB;AACdnB,MAAAA,UAAU,CAACsB,UAAD,EAAaE,KAAb,CAAV,CADc,CAEd;AACD;AACF,GALQ,EAKN,CAACL,SAAD,EAAYG,UAAZ,EAAwBtB,UAAxB,EAAoCwB,KAApC,CALM,CAAT,CAjCI,CAwCJ;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAEnB,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAEC,YADZ;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,UAAU,EAAC,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKa,SAAS,GAAG,KAAH,GAAW,MAAzB,UADF,CALF,eAQE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ,CAIE;AAJF;AAME,IAAA,KAAK,EAAEV,MAAM,CAACmB,IANhB;AAOE,IAAA,MAAM,EAAErB,UAPV;AAQE,IAAA,QAAQ,EAAEC,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYGO,MAAM,CAACa,IAAP,IAAeZ,OAAO,CAACY,IAAvB,iBACC;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGd,MAAM,CAACa,IAJV,CAbJ,CADF,CADF,CARF,eAiCE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,OAAO,EAAEvB,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAG,qBACVK,YAAY,IAAIC,kBAAhB,GACI,uBADJ,GAEI,EACL,EANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CAjCF,CADF,CAJF,CADF;AA8DD,CA/HD;;AAiIA,MAAMmB,cAAc,GAAG3C,UAAU,CAAC;AAChC4C,EAAAA,kBAAkB,EAAE,IADY;AAEhCC,EAAAA,gBAAgB,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAA4B;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,kBAAlC;AACA,WAAO;AACLL,MAAAA,IAAI,EAAGK,kBAAkB,IAAIA,kBAAkB,CAACL,IAA1C,IAAmD;AADpD,KAAP;AAGD,GAP+B;AAShCQ,EAAAA,gBAAgB,EAAE9C,SAAS,GAAG+C,KAAZ,CAAkB;AAClCT,IAAAA,IAAI,EAAEpC,SAAS,GACZ8C,GADG,CACC,EADD,EAEHC,QAFG;AAD4B,GAAlB,CATc;AAchCjC,EAAAA,YAAY,EAAE,OAAOG,MAAP,EAAe;AAAE+B,IAAAA,KAAF;AAASC,IAAAA,aAAT;AAAwBC,IAAAA;AAAxB,GAAf,KAAuD;AAGnER,IAAAA,OAAO,CAACC,GAAR,CAAY1B,MAAZ,EAAmB,QAAnB,EAHmE,CAInE;;AACA,UAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CALmE,CAMnE;;AACA,QAAIc,KAAK,CAACrB,SAAV,EAAqB;AACnBqB,MAAAA,KAAK,CAAC1C,OAAN,CACE;AACE8B,QAAAA,IAAI,EAAEnB,MAAM,CAACmB;AADf,OADF,EAIEJ,KAJF;AAMD,KAPD,MAOO;AACLgB,MAAAA,KAAK,CAACzC,UAAN,CACE;AACE6B,QAAAA,IAAI,EAAEnB,MAAM,CAACmB;AADf,OADF,EAIEY,KAAK,CAAClB,UAJR,EAKEE,KALF;AAOD,KAtBkE,CAwBnE;;AACD,GAvC+B;AAyChCmB,EAAAA,WAAW,EAAE,cAzCmB,CAyCJ;;AAzCI,CAAD,CAAV,CA0CpBvC,QA1CoB,CAAvB;;AA4CA,MAAMwC,eAAe,GAAGC,KAAK,KAAK;AAChC3B,EAAAA,IAAI,EAAE2B,KAAK,CAAC/C,OAAN,CAAcoB,IADY;AAEhCR,EAAAA,YAAY,EAAEmC,KAAK,CAAC/C,OAAN,CAAcY,YAFI;AAGhCC,EAAAA,kBAAkB,EAAEkC,KAAK,CAAC/C,OAAN,CAAcY,YAHF;AAIhCE,EAAAA,SAAS,EAAEiC,KAAK,CAAC/C,OAAN,CAAcc,SAJO;AAKhCC,EAAAA,eAAe,EAAEgC,KAAK,CAAC9C,UAAN,CAAiBa,SALF;AAMhCE,EAAAA,OAAO,EAAE+B,KAAK,CAAC/C,OAAN,CAAcgB,OANS;AAOhCmB,EAAAA,kBAAkB,EAAEY,KAAK,CAACC,IAAN,CAAW5B;AAPC,CAAL,CAA7B;;AAUA,eAAehC,OAAO,CAAC0D,eAAD,EAAkB;AACtC9C,EAAAA,OADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA,UAHsC;AAItCC,EAAAA,YAJsC;AAKtCC,EAAAA,eALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZ2B,cAPY,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\n\nimport { isNull } from 'lodash';\nimport {\n  typeAdd,\n  typeUpdate,\n  singleType,\n  resetAddType,\n  resetUpdateType,\n  types\n} from '../../store/actions/typeActions';\n\nconst TypeForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  questions,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  questionId,\n  singleType,\n  singleTypeData,\n  resetAddType,\n  resetUpdateType\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New Type added!', '', 'success');\n      handleFormVisibilty();\n      resetAddType();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      // handleFormVisibilty();\n      resetUpdateType();\n      // setReloadToggle(!reloadToggle);\n    }\n    if (isUpdateSuccess) {\n      swal('Type updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateType();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [\n    isSuccess,\n    isError,\n    isUpdateSuccess,\n    handleFormVisibilty,\n    setReloadToggle,\n    reloadToggle,\n    data,\n    resetAddType,\n    resetUpdateType\n  ]);\n\n  useEffect(() => {\n    if (!isAddForm) {\n      singleType(questionId, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, questionId, singleType, token]);\n\n  // console.log('data', data);\n\n  return (\n    <div className=\"\">\n      <button className=\"btn btn-primary mb-3\" onClick={handleFormVisibilty}>\n        View Type\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} type</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.name}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.name && touched.name && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.name}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst TypeFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleQuestionData }) => {\n    console.log('singleQuestionData', singleQuestionData);\n    return {\n      name: (singleQuestionData && singleQuestionData.name) || ''\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    name: yupString()\n      .max(50)\n      .required()\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n\n\n    console.log(values,\"values\");\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    // console.log('state values', values);\n    if (props.isAddForm) {\n      props.typeAdd(\n        {\n          name: values.name\n        },\n        token\n      );\n    } else {\n      props.typeUpdate(\n        {\n          name: values.name\n        },\n        props.questionId,\n        token\n      );\n    }\n\n    // resetForm();\n  },\n\n  displayName: 'QuestionForm' // helps with React DevTools\n})(TypeForm);\n\nconst mapStateToProps = state => ({\n  data: state.typeAdd.data,\n  isRequesting: state.typeAdd.isRequesting,\n  isUpdateRequesting: state.typeAdd.isRequesting,\n  isSuccess: state.typeAdd.isSuccess,\n  isUpdateSuccess: state.typeUpdate.isSuccess,\n  isError: state.typeAdd.isError,\n  singleQuestionData: state.type.data\n});\n\nexport default connect(mapStateToProps, {\n  typeAdd,\n  typeUpdate,\n  singleType,\n  resetAddType,\n  resetUpdateType,\n  types\n})(TypeFormFormik);\n"]},"metadata":{},"sourceType":"module"}