{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/projects/InviteModal.js\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\nimport { sendInvites } from './../../store/actions/userActions';\nimport { Media, Col } from 'reactstrap';\nimport Image from 'react-bootstrap/Image';\nimport userImg from './user.png';\n\nconst InviteModal = ({\n  isOpen,\n  handleModal,\n  userList,\n  selectedProject\n}) => {\n  const dispatch = useDispatch();\n  const [emails, set_emails] = useState([]);\n\n  const setOptions = users => {\n    const arr = [];\n\n    if (users && users.data && users.data.users) {\n      const list = users.data.users;\n      list.map(user => {\n        if (user.email) {\n          arr.push({\n            id: user.id,\n            value: user.email,\n            label: user.fullName\n          });\n        }\n      });\n    }\n\n    return arr;\n  };\n\n  const setEmails = value => {\n    set_emails(value);\n  };\n\n  const sendInvite = () => {\n    dispatch(sendInvites({\n      projectId: selectedProject,\n      users: emails\n    }, res => {\n      if (res) {\n        swal('Invites sent successfully !!!', {\n          buttons: false,\n          timer: 1500\n        });\n        handleModal();\n      }\n    }));\n  };\n\n  const CustomOption = props => {\n    const {\n      innerProps,\n      innerRef\n    } = props;\n    return /*#__PURE__*/React.createElement(Media, Object.assign({\n      ref: innerRef\n    }, innerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      left: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: userImg,\n      roundedCircle: true,\n      className: \"invite-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      heading: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \" \", props.data.label), props.data.value));\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: isOpen,\n    onHide: handleModal,\n    dialogClassName: \"modal-90w\",\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Select User Emails\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: setOptions(userList),\n    isMulti: true,\n    onChange: e => setEmails(e),\n    components: {\n      Option: CustomOption\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: sendInvite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Send Invite\")));\n};\n\nexport default InviteModal;","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/projects/InviteModal.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","Modal","Select","swal","sendInvites","Media","Col","Image","userImg","InviteModal","isOpen","handleModal","userList","selectedProject","dispatch","emails","set_emails","setOptions","users","arr","data","list","map","user","email","push","id","value","label","fullName","setEmails","sendInvite","projectId","res","buttons","timer","CustomOption","props","innerProps","innerRef","e","Option"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,YAA3B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA;AAAjC,CAAD,KAAwD;AAC1E,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,MAAD,EAASC,UAAT,IAAuBpB,QAAQ,CAAC,EAAD,CAArC;;AACA,QAAMqB,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,GAAG,GAAG,EAAZ;;AACA,QAAID,KAAK,IAAIA,KAAK,CAACE,IAAf,IAAuBF,KAAK,CAACE,IAAN,CAAWF,KAAtC,EAA6C;AAC3C,YAAMG,IAAI,GAAGH,KAAK,CAACE,IAAN,CAAWF,KAAxB;AACAG,MAAAA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAU;AACjB,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACdL,UAAAA,GAAG,CAACM,IAAJ,CAAS;AACPC,YAAAA,EAAE,EAAEH,IAAI,CAACG,EADF;AAEPC,YAAAA,KAAK,EAAEJ,IAAI,CAACC,KAFL;AAGPI,YAAAA,KAAK,EAAEL,IAAI,CAACM;AAHL,WAAT;AAKD;AACF,OARD;AASD;;AACD,WAAOV,GAAP;AACD,GAfD;;AAgBA,QAAMW,SAAS,GAAIH,KAAD,IAAW;AAC3BX,IAAAA,UAAU,CAACW,KAAD,CAAV;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACvBjB,IAAAA,QAAQ,CACNV,WAAW,CAAC;AAAE4B,MAAAA,SAAS,EAAEnB,eAAb;AAA8BK,MAAAA,KAAK,EAAEH;AAArC,KAAD,EAAiDkB,GAAD,IAAS;AAClE,UAAIA,GAAJ,EAAS;AACP9B,QAAAA,IAAI,CAAC,+BAAD,EAAkC;AACpC+B,UAAAA,OAAO,EAAE,KAD2B;AAEpCC,UAAAA,KAAK,EAAE;AAF6B,SAAlC,CAAJ;AAIAxB,QAAAA,WAAW;AACZ;AACF,KARU,CADL,CAAR;AAWD,GAZD;;AAaA,QAAMyB,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA2BF,KAAjC;AACA,wBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEE;AAAZ,OAA0BD,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE9B,OAAZ;AAAqB,MAAA,aAAa,MAAlC;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiB6B,KAAK,CAACjB,IAAN,CAAWQ,KAA5B,CADF,EAEGS,KAAK,CAACjB,IAAN,CAAWO,KAFd,CAJF,CADF;AAWD,GAbD;;AAeA,sBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEjB,MADR;AAEE,IAAA,MAAM,EAAEC,WAFV;AAGE,IAAA,eAAe,EAAC,WAHlB;AAIE,IAAA,QAAQ,EAAC,QAJX;AAKE,IAAA,QAAQ,EAAE,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAPF,eAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEM,UAAU,CAACL,QAAD,CADrB;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,QAAQ,EAAG4B,CAAD,IAAOV,SAAS,CAACU,CAAD,CAH5B;AAIE,IAAA,UAAU,EAAE;AAAEC,MAAAA,MAAM,EAAEL;AAAV,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,eAkBE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEzB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEoB,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAlBF,CADF;AA6BD,CA/ED;;AAiFA,eAAetB,WAAf","sourcesContent":["// import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport Select from 'react-select';\nimport swal from 'sweetalert';\nimport { sendInvites } from './../../store/actions/userActions';\nimport { Media, Col } from 'reactstrap';\nimport Image from 'react-bootstrap/Image';\nimport userImg from './user.png';\nconst InviteModal = ({ isOpen, handleModal, userList, selectedProject }) => {\n  const dispatch = useDispatch();\n  const [emails, set_emails] = useState([]);\n  const setOptions = (users) => {\n    const arr = [];\n    if (users && users.data && users.data.users) {\n      const list = users.data.users;\n      list.map((user) => {\n        if (user.email) {\n          arr.push({\n            id: user.id,\n            value: user.email,\n            label: user.fullName,\n          });\n        }\n      });\n    }\n    return arr;\n  };\n  const setEmails = (value) => {\n    set_emails(value);\n  };\n  const sendInvite = () => {\n    dispatch(\n      sendInvites({ projectId: selectedProject, users: emails }, (res) => {\n        if (res) {\n          swal('Invites sent successfully !!!', {\n            buttons: false,\n            timer: 1500,\n          });\n          handleModal();\n        }\n      })\n    );\n  };\n  const CustomOption = (props) => {\n    const { innerProps, innerRef } = props;\n    return (\n      <Media ref={innerRef} {...innerProps}>\n        <Media left>\n          <Image src={userImg} roundedCircle className=\"invite-img\" />\n        </Media>\n        <Media body>\n          <Media heading> {props.data.label}</Media>\n          {props.data.value}\n        </Media>\n      </Media>\n    );\n  };\n\n  return (\n    <Modal\n      show={isOpen}\n      onHide={handleModal}\n      dialogClassName=\"modal-90w\"\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Select User Emails</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Select\n          options={setOptions(userList)}\n          isMulti\n          onChange={(e) => setEmails(e)}\n          components={{ Option: CustomOption }}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={sendInvite}>\n          Send Invite\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default InviteModal;\n"]},"metadata":{},"sourceType":"module"}