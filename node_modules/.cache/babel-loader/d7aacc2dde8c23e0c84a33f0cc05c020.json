{"ast":null,"code":"/**\n * @description :  This file has user CRUD related functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, USER_ADD, USER_API, GET_USERS, USER_UPDATE, GET_SINGLE_USER, DELETE_SINGLE_USER, GET_USERS_FOR_INVITE, GET_USERS_LIST_API, SEND_USERS_INVITATION_API, ALL_POST, DELETE_POST, DELETE_SINGLE_BLOG, GET_POSTS, POST_API, DELETE_POST_USER } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\nexport function userAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(USER_ADD.USER_ADD_REQUEST));\n    const getUrl = USER_API;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(USER_ADD.USER_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(USER_ADD.USER_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function userUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(USER_UPDATE.USER_UPDATE_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(USER_UPDATE.USER_UPDATE_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(USER_UPDATE.USER_UPDATE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function users(token, type, page, count, sortType, roles, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_USERS.GET_USERS_REQUEST));\n    const getUrl = `${USER_API}?type=${type}&search=${search}&page=${page}&count=${10}&roles=${roles}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(GET_USERS.GET_USERS_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_USERS.GET_USERS_RESET, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function posts(token, type, page, count, sortType, roles, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_POSTS.GET_POSTS_REQUEST));\n    const getUrl = `${POST_API}?type=${type}&search=${search}&page=${page}&count=${10}&roles=${roles}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      console.log(data, 'resultdata');\n\n      if (data.success) {\n        console.log(data.success, 'data.success');\n        dispatch(getSuccess(GET_POSTS.GET_POSTS_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_POSTS.GET_POSTS_RESET, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function singleUser(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_USER.GET_SINGLE_USER_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(GET_SINGLE_USER.GET_SINGLE_USER_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_SINGLE_USER.GET_SINGLE_USER_RESET, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function deleteUser(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_USER.DELETE_SINGLE_USER_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(DELETE_SINGLE_USER.DELETE_SINGLE_USER_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_SINGLE_USER.DELETE_SINGLE_USER_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function deletePost(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_POST_USER.DELETE_POST_USER_REQUEST));\n    const getUrl = `${POST_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(DELETE_POST_USER.DELETE_POST_USER_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_POST_USER.DELETE_POST_USER_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function resetDeleteUser() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_USER.DELETE_SINGLE_USER_RESET));\n  };\n}\nexport function resetAddUser() {\n  return dispatch => {\n    dispatch(reset(USER_ADD.USER_ADD_RESET));\n  };\n}\nexport function resetSingleUser() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_USER.GET_SINGLE_USER_RESET));\n  };\n}\nexport function resetUpdateUser() {\n  return dispatch => {\n    dispatch(reset(USER_UPDATE.USER_UPDATE_RESET));\n  };\n}\nexport function usersList() {\n  return dispatch => {\n    dispatch(getRequest(GET_USERS_FOR_INVITE.REQUEST));\n    const getUrl = GET_USERS_LIST_API;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(GET_USERS_FOR_INVITE.SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_USERS_FOR_INVITE.FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // export function allPost() {\n//   return (dispatch) => {\n//     dispatch(getRequest(GET_USERS_FOR_INVITE.REQUEST));\n//     const getUrl = `${ALL_POST}/allposts`;\n//     const token = localStorage.getItem('token');\n//     const config = { headers: { Authorization: `Bearer ${token}` } };\n//     AXIOS_INSTANCE.get(getUrl, config)\n//       .then(checkHttpStatus)\n//       .then(parseJSON)\n//       .then((data) => {\n//         if (data.success) {\n//           dispatch(getSuccess(GET_USERS_FOR_INVITE.SUCCESS, data));\n//         }\n//       })\n//       .catch((error) => {\n//         const errorMessage =\n//           error.response &&\n//           error.response.data &&\n//           error.response.data.error_description\n//             ? error.response.data.error_description\n//             : 'Something went wrong!';\n//         dispatch(\n//           getFailure(GET_USERS_FOR_INVITE.FAILURE, {\n//             data: {\n//               statusCode: 403,\n//               // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n//               message: errorMessage,\n//             },\n//           })\n//         );\n//       });\n//   };\n// }\n// export function deletePost(obj, token) {\n//   return dispatch => {\n//     dispatch(getRequest(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_REQUEST));\n//     const getUrl = `${DELETE_POST}`;\n//     const config = { headers: { Authorization: `Bearer ${token}` }, data: obj };\n//     AXIOS_INSTANCE.delete(getUrl, config)\n//       .then(checkHttpStatus)\n//       .then(parseJSON)\n//       .then(data => {\n//         // console.log('deleteUser', data);\n//         if (data.success) {\n//           dispatch(\n//             getSuccess(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_SUCCESS, data.data)\n//           );\n//         }\n//       })\n//       .catch(error => {\n//         // console.log('error', error.response);\n//         const errorMessage =\n//           error.response &&\n//           error.response.data &&\n//           error.response.data.error_description\n//             ? error.response.data.error_description\n//             : 'Something went wrong!';\n//         dispatch(\n//           getFailure(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_FAILURE, {\n//             data: {\n//               statusCode: 403,\n//               message: errorMessage\n//             }\n//           })\n//         );\n//       });\n//   };\n// }\n\nexport function sendInvites(postObj, cb) {\n  return dispatch => {\n    const getUrl = SEND_USERS_INVITATION_API;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        return cb(true); // dispatch(getSuccess(USER_ADD.USER_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(USER_ADD.USER_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/userActions.js"],"names":["AXIOS_INSTANCE","USER_ADD","USER_API","GET_USERS","USER_UPDATE","GET_SINGLE_USER","DELETE_SINGLE_USER","GET_USERS_FOR_INVITE","GET_USERS_LIST_API","SEND_USERS_INVITATION_API","ALL_POST","DELETE_POST","DELETE_SINGLE_BLOG","GET_POSTS","POST_API","DELETE_POST_USER","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","userAdd","postObj","token","dispatch","USER_ADD_REQUEST","getUrl","config","headers","Authorization","post","then","data","success","USER_ADD_SUCCESS","catch","error","errorMessage","response","message","USER_ADD_FAILURE","statusCode","userUpdate","obj","id","USER_UPDATE_REQUEST","put","USER_UPDATE_SUCCESS","error_description","USER_UPDATE_FAILURE","users","type","page","count","sortType","roles","sort","search","GET_USERS_REQUEST","get","GET_USERS_SUCCESS","GET_USERS_RESET","posts","GET_POSTS_REQUEST","console","log","GET_POSTS_SUCCESS","GET_POSTS_RESET","singleUser","GET_SINGLE_USER_REQUEST","GET_SINGLE_USER_SUCCESS","GET_SINGLE_USER_RESET","deleteUser","DELETE_SINGLE_USER_REQUEST","delete","DELETE_SINGLE_USER_SUCCESS","DELETE_SINGLE_USER_FAILURE","deletePost","DELETE_POST_USER_REQUEST","DELETE_POST_USER_SUCCESS","DELETE_POST_USER_FAILURE","resetDeleteUser","DELETE_SINGLE_USER_RESET","resetAddUser","USER_ADD_RESET","resetSingleUser","resetUpdateUser","USER_UPDATE_RESET","usersList","REQUEST","localStorage","getItem","SUCCESS","FAILURE","sendInvites","cb"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has user CRUD related functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  USER_ADD,\n  USER_API,\n  GET_USERS,\n  USER_UPDATE,\n  GET_SINGLE_USER,\n  DELETE_SINGLE_USER,\n  GET_USERS_FOR_INVITE,\n  GET_USERS_LIST_API,\n  SEND_USERS_INVITATION_API,\n  ALL_POST,\n  DELETE_POST,\n  DELETE_SINGLE_BLOG,\n  GET_POSTS,\n  POST_API,\n  DELETE_POST_USER,\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\n\nexport function userAdd(postObj, token) {\n  return (dispatch) => {\n    dispatch(getRequest(USER_ADD.USER_ADD_REQUEST));\n    const getUrl = USER_API;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(getSuccess(USER_ADD.USER_ADD_SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(USER_ADD.USER_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function userUpdate(obj, id, token) {\n  return (dispatch) => {\n    dispatch(getRequest(USER_UPDATE.USER_UPDATE_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(getSuccess(USER_UPDATE.USER_UPDATE_SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(USER_UPDATE.USER_UPDATE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function users(token, type, page, count, sortType, roles, sort, search) {\n  return (dispatch) => {\n    dispatch(getRequest(GET_USERS.GET_USERS_REQUEST));\n    const getUrl = `${USER_API}?type=${type}&search=${search}&page=${page}&count=${10}&roles=${roles}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(getSuccess(GET_USERS.GET_USERS_SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_USERS.GET_USERS_RESET, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function posts(token, type, page, count, sortType, roles, sort, search) {\n  return (dispatch) => {\n    dispatch(getRequest(GET_POSTS.GET_POSTS_REQUEST));\n    const getUrl = `${POST_API}?type=${type}&search=${search}&page=${page}&count=${10}&roles=${roles}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        console.log(data, 'resultdata');\n\n        if (data.success) {\n          console.log(data.success, 'data.success');\n          dispatch(getSuccess(GET_POSTS.GET_POSTS_SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_POSTS.GET_POSTS_RESET, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function singleUser(id, token) {\n  return (dispatch) => {\n    dispatch(getRequest(GET_SINGLE_USER.GET_SINGLE_USER_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(\n            getSuccess(GET_SINGLE_USER.GET_SINGLE_USER_SUCCESS, data.data)\n          );\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_SINGLE_USER.GET_SINGLE_USER_RESET, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function deleteUser(id, token) {\n  return (dispatch) => {\n    dispatch(getRequest(DELETE_SINGLE_USER.DELETE_SINGLE_USER_REQUEST));\n    const getUrl = `${USER_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(\n            getSuccess(DELETE_SINGLE_USER.DELETE_SINGLE_USER_SUCCESS, data.data)\n          );\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_SINGLE_USER.DELETE_SINGLE_USER_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function deletePost(id, token) {\n  return (dispatch) => {\n    dispatch(getRequest(DELETE_POST_USER.DELETE_POST_USER_REQUEST));\n    const getUrl = `${POST_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(\n            getSuccess(DELETE_POST_USER.DELETE_POST_USER_SUCCESS, data.data)\n          );\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_POST_USER.DELETE_POST_USER_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\nexport function resetDeleteUser() {\n  return (dispatch) => {\n    dispatch(reset(DELETE_SINGLE_USER.DELETE_SINGLE_USER_RESET));\n  };\n}\n\nexport function resetAddUser() {\n  return (dispatch) => {\n    dispatch(reset(USER_ADD.USER_ADD_RESET));\n  };\n}\n\nexport function resetSingleUser() {\n  return (dispatch) => {\n    dispatch(reset(GET_SINGLE_USER.GET_SINGLE_USER_RESET));\n  };\n}\n\nexport function resetUpdateUser() {\n  return (dispatch) => {\n    dispatch(reset(USER_UPDATE.USER_UPDATE_RESET));\n  };\n}\n\nexport function usersList() {\n  return (dispatch) => {\n    dispatch(getRequest(GET_USERS_FOR_INVITE.REQUEST));\n    const getUrl = GET_USERS_LIST_API;\n    const token = localStorage.getItem('token');\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          dispatch(getSuccess(GET_USERS_FOR_INVITE.SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_USERS_FOR_INVITE.FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n\n// export function allPost() {\n//   return (dispatch) => {\n//     dispatch(getRequest(GET_USERS_FOR_INVITE.REQUEST));\n//     const getUrl = `${ALL_POST}/allposts`;\n\n//     const token = localStorage.getItem('token');\n//     const config = { headers: { Authorization: `Bearer ${token}` } };\n//     AXIOS_INSTANCE.get(getUrl, config)\n//       .then(checkHttpStatus)\n//       .then(parseJSON)\n//       .then((data) => {\n//         if (data.success) {\n//           dispatch(getSuccess(GET_USERS_FOR_INVITE.SUCCESS, data));\n//         }\n//       })\n//       .catch((error) => {\n//         const errorMessage =\n//           error.response &&\n//           error.response.data &&\n//           error.response.data.error_description\n//             ? error.response.data.error_description\n//             : 'Something went wrong!';\n//         dispatch(\n//           getFailure(GET_USERS_FOR_INVITE.FAILURE, {\n//             data: {\n//               statusCode: 403,\n//               // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n//               message: errorMessage,\n//             },\n//           })\n//         );\n//       });\n//   };\n// }\n\n// export function deletePost(obj, token) {\n//   return dispatch => {\n//     dispatch(getRequest(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_REQUEST));\n//     const getUrl = `${DELETE_POST}`;\n//     const config = { headers: { Authorization: `Bearer ${token}` }, data: obj };\n//     AXIOS_INSTANCE.delete(getUrl, config)\n//       .then(checkHttpStatus)\n//       .then(parseJSON)\n//       .then(data => {\n//         // console.log('deleteUser', data);\n//         if (data.success) {\n//           dispatch(\n//             getSuccess(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_SUCCESS, data.data)\n//           );\n//         }\n//       })\n//       .catch(error => {\n//         // console.log('error', error.response);\n//         const errorMessage =\n//           error.response &&\n//           error.response.data &&\n//           error.response.data.error_description\n//             ? error.response.data.error_description\n//             : 'Something went wrong!';\n//         dispatch(\n//           getFailure(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_FAILURE, {\n//             data: {\n//               statusCode: 403,\n//               message: errorMessage\n//             }\n//           })\n//         );\n//       });\n//   };\n// }\n\n\nexport function sendInvites(postObj, cb) {\n  return (dispatch) => {\n    const getUrl = SEND_USERS_INVITATION_API;\n    const token = localStorage.getItem('token');\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then((data) => {\n        if (data.success) {\n          return cb(true);\n          // dispatch(getSuccess(USER_ADD.USER_ADD_SUCCESS, data));\n        }\n      })\n      .catch((error) => {\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(USER_ADD.USER_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage,\n            },\n          })\n        );\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}