{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/global/LocationSearchInput.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      const {\n        getAddressDetails\n      } = this.props;\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n        getAddressDetails({\n          address,\n          latLng\n        }); // this.setState({ lat: latLng.lat, lng: latLng.lng });\n\n        console.log('Success', latLng);\n      }).catch(error => console.error('Error', error));\n      this.setState({\n        address\n      });\n    };\n\n    console.log('LocationSearchInput', props);\n    this.state = {\n      address: props.value,\n      lat: null,\n      lng: null\n    };\n  }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     address: nextProps.value\n  //   };\n  // }\n  componentDidUpdate(nextProps) {\n    const {\n      value\n    } = this.props;\n\n    if (nextProps.value !== value) {\n      if (value) {\n        this.setState({\n          address: value\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      className: \"form-control location-search-input\",\n      name: \"address\"\n    }, getInputProps({\n      placeholder: 'Search Places ...'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active dropdown-item' : 'suggestion-item dropdown-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, suggestion.description));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/global/LocationSearchInput.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","Component","constructor","props","handleChange","address","setState","handleSelect","getAddressDetails","then","results","latLng","console","log","catch","error","state","value","lat","lng","componentDidUpdate","nextProps","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","className","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\n\nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('LocationSearchInput', props);\n    this.state = { address: props.value, lat: null, lng: null };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     address: nextProps.value\n  //   };\n  // }\n\n  componentDidUpdate(nextProps) {\n    const { value } = this.props;\n    if (nextProps.value !== value) {\n      if (value) {\n        this.setState({ address: value });\n      }\n    }\n  }\n\n  handleSelect = address => {\n    const { getAddressDetails } = this.props;\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        getAddressDetails({\n          address,\n          latLng\n        });\n        // this.setState({ lat: latLng.lat, lng: latLng.lng });\n        console.log('Success', latLng);\n      })\n      .catch(error => console.error('Error', error));\n    this.setState({ address });\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              className=\"form-control location-search-input\"\n              name=\"address\"\n              {...getInputProps({\n                placeholder: 'Search Places ...'\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active dropdown-item'\n                  : 'suggestion-item dropdown-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}