{"ast":null,"code":"/*\n * @file: index.js\n * @description: It Contain rest functions for api call .\n * @author: Poonam\n */\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport { setAuthorizationToken } from './auth'; // import { ToastsStore } from 'react-toasts';\n\nimport { API_SLUG } from '../store/constants';\nimport load from '../methods/load';\nvar config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nvar baseUrl = API_SLUG;\n\nconst handleError = status => {\n  if (status == 400) {// ToastsStore.error('Not Found');\n  }\n\n  if (status == 500) {// ToastsStore.error('Error');\n  } else if (status == 404) {// ToastsStore.error('Server Error');\n  }\n};\n\nclass ApiClient {\n  static post(url1, params, base = '') {\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.post(url, JSON.stringify(params), config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        load(false);\n\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n\n  static put(url1, params, base = '') {\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.put(url, JSON.stringify(params), config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n\n  static get(url1, params, base = '') {\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    let query = querystring.stringify(params);\n    url = query ? `${url}?${query}` : url;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.get(url, config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n\n  static delete(url1, base = '') {\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.delete(url, config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n  /*************** Form-Data Method ***********/\n\n\n  static postFormData(url, params, token = '') {\n    url = baseUrl + url;\n    config.headers['Content-Type'] = 'multipart/form-data';\n    return new Promise(function (fulfill, reject) {\n      var body = new FormData();\n      body.append('file', params);\n      axios.post(url, body, config).then(function (response) {\n        fulfill({\n          status: response.status,\n          data: response\n        });\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n\n}\n\nexport default ApiClient;","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/apiClient.js"],"names":["axios","querystring","setAuthorizationToken","API_SLUG","load","config","headers","baseUrl","handleError","status","ApiClient","post","url1","params","base","url","Promise","fulfill","reject","JSON","stringify","then","response","catch","error","eres","put","get","query","delete","postFormData","token","body","FormData","append","data"],"mappings":"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","sourcesContent":["/*\n * @file: index.js\n * @description: It Contain rest functions for api call .\n * @author: Poonam\n */\n\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport { setAuthorizationToken } from './auth';\n// import { ToastsStore } from 'react-toasts';\nimport { API_SLUG } from '../store/constants';\nimport load from '../methods/load';\n\nvar config = {\n    headers: { 'Content-Type': 'application/json' },\n};\n\nvar baseUrl = API_SLUG\n\n\nconst handleError = (status) => {\n    if (status == 400) {\n        // ToastsStore.error('Not Found');\n    } if (status == 500) {\n        // ToastsStore.error('Error');\n    } else if (status == 404) {\n        // ToastsStore.error('Server Error');\n    }\n}\n\nclass ApiClient {\n    static post(url1, params, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .post(url, JSON.stringify(params), config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static put(url1, params, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .put(url, JSON.stringify(params), config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static get(url1, params, base = '') {\n\n        let url = baseUrl + url1\n        if (base) url = base + url1\n\n        let query = querystring.stringify(params);\n        url = query ? `${url}?${query}` : url;\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .get(url, config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static delete(url1, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .delete(url, config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    /*************** Form-Data Method ***********/\n    static postFormData(url, params, token = '') {\n        url = baseUrl + url\n        config.headers['Content-Type'] = 'multipart/form-data';\n        return new Promise(function (fulfill, reject) {\n            var body = new FormData();\n            body.append('file', params);\n\n            axios\n                .post(url, body, config)\n\n                .then(function (response) {\n                    fulfill({ status: response.status, data: response });\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n}\n\nexport default ApiClient;\n"]},"metadata":{},"sourceType":"module"}