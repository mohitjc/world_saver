{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/projects/ProjectsForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport { isNull } from 'lodash';\nimport { skillAdd, skillUpdate, singleSkill, resetAddSkill, resetUpdateSkill, skills } from '../../store/actions/skillsActions';\nimport ImageUpload from '../global/ImageUpload';\nimport LocationSearchInput from '../global/LocationSearchInput';\nimport BannerImageUpload from '../global/BannerImageUpload';\nimport { countryList } from '../../store/constants';\nimport ApiClient from '../apiClient';\n\nconst ProjectForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  skills,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  skillId,\n  singleSkill,\n  singleSkillData,\n  resetAddSkill,\n  resetUpdateSkill,\n  setFieldValue,\n  catByTypeData\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New Project added!', '', 'success');\n      handleFormVisibilty();\n      resetAddSkill();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      resetUpdateSkill();\n    }\n\n    if (isUpdateSuccess) {\n      swal('Project updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateSkill();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess, handleFormVisibilty, resetAddSkill, setReloadToggle, reloadToggle, data, resetUpdateSkill]);\n  useEffect(() => {\n    getCategory();\n\n    if (!isAddForm) {\n      singleSkill(skillId, token); // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, singleSkill, skillId, token]); // console.log('data', data);\n\n  const [imageType, setImageType] = useState(null);\n  const [category, setCategory] = useState();\n\n  const getImage = value => {\n    console.log('getImage', value);\n\n    if (imageType === 'Add banner') {\n      setFieldValue('banner_image', value);\n    }\n\n    if (imageType === 'Add Project image') {\n      setFieldValue('image', value);\n    }\n  };\n\n  const getAddressDetails = value => {\n    // console.log('address', value.latLng);\n    setFieldValue('address', value.address);\n    setFieldValue('lat', value.latLng.lat);\n    setFieldValue('lng', value.latLng.lng);\n  };\n\n  const getCategory = () => {\n    ApiClient.get('/allcategory', {\n      page: 1,\n      count: 500\n    }).then(res => {\n      if (res.data.success) {\n        setCategory(res.data.data.category);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"View Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" Projects\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImageUpload, {\n    imageType: imageType,\n    getImage: getImage,\n    type: \"projects\",\n    value: values.image,\n    placeholder: \"Add Project image\",\n    setImageType: setImageType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ImageUpload, {\n    imageType: imageType,\n    getImage: getImage,\n    value: values.banner_image,\n    type: \"projects\",\n    placeholder: \"Add banner\",\n    setImageType: setImageType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, errors.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control\",\n    value: values.category,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, \"Select category\"), category && category.map(item => {\n    if (item.category == 'project') {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 31\n        }\n      }, item.name);\n    }\n  })), errors.category && touched.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, \"Please select type\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-8 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control fit-height\",\n    name: \"description\",\n    rows: \"4\",\n    cols: \"50\",\n    value: values.description,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), errors.description && touched.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, errors.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-8 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(LocationSearchInput, {\n    getAddressDetails: getAddressDetails,\n    value: values.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }), errors.address && touched.address && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"country\",\n    className: \"form-control\",\n    value: values.country,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, \"Select country\"), countryList.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, item))), errors.country && touched.country && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, errors.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.city,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }), errors.city && touched.city && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, errors.city)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst ProjectFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleSkillData\n  }) => {\n    console.log('singleSkillData', singleSkillData);\n    return {\n      name: singleSkillData && singleSkillData.name || '',\n      description: singleSkillData && singleSkillData.description || '',\n      category: singleSkillData && singleSkillData.category || '',\n      image: singleSkillData && singleSkillData.image || '',\n      banner_image: singleSkillData && singleSkillData.banner_image || '',\n      address: singleSkillData && singleSkillData.address || '',\n      lat: singleSkillData && singleSkillData.lat || '',\n      lng: singleSkillData && singleSkillData.lat || '',\n      city: singleSkillData && singleSkillData.city || '',\n      country: singleSkillData && singleSkillData.country || ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    name: yupString().max(50).required(),\n    description: yupString().required(),\n    category: yupString().required(),\n    address: yupString().required(),\n    city: yupString().required(),\n    country: yupString().required()\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    console.log('state values', values);\n\n    if (props.isAddForm) {\n      props.skillAdd({\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        address: values.address,\n        city: values.city,\n        country: values.country,\n        lat: values.lat,\n        lng: values.lng,\n        image: values.image,\n        banner_image: values.banner_image\n      }, token);\n    } else {\n      props.skillUpdate({\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        address: values.address,\n        city: values.city,\n        country: values.country,\n        lat: values.lat,\n        lng: values.lng,\n        image: values.image,\n        banner_image: values.banner_image,\n        id: props.skillId\n      }, props.skillId, token);\n    }\n\n    resetForm();\n  },\n  displayName: 'ProjectForm' // helps with React DevTools\n\n})(ProjectForm);\n\nconst mapStateToProps = state => ({\n  data: state.skillsAdd.data,\n  isRequesting: state.skillsAdd.isRequesting,\n  isUpdateRequesting: state.skillsUpdate.isRequesting,\n  isSuccess: state.skillsAdd.isSuccess,\n  isUpdateSuccess: state.skillsUpdate.isSuccess,\n  isError: state.skillsAdd.isError,\n  singleSkillData: state.skill.data\n});\n\nexport default connect(mapStateToProps, {\n  skillAdd,\n  skillUpdate,\n  singleSkill,\n  resetAddSkill,\n  resetUpdateSkill,\n  skills\n})(ProjectFormFormik);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/projects/ProjectsForm.js"],"names":["React","useEffect","useState","connect","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","withRouter","isNull","skillAdd","skillUpdate","singleSkill","resetAddSkill","resetUpdateSkill","skills","ImageUpload","LocationSearchInput","BannerImageUpload","countryList","ApiClient","ProjectForm","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","data","isAddForm","reloadToggle","setReloadToggle","skillId","singleSkillData","setFieldValue","catByTypeData","token","localStorage","getItem","message","getCategory","imageType","setImageType","category","setCategory","getImage","value","console","log","getAddressDetails","address","latLng","lat","lng","get","page","count","then","res","success","image","banner_image","name","display","map","item","id","description","country","city","ProjectFormFormik","enableReinitialize","mapPropsToValues","validationSchema","shape","max","required","props","setSubmitting","resetForm","displayName","mapStateToProps","state","skillsAdd","skillsUpdate","skill"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\n\nimport { isNull } from 'lodash';\nimport {\n  skillAdd,\n  skillUpdate,\n  singleSkill,\n  resetAddSkill,\n  resetUpdateSkill,\n  skills\n} from '../../store/actions/skillsActions';\nimport ImageUpload from '../global/ImageUpload';\nimport LocationSearchInput from '../global/LocationSearchInput';\nimport BannerImageUpload from '../global/BannerImageUpload';\nimport { countryList } from '../../store/constants';\nimport ApiClient from '../apiClient';\n\nconst ProjectForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  skills,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  skillId,\n  singleSkill,\n  singleSkillData,\n  resetAddSkill,\n  resetUpdateSkill,\n  setFieldValue,\n  catByTypeData\n}) => {\n  const token = localStorage.getItem('token');\n\n\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New Project added!', '', 'success');\n      handleFormVisibilty();\n      resetAddSkill();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      resetUpdateSkill();\n    }\n    if (isUpdateSuccess) {\n      swal('Project updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateSkill();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [\n    isSuccess,\n    isError,\n    isUpdateSuccess,\n    handleFormVisibilty,\n    resetAddSkill,\n    setReloadToggle,\n    reloadToggle,\n    data,\n    resetUpdateSkill\n  ]);\n\n  useEffect(() => {\n    getCategory()\n    if (!isAddForm) {\n      singleSkill(skillId, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, singleSkill, skillId, token]);\n\n  // console.log('data', data);\n\n  const [imageType, setImageType] = useState(null);\n  const [category, setCategory] = useState();\n\n  const getImage = value => {\n    console.log('getImage', value);\n    if (imageType === 'Add banner') {\n      setFieldValue('banner_image', value);\n    }\n    if (imageType === 'Add Project image') {\n      setFieldValue('image', value);\n    }\n  };\n\n  const getAddressDetails = value => {\n    // console.log('address', value.latLng);\n    setFieldValue('address', value.address);\n    setFieldValue('lat', value.latLng.lat);\n    setFieldValue('lng', value.latLng.lng);\n  };\n\n  const getCategory=()=>{\n    ApiClient.get('/allcategory',{page:1,count:500}).then(res=>{\n      if(res.data.success){\n        setCategory(res.data.data.category)\n      }\n    })\n  }\n\n  return (\n    <div className=\"\">\n      <button className=\"btn btn-primary mb-3\" onClick={handleFormVisibilty}>\n        View Projects\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} Projects</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"d-flex\">\n              <ImageUpload\n                imageType={imageType}\n                getImage={getImage}\n                type=\"projects\"\n                value={values.image}\n                placeholder=\"Add Project image\"\n                setImageType={setImageType}\n              />\n              <div className=\"ml-4\">\n                <ImageUpload\n                  imageType={imageType}\n                  getImage={getImage}\n                  value={values.banner_image}\n                  type=\"projects\"\n                  placeholder=\"Add banner\"\n                  setImageType={setImageType}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.name}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.name && touched.name && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.name}\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Category</label>\n                <select\n                  name=\"category\"\n                  className=\"form-control\"\n                  value={values.category}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option>Select category</option>\n                  {category &&\n                    category.map(item => {\n                      if(item.category=='project'){\n                       return <option value={item.id}>{item.name}</option>\n                      }\n                      \n                    })}\n\n                  {/* {allTypes &&\n                    allTypes.result.map(item => (\n                      <option value={item.id}>{item.name}</option>\n                    ))} */}\n                </select>\n                {errors.category && touched.category && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    Please select type\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-8 col-12\">\n                <label>Description</label>\n                <textarea\n                  className=\"form-control fit-height\"\n                  name=\"description\"\n                  rows=\"4\"\n                  cols=\"50\"\n                  value={values.description}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.description && touched.description && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.description}\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-8 col-12\">\n                <label>Address</label>\n                <LocationSearchInput\n                  getAddressDetails={getAddressDetails}\n                  value={values.address}\n                />\n                {errors.address && touched.address && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.address}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Country</label>\n                <select\n                  name=\"country\"\n                  className=\"form-control\"\n                  value={values.country}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option>Select country</option>\n                  {countryList.map(item => (\n                    <option value={item} key={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n\n                {errors.country && touched.country && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.country}\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 col-12\">\n                <label>City</label>\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.city}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.city && touched.city && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.city}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst ProjectFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleSkillData }) => {\n    console.log('singleSkillData', singleSkillData);\n    return {\n      name: (singleSkillData && singleSkillData.name) || '',\n      description: (singleSkillData && singleSkillData.description) || '',\n      category: (singleSkillData && singleSkillData.category) || '',\n      image: (singleSkillData && singleSkillData.image) || '',\n      banner_image: (singleSkillData && singleSkillData.banner_image) || '',\n      address: (singleSkillData && singleSkillData.address) || '',\n      lat: (singleSkillData && singleSkillData.lat) || '',\n      lng: (singleSkillData && singleSkillData.lat) || '',\n      city: (singleSkillData && singleSkillData.city) || '',\n      country: (singleSkillData && singleSkillData.country) || ''\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    name: yupString()\n      .max(50)\n      .required(),\n    description: yupString().required(),\n    category: yupString().required(),\n    address: yupString().required(),\n    city: yupString().required(),\n    country: yupString().required()\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    console.log('state values', values);\n    if (props.isAddForm) {\n      props.skillAdd(\n        {\n          name: values.name,\n          description: values.description,\n          category: values.category,\n          address: values.address,\n          city: values.city,\n          country: values.country,\n          lat: values.lat,\n          lng: values.lng,\n          image: values.image,\n          banner_image: values.banner_image\n        },\n        token\n      );\n    } else {\n      props.skillUpdate(\n        {\n          name: values.name,\n          description: values.description,\n          category: values.category,\n          address: values.address,\n          city: values.city,\n          country: values.country,\n          lat: values.lat,\n          lng: values.lng,\n          image: values.image,\n          banner_image: values.banner_image,\n          id: props.skillId\n        },\n        props.skillId,\n        token\n      );\n    }\n\n    resetForm();\n  },\n\n  displayName: 'ProjectForm' // helps with React DevTools\n})(ProjectForm);\n\nconst mapStateToProps = state => ({\n  data: state.skillsAdd.data,\n  isRequesting: state.skillsAdd.isRequesting,\n  isUpdateRequesting: state.skillsUpdate.isRequesting,\n  isSuccess: state.skillsAdd.isSuccess,\n  isUpdateSuccess: state.skillsUpdate.isSuccess,\n  isError: state.skillsAdd.isError,\n  singleSkillData: state.skill.data\n});\n\nexport default connect(mapStateToProps, {\n  skillAdd,\n  skillUpdate,\n  singleSkill,\n  resetAddSkill,\n  resetUpdateSkill,\n  skills\n})(ProjectFormFormik);\n"]},"metadata":{},"sourceType":"module"}