{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/projects/ProjectsListing.js\";\nimport React, { useState, useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from '../global/Pagination';\nimport EmptyState from '../global/EmptyState';\nimport SkillsListItem from './ProjectsListItem';\nimport Loading from '../global/Loader';\nimport InviteModal from './InviteModal';\nimport { usersList } from './../../store/actions/userActions';\n\nconst ProjectsListing = ({\n  handleFormVisibilty,\n  handAddFormToggle,\n  getSearchKeyword,\n  getSkillId,\n  resetSingleSkill,\n  deleteSkill,\n  skills,\n  sort,\n  setSort,\n  total,\n  setPage,\n  page,\n  count,\n  changeStatus,\n  getStatus,\n  toggleSort,\n  isRequesting\n}) => {\n  const [keyword, setKeyword] = useState('');\n  useEffect(() => {\n    getSearchKeyword(keyword);\n  }, [getSearchKeyword, keyword]); // console.log('total', total);\n\n  const dispatch = useDispatch();\n  const [openModal, toggleModal] = useState(false);\n  const [selectedProject, setProject] = useState('');\n  const userList = useSelector(state => state.inviteListUser.data); // handle invite modal\n\n  const handleInvite = project => {\n    console.log('project', project);\n    dispatch(usersList());\n    setProject(project.id);\n    toggleModal(true);\n  };\n\n  const handleModal = status => {\n    toggleModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => {\n      handleFormVisibilty();\n      handAddFormToggle(true);\n      resetSingleSkill();\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Add Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Search\",\n    onChange: e => {\n      setKeyword(e.target.value);\n      setPage(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }))))))), isRequesting ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => toggleSort('name'),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"i\", {\n    className: `fas fa-chevron-${sort ? 'down' : 'up'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Created At\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Action\")), skills && skills.map((item, index) => /*#__PURE__*/React.createElement(SkillsListItem, {\n    key: item.id,\n    item: item,\n    index: index,\n    handAddFormToggle: handAddFormToggle,\n    handleFormVisibilty: handleFormVisibilty,\n    handleInvite: handleInvite,\n    getSkillId: getSkillId,\n    deleteSkill: deleteSkill,\n    changeStatus: changeStatus,\n    getStatus: getStatus,\n    page: page,\n    count: count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }))), isEmpty(skills) && /*#__PURE__*/React.createElement(EmptyState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }))), skills && !isEmpty(skills) && /*#__PURE__*/React.createElement(Pagination, {\n    total: total,\n    setPage: setPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))), openModal && userList && /*#__PURE__*/React.createElement(InviteModal, {\n    isOpen: openModal,\n    handleModal: handleModal,\n    userList: userList,\n    selectedProject: selectedProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ProjectsListing;","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/projects/ProjectsListing.js"],"names":["React","useState","useEffect","isEmpty","useSelector","useDispatch","Pagination","EmptyState","SkillsListItem","Loading","InviteModal","usersList","ProjectsListing","handleFormVisibilty","handAddFormToggle","getSearchKeyword","getSkillId","resetSingleSkill","deleteSkill","skills","sort","setSort","total","setPage","page","count","changeStatus","getStatus","toggleSort","isRequesting","keyword","setKeyword","dispatch","openModal","toggleModal","selectedProject","setProject","userList","state","inviteListUser","data","handleInvite","project","console","log","id","handleModal","status","e","target","value","cursor","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,mCAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,mBADuB;AAEvBC,EAAAA,iBAFuB;AAGvBC,EAAAA,gBAHuB;AAIvBC,EAAAA,UAJuB;AAKvBC,EAAAA,gBALuB;AAMvBC,EAAAA,WANuB;AAOvBC,EAAAA,MAPuB;AAQvBC,EAAAA,IARuB;AASvBC,EAAAA,OATuB;AAUvBC,EAAAA,KAVuB;AAWvBC,EAAAA,OAXuB;AAYvBC,EAAAA,IAZuB;AAavBC,EAAAA,KAbuB;AAcvBC,EAAAA,YAduB;AAevBC,EAAAA,SAfuB;AAgBvBC,EAAAA,UAhBuB;AAiBvBC,EAAAA;AAjBuB,CAAD,KAkBlB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB,CAACe,OAAD,CAAhB;AACD,GAFQ,EAEN,CAACf,gBAAD,EAAmBe,OAAnB,CAFM,CAAT,CAFI,CAKJ;;AACA,QAAME,QAAQ,GAAG3B,WAAW,EAA5B;AAEA,QAAM,CAAC4B,SAAD,EAAYC,WAAZ,IAA2BjC,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACkC,eAAD,EAAkBC,UAAlB,IAAgCnC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMoC,QAAQ,GAAGjC,WAAW,CAAEkC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,IAAjC,CAA5B,CAVI,CAWJ;;AACA,QAAMC,YAAY,GAAIC,OAAD,IAAa;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACAV,IAAAA,QAAQ,CAACrB,SAAS,EAAV,CAAR;AACAyB,IAAAA,UAAU,CAACM,OAAO,CAACG,EAAT,CAAV;AACAX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GALD;;AAMA,QAAMY,WAAW,GAAIC,MAAD,IAAY;AAC9Bb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,mBAAmB;AACnBC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAG,MAAAA,gBAAgB;AACjB,KANH;AAOE,IAAA,IAAI,EAAC,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAG+B,CAAD,IAAO;AACfjB,MAAAA,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACA3B,MAAAA,OAAO,CAAC,CAAD,CAAP;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF,CADF,CAdF,CADF,EAoCGM,YAAY,gBACX,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAGX;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE;AACE,IAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,MAAD,CAD3B;AAEE,IAAA,KAAK,EAAE;AAAEuB,MAAAA,MAAM,EAAE;AAAV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKE;AAAG,IAAA,SAAS,EAAG,kBAAiB/B,IAAI,GAAG,MAAH,GAAY,IAAK,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF,EAcGD,MAAM,IACLA,MAAM,CAACiC,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACT,oBAAC,cAAD;AACE,IAAA,GAAG,EAAED,IAAI,CAACR,EADZ;AAEE,IAAA,IAAI,EAAEQ,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,iBAAiB,EAAExC,iBAJrB;AAKE,IAAA,mBAAmB,EAAED,mBALvB;AAME,IAAA,YAAY,EAAE4B,YANhB;AAOE,IAAA,UAAU,EAAEzB,UAPd;AAQE,IAAA,WAAW,EAAEE,WARf;AASE,IAAA,YAAY,EAAEQ,YAThB;AAUE,IAAA,SAAS,EAAEC,SAVb;AAWE,IAAA,IAAI,EAAEH,IAXR;AAYE,IAAA,KAAK,EAAEC,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfJ,CADF,EAiCGtB,OAAO,CAACgB,MAAD,CAAP,iBAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCtB,CADF,CAvCJ,EA6EGA,MAAM,IAAI,CAAChB,OAAO,CAACgB,MAAD,CAAlB,iBACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEG,KAAnB;AAA0B,IAAA,OAAO,EAAEC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9EJ,CADF,CADF,EAoFGU,SAAS,IAAII,QAAb,iBACC,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEJ,SADV;AAEE,IAAA,WAAW,EAAEa,WAFf;AAGE,IAAA,QAAQ,EAAET,QAHZ;AAIE,IAAA,eAAe,EAAEF,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArFJ,CADF;AA+FD,CAvID;;AAyIA,eAAevB,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from '../global/Pagination';\nimport EmptyState from '../global/EmptyState';\nimport SkillsListItem from './ProjectsListItem';\nimport Loading from '../global/Loader';\nimport InviteModal from './InviteModal';\nimport { usersList } from './../../store/actions/userActions';\n\nconst ProjectsListing = ({\n  handleFormVisibilty,\n  handAddFormToggle,\n  getSearchKeyword,\n  getSkillId,\n  resetSingleSkill,\n  deleteSkill,\n  skills,\n  sort,\n  setSort,\n  total,\n  setPage,\n  page,\n  count,\n  changeStatus,\n  getStatus,\n  toggleSort,\n  isRequesting,\n}) => {\n  const [keyword, setKeyword] = useState('');\n  useEffect(() => {\n    getSearchKeyword(keyword);\n  }, [getSearchKeyword, keyword]);\n  // console.log('total', total);\n  const dispatch = useDispatch();\n\n  const [openModal, toggleModal] = useState(false);\n  const [selectedProject, setProject] = useState('');\n  const userList = useSelector((state) => state.inviteListUser.data);\n  // handle invite modal\n  const handleInvite = (project) => {\n    console.log('project', project);\n    dispatch(usersList());\n    setProject(project.id);\n    toggleModal(true);\n  };\n  const handleModal = (status) => {\n    toggleModal(false);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h4>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  handleFormVisibilty();\n                  handAddFormToggle(true);\n                  resetSingleSkill();\n                }}\n                type=\"button\"\n              >\n                Add Project\n              </button>\n            </h4>\n            <div className=\"card-header-form\">\n              <form>\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Search\"\n                    onChange={(e) => {\n                      setKeyword(e.target.value);\n                      setPage(1);\n                    }}\n                  />\n                  <div className=\"input-group-btn\">\n                    <button className=\"btn btn-primary\" type=\"button\">\n                      <i className=\"fas fa-search\" />\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          {isRequesting ? (\n            <Loading />\n          ) : (\n            <div className=\"card-body p-0\">\n              <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                  <tr>\n                    <th>#</th>\n                    <th\n                      onClick={() => toggleSort('name')}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      Name\n                      <i className={`fas fa-chevron-${sort ? 'down' : 'up'}`} />\n                    </th>\n                    <th>Created At</th>\n                    <th>Status</th>\n                    <th>Action</th>\n                  </tr>\n                  {skills &&\n                    skills.map((item, index) => (\n                      <SkillsListItem\n                        key={item.id}\n                        item={item}\n                        index={index}\n                        handAddFormToggle={handAddFormToggle}\n                        handleFormVisibilty={handleFormVisibilty}\n                        handleInvite={handleInvite}\n                        getSkillId={getSkillId}\n                        deleteSkill={deleteSkill}\n                        changeStatus={changeStatus}\n                        getStatus={getStatus}\n                        page={page}\n                        count={count}\n                      />\n                    ))}\n                </table>\n                {isEmpty(skills) && <EmptyState />}\n              </div>\n            </div>\n          )}\n          {skills && !isEmpty(skills) && (\n            <Pagination total={total} setPage={setPage} />\n          )}\n        </div>\n      </div>\n      {openModal && userList && (\n        <InviteModal\n          isOpen={openModal}\n          handleModal={handleModal}\n          userList={userList}\n          selectedProject={selectedProject}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ProjectsListing;\n"]},"metadata":{},"sourceType":"module"}