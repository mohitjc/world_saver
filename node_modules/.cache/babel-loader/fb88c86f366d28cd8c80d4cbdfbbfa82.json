{"ast":null,"code":"/**\n * @description :  This file has blog add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, IMAGE_UPLOAD_API, ALL_BLOGS_API, DELETE_API, BLOG_API, BLOG_ADD, BLOG_UPDATE, GET_BLOGS, GET_SINGLE_BLOG, DELETE_SINGLE_BLOG, BLOG_IMAGE_UPLOAD } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\nexport function blogAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(BLOG_ADD.BLOG_ADD_REQUEST));\n    const getUrl = BLOG_API;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(BLOG_ADD.BLOG_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(BLOG_ADD.BLOG_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // update blog\n\nexport function blogsUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(BLOG_UPDATE.BLOG_UPDATE_REQUEST));\n    const getUrl = `${BLOG_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('blogsUpdate', data);\n      if (data.success) {\n        dispatch(getSuccess(BLOG_UPDATE.BLOG_UPDATE_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(BLOG_UPDATE.BLOG_UPDATE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get all blogs\n\nexport function blogs(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_BLOGS.GET_BLOGS_REQUEST));\n    const getUrl = `${ALL_BLOGS_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_BLOGS.GET_BLOGS_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_BLOGS.GET_BLOGS_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get single blog detail\n\nexport function singleBlog(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_BLOG.GET_SINGLE_BLOG_REQUEST));\n    const getUrl = `${BLOG_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('singleBlog', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_SINGLE_BLOG.GET_SINGLE_BLOG_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_SINGLE_BLOG.GET_SINGLE_BLOG_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // delete the single blog\n\nexport function deleteBlog(obj, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_REQUEST));\n    const getUrl = `${DELETE_API}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: obj\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('deleteUser', data);\n      if (data.success) {\n        dispatch(getSuccess(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_FAILURE, {\n        data: {\n          statusCode: 403,\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // image upload for blogs\n\nexport function uploadImage(obj, token) {\n  console.log('uploadImageobj', obj);\n  return dispatch => {\n    dispatch(getRequest(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_REQUEST));\n    const getUrl = `${IMAGE_UPLOAD_API}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('uploadImage', data);\n      if (data.success) {\n        dispatch(getSuccess(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_SUCCESS, data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_FAILURE, {\n        data: {\n          statusCode: 403,\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // resets the blog\n\nexport function resetDeleteBlog() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_RESET));\n  };\n}\nexport function resetAddBlog() {\n  return dispatch => {\n    dispatch(reset(BLOG_ADD.BLOG_ADD_RESET));\n  };\n}\nexport function resetSingleBlog() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_BLOG.GET_SINGLE_BLOG_RESET));\n  };\n}\nexport function resetUpdateBlog() {\n  return dispatch => {\n    dispatch(reset(BLOG_UPDATE.BLOG_UPDATE_RESET));\n  };\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/blogsActions.js"],"names":["AXIOS_INSTANCE","IMAGE_UPLOAD_API","ALL_BLOGS_API","DELETE_API","BLOG_API","BLOG_ADD","BLOG_UPDATE","GET_BLOGS","GET_SINGLE_BLOG","DELETE_SINGLE_BLOG","BLOG_IMAGE_UPLOAD","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","blogAdd","postObj","token","dispatch","BLOG_ADD_REQUEST","getUrl","config","headers","Authorization","post","then","data","success","BLOG_ADD_SUCCESS","catch","error","errorMessage","response","message","BLOG_ADD_FAILURE","statusCode","blogsUpdate","obj","id","BLOG_UPDATE_REQUEST","put","BLOG_UPDATE_SUCCESS","error_description","BLOG_UPDATE_FAILURE","blogs","type","page","count","sortType","sort","search","GET_BLOGS_REQUEST","get","GET_BLOGS_SUCCESS","GET_BLOGS_FAILURE","singleBlog","GET_SINGLE_BLOG_REQUEST","GET_SINGLE_BLOG_SUCCESS","console","log","GET_SINGLE_BLOG_FAILURE","deleteBlog","DELETE_SINGLE_BLOG_REQUEST","delete","DELETE_SINGLE_BLOG_SUCCESS","DELETE_SINGLE_BLOG_FAILURE","uploadImage","BLOG_IMAGE_UPLOAD_REQUEST","BLOG_IMAGE_UPLOAD_SUCCESS","BLOG_IMAGE_UPLOAD_FAILURE","resetDeleteBlog","DELETE_SINGLE_BLOG_RESET","resetAddBlog","BLOG_ADD_RESET","resetSingleBlog","GET_SINGLE_BLOG_RESET","resetUpdateBlog","BLOG_UPDATE_RESET"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has blog add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  IMAGE_UPLOAD_API,\n  ALL_BLOGS_API,\n  DELETE_API,\n  BLOG_API,\n  BLOG_ADD,\n  BLOG_UPDATE,\n  GET_BLOGS,\n  GET_SINGLE_BLOG,\n  DELETE_SINGLE_BLOG,\n  BLOG_IMAGE_UPLOAD\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\n\nexport function blogAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(BLOG_ADD.BLOG_ADD_REQUEST));\n    const getUrl = BLOG_API;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(BLOG_ADD.BLOG_ADD_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(BLOG_ADD.BLOG_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// update blog\n\nexport function blogsUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(BLOG_UPDATE.BLOG_UPDATE_REQUEST));\n    const getUrl = `${BLOG_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('blogsUpdate', data);\n        if (data.success) {\n          dispatch(getSuccess(BLOG_UPDATE.BLOG_UPDATE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(BLOG_UPDATE.BLOG_UPDATE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get all blogs\n\nexport function blogs(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_BLOGS.GET_BLOGS_REQUEST));\n    const getUrl = `${ALL_BLOGS_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(GET_BLOGS.GET_BLOGS_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_BLOGS.GET_BLOGS_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get single blog detail\n\nexport function singleBlog(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_BLOG.GET_SINGLE_BLOG_REQUEST));\n    const getUrl = `${BLOG_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('singleBlog', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(GET_SINGLE_BLOG.GET_SINGLE_BLOG_SUCCESS, data.data)\n          );\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_SINGLE_BLOG.GET_SINGLE_BLOG_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// delete the single blog\n\nexport function deleteBlog(obj, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_REQUEST));\n    const getUrl = `${DELETE_API}`;\n    const config = { headers: { Authorization: `Bearer ${token}` }, data: obj };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('deleteUser', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_SUCCESS, data.data)\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_FAILURE, {\n            data: {\n              statusCode: 403,\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// image upload for blogs\n\nexport function uploadImage(obj, token) {\n  console.log('uploadImageobj', obj);\n  return dispatch => {\n    dispatch(getRequest(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_REQUEST));\n    const getUrl = `${IMAGE_UPLOAD_API}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('uploadImage', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_SUCCESS, data)\n          );\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(BLOG_IMAGE_UPLOAD.BLOG_IMAGE_UPLOAD_FAILURE, {\n            data: {\n              statusCode: 403,\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// resets the blog\n\nexport function resetDeleteBlog() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_BLOG.DELETE_SINGLE_BLOG_RESET));\n  };\n}\n\nexport function resetAddBlog() {\n  return dispatch => {\n    dispatch(reset(BLOG_ADD.BLOG_ADD_RESET));\n  };\n}\n\nexport function resetSingleBlog() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_BLOG.GET_SINGLE_BLOG_RESET));\n  };\n}\n\nexport function resetUpdateBlog() {\n  return dispatch => {\n    dispatch(reset(BLOG_UPDATE.BLOG_UPDATE_RESET));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}