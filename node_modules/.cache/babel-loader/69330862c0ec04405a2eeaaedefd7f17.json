{"ast":null,"code":"/**\n * @name : action creators\n *\n * @description : These functions create actions which update the store\n *\n * @\n * @param : types and api data\n * @author JC Software Solution PVT. LTD.\n * @return : object\n */\n// handle state when request is send and resposen is awaited\nexport function getRequest(REQUEST) {\n  return {\n    type: REQUEST\n  };\n} // handle state in case of resposen is success\n\nexport function getSuccess(SUCCESS, data) {\n  return {\n    type: SUCCESS,\n    payload: data\n  };\n} // handle state in case of resposen is reset\n\nexport function getFailure(FAILURE, error) {\n  return {\n    type: FAILURE,\n    payload: error\n  };\n}\nexport function reset(RESET) {\n  return {\n    type: RESET\n  };\n} // set local storage with access token\n\nexport function authenticate(token) {\n  return {\n    type: 'AUTHENTICATE',\n    payload: token\n  };\n} // remove local storage with access token\n\nexport function deauthenticate() {\n  return {\n    type: 'DEAUTHENTICATE'\n  };\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/index.js"],"names":["getRequest","REQUEST","type","getSuccess","SUCCESS","data","payload","getFailure","FAILURE","error","reset","RESET","authenticate","token","deauthenticate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAO,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAED;AADD,GAAP;AAGD,C,CAED;;AACA,OAAO,SAASE,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmC;AACxC,SAAO;AACLH,IAAAA,IAAI,EAAEE,OADD;AAELE,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,SAASE,UAAT,CAAoBC,OAApB,EAA6BC,KAA7B,EAAoC;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAEM,OADD;AAELF,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAC3B,SAAO;AACLT,IAAAA,IAAI,EAAES;AADD,GAAP;AAGD,C,CAED;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLX,IAAAA,IAAI,EAAE,cADD;AAELI,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,C,CAED;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO;AACLZ,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD","sourcesContent":["/**\n * @name : action creators\n *\n * @description : These functions create actions which update the store\n *\n * @\n * @param : types and api data\n * @author JC Software Solution PVT. LTD.\n * @return : object\n */\n\n// handle state when request is send and resposen is awaited\nexport function getRequest(REQUEST) {\n  return {\n    type: REQUEST\n  };\n}\n\n// handle state in case of resposen is success\nexport function getSuccess(SUCCESS, data) {\n  return {\n    type: SUCCESS,\n    payload: data\n  };\n}\n\n// handle state in case of resposen is reset\nexport function getFailure(FAILURE, error) {\n  return {\n    type: FAILURE,\n    payload: error\n  };\n}\n\nexport function reset(RESET) {\n  return {\n    type: RESET\n  };\n}\n\n// set local storage with access token\n\nexport function authenticate(token) {\n  return {\n    type: 'AUTHENTICATE',\n    payload: token\n  };\n}\n\n// remove local storage with access token\n\nexport function deauthenticate() {\n  return {\n    type: 'DEAUTHENTICATE'\n  };\n}\n"]},"metadata":{},"sourceType":"module"}