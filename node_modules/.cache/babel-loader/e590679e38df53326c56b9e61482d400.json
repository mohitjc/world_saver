{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/pages/Questions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport QuestionListing from '../components/questions/QuestionListing';\nimport QuestionForm from '../components/questions/QuestionsForm';\nimport { questions, resetSingleQuestion, deleteQuestion, resetDeleteQuestion } from '../store/actions/questionsActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nconst Questions = _ref => {\n  let {\n    data,\n    questions,\n    resetSingleQuestion,\n    deleteQuestion,\n    resetDeleteQuestion,\n    isDeleteSuccess,\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    isDeleteError,\n    changeStatus,\n    resetStatus,\n    isSuccess\n  } = _ref;\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    questions(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [questions, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Question has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteQuestion();\n    }\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteQuestion();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Questions has been activated' : 'Questions has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [questionId, setQuestionId] = useState(null);\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n  const getQuestionId = id => {\n    setQuestionId(id);\n  };\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n  const getStatus = value => {\n    setStatus(value);\n  };\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  // console.log('isDeleteError', isDeleteError);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Questions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), !formVisibility ? /*#__PURE__*/React.createElement(QuestionListing, {\n    handleFormVisibilty: handleFormVisibilty,\n    questions: data && data.data && data.data.ques,\n    total: data && data.data && data.data.total,\n    handAddFormToggle: handAddFormToggle,\n    getQuestionId: getQuestionId\n    // UserListing={UserListing}\n    ,\n    resetSingleQuestion: resetSingleQuestion,\n    deleteQuestion: deleteQuestion,\n    sort: sort,\n    setSort: setSort,\n    setPage: setPage,\n    page: page,\n    count: count,\n    getSearchKeyword: getSearchKeyword,\n    changeStatus: changeStatus,\n    getStatus: getStatus,\n    toggleSort: toggleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(QuestionForm, {\n    handleFormVisibilty: handleFormVisibilty,\n    isAddForm: isAddForm,\n    questionId: questionId,\n    setReloadToggle: setReloadToggle,\n    reloadToggle: reloadToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  data: state.questions.data,\n  isRequesting: state.questions.isRequesting,\n  isSuccess: state.questions.isSuccess,\n  isError: state.questions.isError,\n  isDeleteSuccess: state.deleteQuestion.isSuccess,\n  isDeleteError: state.deleteQuestion.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\nexport default connect(mapStateToProps, {\n  questions,\n  resetSingleQuestion,\n  deleteQuestion,\n  resetDeleteQuestion,\n  changeStatus,\n  resetStatus\n})(Questions);","map":{"version":3,"names":["React","useState","useEffect","connect","swal","Layout","MainSidebar","SectionHeader","QuestionListing","QuestionForm","questions","resetSingleQuestion","deleteQuestion","resetDeleteQuestion","changeStatus","resetStatus","Questions","data","isDeleteSuccess","isChangeStatusSuccess","isChangeStatusError","isDeleteError","isSuccess","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","questionId","setQuestionId","handleFormVisibilty","handAddFormToggle","bool","getQuestionId","id","getSearchKeyword","value","getStatus","toggleSort","ques","total","mapStateToProps","state","isRequesting","isError"],"sources":["/home/jc-2/Documents/sociality-web/src/pages/Questions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport QuestionListing from '../components/questions/QuestionListing';\nimport QuestionForm from '../components/questions/QuestionsForm';\nimport {\n  questions,\n  resetSingleQuestion,\n  deleteQuestion,\n  resetDeleteQuestion\n} from '../store/actions/questionsActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\n\nconst Questions = ({\n  data,\n  questions,\n  resetSingleQuestion,\n  deleteQuestion,\n  resetDeleteQuestion,\n  isDeleteSuccess,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isSuccess\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    questions(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [questions, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Question has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteQuestion();\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteQuestion();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Questions has been activated'\n          : 'Questions has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [questionId, setQuestionId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getQuestionId = id => {\n    setQuestionId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  // console.log('isDeleteError', isDeleteError);\n  return (\n    <Layout title=\"Questions\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Questions\" />\n          {!formVisibility ? (\n            <QuestionListing\n              handleFormVisibilty={handleFormVisibilty}\n              questions={data && data.data && data.data.ques}\n              total={data && data.data && data.data.total}\n              handAddFormToggle={handAddFormToggle}\n              getQuestionId={getQuestionId}\n              // UserListing={UserListing}\n              resetSingleQuestion={resetSingleQuestion}\n              deleteQuestion={deleteQuestion}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : (\n            <QuestionForm\n              handleFormVisibilty={handleFormVisibilty}\n              isAddForm={isAddForm}\n              questionId={questionId}\n              setReloadToggle={setReloadToggle}\n              reloadToggle={reloadToggle}\n            />\n          )}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.questions.data,\n  isRequesting: state.questions.isRequesting,\n  isSuccess: state.questions.isSuccess,\n  isError: state.questions.isError,\n  isDeleteSuccess: state.deleteQuestion.isSuccess,\n  isDeleteError: state.deleteQuestion.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    questions,\n    resetSingleQuestion,\n    deleteQuestion,\n    resetDeleteQuestion,\n    changeStatus,\n    resetStatus\n  }\n)(Questions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}