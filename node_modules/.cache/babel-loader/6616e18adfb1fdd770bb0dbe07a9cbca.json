{"ast":null,"code":"/**\n * @description :  This file has login and authentication functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, LOGIN_CONST, LOGIN_API, DEAUTHENTICATE } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset, authenticate, deauthenticate } from './index'; // login user into app\n\nexport function login(postObj) {\n  return dispatch => {\n    dispatch(getRequest(LOGIN_CONST.LOGIN_REQUEST));\n    const getUrl = LOGIN_API;\n    AXIOS_INSTANCE.post(getUrl, postObj).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.roles === 'SA') {\n        dispatch(getSuccess(LOGIN_CONST.LOGIN_SUCCESS, data));\n        localStorage.setItem('token', data.access_token);\n        dispatch(authenticate(data.access_token));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(LOGIN_CONST.LOGIN_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // remove token and logout user\n\nexport function logOut() {\n  return dispatch => {\n    dispatch(deauthenticate(DEAUTHENTICATE));\n    localStorage.removeItem('token');\n  };\n}\nexport function resetLogin() {\n  return dispatch => {\n    dispatch(reset(LOGIN_CONST.LOGIN_RESET));\n  };\n}","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/store/actions/loginActions.js"],"names":["AXIOS_INSTANCE","LOGIN_CONST","LOGIN_API","DEAUTHENTICATE","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","authenticate","deauthenticate","login","postObj","dispatch","LOGIN_REQUEST","getUrl","post","then","data","roles","LOGIN_SUCCESS","localStorage","setItem","access_token","catch","error","errorMessage","response","error_description","LOGIN_FAILURE","statusCode","message","logOut","removeItem","resetLogin","LOGIN_RESET"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SACEA,cADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,cAJF,QAKO,cALP;AAMA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,YALF,EAMEC,cANF,QAOO,SAPP,C,CASA;;AAEA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwB;AAC7B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACR,UAAU,CAACL,WAAW,CAACc,aAAb,CAAX,CAAR;AACA,UAAMC,MAAM,GAAGd,SAAf;AACAF,IAAAA,cAAc,CAACiB,IAAf,CAAoBD,MAApB,EAA4BH,OAA5B,EACGK,IADH,CACQd,eADR,EAEGc,IAFH,CAEQb,SAFR,EAGGa,IAHH,CAGQC,IAAI,IAAI;AACZ;AACA,UAAIA,IAAI,CAACC,KAAL,KAAe,IAAnB,EAAyB;AACvBN,QAAAA,QAAQ,CAACP,UAAU,CAACN,WAAW,CAACoB,aAAb,EAA4BF,IAA5B,CAAX,CAAR;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,YAAnC;AACAV,QAAAA,QAAQ,CAACJ,YAAY,CAACS,IAAI,CAACK,YAAN,CAAb,CAAR;AACD;AACF,KAVH,EAWGC,KAXH,CAWSC,KAAK,IAAI;AACd;AACA,YAAMC,YAAY,GAChBD,KAAK,CAACE,QAAN,IACAF,KAAK,CAACE,QAAN,CAAeT,IADf,IAEAO,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,iBAFpB,GAGIH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,iBAHxB,GAII,uBALN;AAMAf,MAAAA,QAAQ,CACNN,UAAU,CAACP,WAAW,CAAC6B,aAAb,EAA4B;AACpCX,QAAAA,IAAI,EAAE;AACJY,UAAAA,UAAU,EAAE,GADR;AAEJ;AACAC,UAAAA,OAAO,EAAEL;AAHL;AAD8B,OAA5B,CADJ,CAAR;AASD,KA5BH;AA6BD,GAhCD;AAiCD,C,CAED;;AAEA,OAAO,SAASM,MAAT,GAAkB;AACvB,SAAOnB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACH,cAAc,CAACR,cAAD,CAAf,CAAR;AACAmB,IAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACD,GAHD;AAID;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAOrB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACL,KAAK,CAACR,WAAW,CAACmC,WAAb,CAAN,CAAR;AACD,GAFD;AAGD","sourcesContent":["/**\n * @description :  This file has login and authentication functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  LOGIN_CONST,\n  LOGIN_API,\n  DEAUTHENTICATE\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport {\n  getRequest,\n  getSuccess,\n  getFailure,\n  reset,\n  authenticate,\n  deauthenticate\n} from './index';\n\n// login user into app\n\nexport function login(postObj) {\n  return dispatch => {\n    dispatch(getRequest(LOGIN_CONST.LOGIN_REQUEST));\n    const getUrl = LOGIN_API;\n    AXIOS_INSTANCE.post(getUrl, postObj)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.roles === 'SA') {\n          dispatch(getSuccess(LOGIN_CONST.LOGIN_SUCCESS, data));\n          localStorage.setItem('token', data.access_token);\n          dispatch(authenticate(data.access_token));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(LOGIN_CONST.LOGIN_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// remove token and logout user\n\nexport function logOut() {\n  return dispatch => {\n    dispatch(deauthenticate(DEAUTHENTICATE));\n    localStorage.removeItem('token');\n  };\n}\n\nexport function resetLogin() {\n  return dispatch => {\n    dispatch(reset(LOGIN_CONST.LOGIN_RESET));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}