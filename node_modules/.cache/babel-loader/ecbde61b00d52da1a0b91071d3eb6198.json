{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/advertisement/Form.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport { isNull, isEmpty } from 'lodash';\nimport { Add, Update, single, resetAdd, resetUpdate, categories } from '../../store/actions/advertiseActions';\nimport ImageUpload from '../global/ImageUpload';\n\nconst Form = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  setFieldValue,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  Id,\n  single,\n  singleData,\n  resetAdd,\n  resetUpdate,\n  allTypes,\n  categories\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New advertise added!', '', 'success');\n      handleFormVisibilty();\n      resetAdd();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning'); // handleFormVisibilty();\n\n      resetAdd(); // setReloadToggle(!reloadToggle);\n    }\n\n    if (isUpdateSuccess) {\n      swal('Adertise updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdate();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess, handleFormVisibilty, resetAdd, setReloadToggle, reloadToggle, data, resetUpdate]);\n  useEffect(() => {\n    if (!isAddForm) {\n      single(Id, token); // swal('New user added!', '', 'success');\n    }\n  }, [Id, isAddForm, single, token]);\n\n  const getImage = value => {\n    setFieldValue('image', value);\n  }; // console.log('values', values);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    onClick: () => {\n      handleFormVisibilty();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"View Advertise\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" Advertise\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ImageUpload, {\n    getImage: getImage,\n    type: \"advertise\",\n    value: values.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.title,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), errors.title && touched.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.description,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }), errors.description && touched.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, errors.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"url\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.url,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), errors.url && touched.url && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, errors.url)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst CatgeoryFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleData\n  }) => {\n    // console.log('singleCategoryData', singleCategoryData);\n    return {\n      title: singleData && singleData.title || '',\n      image: singleData && singleData.image || '',\n      description: singleData && singleData.description || '',\n      url: singleData && singleData.url || ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    title: yupString().required(),\n    image: yupString().required(),\n    description: yupString().required(),\n    url: yupString().required()\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token'); // console.log('state values', values);\n\n    if (props.isAddForm) {\n      props.Add({\n        title: values.title,\n        image: values.image,\n        description: values.description,\n        url: values.url\n      }, token);\n    } else {\n      props.Update({\n        itle: values.title,\n        image: values.image,\n        description: values.description,\n        url: values.url\n      }, props.Id, token);\n    } // resetForm();\n\n  },\n  displayName: 'Form' // helps with React DevTools\n\n})(Form);\n\nconst mapStateToProps = state => ({\n  data: state.advertiseAdd.data,\n  isRequesting: state.advertiseAdd.isRequesting,\n  isUpdateRequesting: state.advertiseUpdate.isRequesting,\n  isSuccess: state.advertiseAdd.isSuccess,\n  isUpdateSuccess: state.advertiseUpdate.isSuccess,\n  isError: state.advertiseAdd.isError,\n  singleData: state.advertise.data\n});\n\nexport default connect(mapStateToProps, {\n  Add,\n  Update,\n  single,\n  resetAdd,\n  resetUpdate\n})(CatgeoryFormFormik);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/advertisement/Form.js"],"names":["React","useEffect","useState","connect","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","withRouter","isNull","isEmpty","Add","Update","single","resetAdd","resetUpdate","categories","ImageUpload","Form","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","setFieldValue","data","isAddForm","reloadToggle","setReloadToggle","Id","singleData","allTypes","token","localStorage","getItem","message","getImage","value","image","title","display","description","url","CatgeoryFormFormik","enableReinitialize","mapPropsToValues","validationSchema","shape","required","props","setSubmitting","resetForm","itle","displayName","mapStateToProps","state","advertiseAdd","advertiseUpdate","advertise"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\n\nimport { isNull, isEmpty } from 'lodash';\nimport {\n  Add,\n  Update,\n  single,\n  resetAdd,\n  resetUpdate,\n  categories\n} from '../../store/actions/advertiseActions';\nimport ImageUpload from '../global/ImageUpload';\n\nconst Form = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  setFieldValue,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  Id,\n  single,\n  singleData,\n  resetAdd,\n  resetUpdate,\n  allTypes,\n  categories\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New advertise added!', '', 'success');\n      handleFormVisibilty();\n      resetAdd();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      // handleFormVisibilty();\n      resetAdd();\n      // setReloadToggle(!reloadToggle);\n    }\n    if (isUpdateSuccess) {\n      swal('Adertise updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdate();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [\n    isSuccess,\n    isError,\n    isUpdateSuccess,\n    handleFormVisibilty,\n    resetAdd,\n    setReloadToggle,\n    reloadToggle,\n    data,\n    resetUpdate\n  ]);\n\n  useEffect(() => {\n    if (!isAddForm) {\n      single(Id, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [Id, isAddForm, single, token]);\n\n  const getImage = value => {\n    setFieldValue('image', value);\n  };\n\n  // console.log('values', values);\n\n  return (\n    <div className=\"\">\n      <button\n        className=\"btn btn-primary mb-3\"\n        onClick={() => {\n          handleFormVisibilty();\n        }}\n      >\n        View Advertise\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} Advertise</h4>\n          </div>\n          <div className=\"card-body\">\n            <ImageUpload\n              getImage={getImage}\n              type=\"advertise\"\n              value={values.image}\n            />\n            <div className=\"row\">\n              <div className=\"form-group col-md-12 mb-3\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.title}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.title && touched.title && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.title}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"form-group col-md-12 mb-3\">\n                <label>Description</label>\n                <textarea\n                  type=\"text\"\n                  name=\"description\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.description}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.description && touched.description && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.description}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"form-group col-md-12 mb-3\">\n                <label>URL</label>\n                <input\n                  type=\"text\"\n                  name=\"url\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.url}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.url && touched.url && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.url}\n                  </div>\n                )}\n              </div>\n              \n              \n            </div>\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst CatgeoryFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleData }) => {\n    // console.log('singleCategoryData', singleCategoryData);\n    return {\n      title: (singleData && singleData.title) || '',\n      image: (singleData && singleData.image) || '',\n      description: (singleData && singleData.description) || '',\n      url: (singleData && singleData.url) || ''\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    title: yupString().required(),\n    image: yupString().required(),\n    description:yupString().required(),\n    url:yupString().required()\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    // console.log('state values', values);\n    if (props.isAddForm) {\n      props.Add(\n        {\n          title: values.title,\n          image:values.image,\n          description: values.description,\n          url:values.url         \n        },\n        token\n      );\n    } else {\n      props.Update(\n        {\n          itle: values.title,\n          image:values.image,\n          description: values.description,\n          url:values.url  \n        },\n        props.Id,\n        token\n      );\n    }\n\n    // resetForm();\n  },\n\n  displayName: 'Form' // helps with React DevTools\n})(Form);\n\nconst mapStateToProps = state => ({\n  data: state.advertiseAdd.data,\n  isRequesting: state.advertiseAdd.isRequesting,\n  isUpdateRequesting: state.advertiseUpdate.isRequesting,\n  isSuccess: state.advertiseAdd.isSuccess,\n  isUpdateSuccess: state.advertiseUpdate.isSuccess,\n  isError: state.advertiseAdd.isError,\n  singleData: state.advertise.data\n});\n\nexport default connect(mapStateToProps, {\n  Add,\n  Update,\n  single,\n  resetAdd,\n  resetUpdate\n})(CatgeoryFormFormik);\n"]},"metadata":{},"sourceType":"module"}