{"ast":null,"code":"/**\n * @description :  This file has category add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, CATEGORY_ADD, CATEGORY_UPDATE, GET_CATEGORIES, GET_SINGLE_CATEGORY, DELETE_SINGLE_CATEGORY, CATEGORY_API, ALL_CATEGORY_API, GET_CATEGORY_BY_TYPE, CATEGORY_BY_TYPE_API } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index'; // add the category\n\nexport function categoryAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(CATEGORY_ADD.CATEGORY_ADD_REQUEST));\n    const getUrl = CATEGORY_API;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      console.log('response', data);\n\n      if (data.success) {\n        dispatch(getSuccess(CATEGORY_ADD.CATEGORY_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(CATEGORY_ADD.CATEGORY_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // update the category\n\nexport function categoryUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(CATEGORY_UPDATE.CATEGORY_UPDATE_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('updateUser', data);\n      if (data.success) {\n        dispatch(getSuccess(CATEGORY_UPDATE.CATEGORY_UPDATE_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(CATEGORY_UPDATE.CATEGORY_UPDATE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get all categories\n\nexport function categories(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_CATEGORIES.GET_CATEGORIES_REQUEST));\n    const getUrl = `${ALL_CATEGORY_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_CATEGORIES.GET_CATEGORIES_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_CATEGORIES.GET_CATEGORIES_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get single category\n\nexport function singleCategory(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function getCatByType(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_REQUEST));\n    const getUrl = `${CATEGORY_BY_TYPE_API}?typeid=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      console.log('getCatByType', data);\n\n      if (data.success) {\n        dispatch(getSuccess(GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // delete single category\n\nexport function deleteCategory(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('deleteUser', data);\n      if (data.success) {\n        dispatch(getSuccess(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function resetDeleteCategory() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_RESET));\n  };\n}\nexport function resetAddCategory() {\n  return dispatch => {\n    dispatch(reset(CATEGORY_ADD.CATEGORY_ADD_RESET));\n  };\n}\nexport function resetSingleCategory() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_RESET));\n  };\n}\nexport function resetUpdateCategory() {\n  return dispatch => {\n    dispatch(reset(CATEGORY_UPDATE.CATEGORY_UPDATE_RESET));\n  };\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/categoryActions.js"],"names":["AXIOS_INSTANCE","CATEGORY_ADD","CATEGORY_UPDATE","GET_CATEGORIES","GET_SINGLE_CATEGORY","DELETE_SINGLE_CATEGORY","CATEGORY_API","ALL_CATEGORY_API","GET_CATEGORY_BY_TYPE","CATEGORY_BY_TYPE_API","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","categoryAdd","postObj","token","dispatch","CATEGORY_ADD_REQUEST","getUrl","config","headers","Authorization","post","then","data","console","log","success","CATEGORY_ADD_SUCCESS","catch","error","errorMessage","response","message","CATEGORY_ADD_FAILURE","statusCode","categoryUpdate","obj","id","CATEGORY_UPDATE_REQUEST","put","CATEGORY_UPDATE_SUCCESS","CATEGORY_UPDATE_FAILURE","categories","type","page","count","sortType","sort","search","GET_CATEGORIES_REQUEST","get","GET_CATEGORIES_SUCCESS","error_description","GET_CATEGORIES_FAILURE","singleCategory","GET_SINGLE_CATEGORY_REQUEST","GET_SINGLE_CATEGORY_SUCCESS","GET_SINGLE_CATEGORY_FAILURE","getCatByType","GET_CATEGORY_BY_TYPE_REQUEST","GET_CATEGORY_BY_TYPE_SUCCESS","GET_CATEGORY_BY_TYPE_FAILURE","deleteCategory","DELETE_SINGLE_CATEGORY_REQUEST","delete","DELETE_SINGLE_CATEGORY_SUCCESS","DELETE_SINGLE_CATEGORY_FAILURE","resetDeleteCategory","DELETE_SINGLE_CATEGORY_RESET","resetAddCategory","CATEGORY_ADD_RESET","resetSingleCategory","GET_SINGLE_CATEGORY_RESET","resetUpdateCategory","CATEGORY_UPDATE_RESET"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has category add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  CATEGORY_ADD,\n  CATEGORY_UPDATE,\n  GET_CATEGORIES,\n  GET_SINGLE_CATEGORY,\n  DELETE_SINGLE_CATEGORY,\n  CATEGORY_API,\n  ALL_CATEGORY_API,\n  GET_CATEGORY_BY_TYPE,\n  CATEGORY_BY_TYPE_API\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\n\n// add the category\n\nexport function categoryAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(CATEGORY_ADD.CATEGORY_ADD_REQUEST));\n    const getUrl = CATEGORY_API;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n         console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(CATEGORY_ADD.CATEGORY_ADD_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(CATEGORY_ADD.CATEGORY_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// update the category\n\nexport function categoryUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(CATEGORY_UPDATE.CATEGORY_UPDATE_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('updateUser', data);\n        if (data.success) {\n          dispatch(getSuccess(CATEGORY_UPDATE.CATEGORY_UPDATE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(CATEGORY_UPDATE.CATEGORY_UPDATE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get all categories\n\nexport function categories(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_CATEGORIES.GET_CATEGORIES_REQUEST));\n    const getUrl = `${ALL_CATEGORY_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(GET_CATEGORIES.GET_CATEGORIES_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_CATEGORIES.GET_CATEGORIES_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get single category\n\nexport function singleCategory(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function getCatByType(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_REQUEST));\n    const getUrl = `${CATEGORY_BY_TYPE_API}?typeid=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        console.log('getCatByType', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_CATEGORY_BY_TYPE.GET_CATEGORY_BY_TYPE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// delete single category\n\nexport function deleteCategory(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_REQUEST));\n    const getUrl = `${CATEGORY_API}/${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('deleteUser', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function resetDeleteCategory() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_CATEGORY.DELETE_SINGLE_CATEGORY_RESET));\n  };\n}\n\nexport function resetAddCategory() {\n  return dispatch => {\n    dispatch(reset(CATEGORY_ADD.CATEGORY_ADD_RESET));\n  };\n}\n\nexport function resetSingleCategory() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_CATEGORY.GET_SINGLE_CATEGORY_RESET));\n  };\n}\n\nexport function resetUpdateCategory() {\n  return dispatch => {\n    dispatch(reset(CATEGORY_UPDATE.CATEGORY_UPDATE_RESET));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}