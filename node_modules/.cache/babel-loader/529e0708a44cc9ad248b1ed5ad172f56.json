{"ast":null,"code":"/**\n * @description :  This file has category add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE // YOUTUBE_ADD,\n, YOUTUBE_ADD // YOUTUBE_UPDATE,\n, YOUTUBE_UPDATE // GET_CATEGORIES,\n, GET_YOUTUBE // GET_SINGLE_YOUTUBE,\n, GET_SINGLE_YOUTUBE // DELETE_SINGLE_YOUTUBE,\n, DELETE_SINGLE_YOUTUBE // YOUTUBE_API,\n, YOUTUBE_API, API_SLUG // ALL_YOUTUBE_API,\n, ALL_YOUTUBE_API, YOUTUBE_ARCHIVE // GET_YOUTUBE_BY_TYPE,\n, GET_YOUTUBE_BY_TYPE // YOUTUBE_BY_TYPE_API,\n, YOUTUBE_BY_TYPE_API } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index'; // add the\n\nexport function Add(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_ADD.YOUTUBE_ADD_REQUEST));\n    const getUrl = YOUTUBE_API;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(YOUTUBE_ADD.YOUTUBE_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(YOUTUBE_ADD.YOUTUBE_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // update the\n\nexport function Update(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_UPDATE.YOUTUBE_UPDATE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('updateUser', data);\n      if (data.success) {\n        dispatch(getSuccess(YOUTUBE_UPDATE.YOUTUBE_UPDATE_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(YOUTUBE_UPDATE.YOUTUBE_UPDATE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // is Archive start\n\nexport function Archive(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_REQUEST));\n    const getUrl = `${API_SLUG}/changeArchiveStatus/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('updateUser', data);\n      if (data.success) {\n        dispatch(getSuccess(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_SUCCESS, data));\n      }\n    }).catch(error => {\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_FAILURE, {\n        data: {\n          statusCode: 403,\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // is Archive end\n// get all categories\n\nexport function items(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_YOUTUBE.GET_YOUTUBE_REQUEST));\n    const getUrl = `${ALL_YOUTUBE_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      if (data.success) {\n        dispatch(getSuccess(GET_YOUTUBE.GET_YOUTUBE_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_YOUTUBE.GET_YOUTUBE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get single\n\nexport function single(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('singleCategory', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function getCatByType(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_REQUEST));\n    const getUrl = `${YOUTUBE_BY_TYPE_API}?typeid=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      console.log('getCatByType', data);\n\n      if (data.success) {\n        dispatch(getSuccess(GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // delete single\n\nexport function Delete(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('deleteUser', data);\n      if (data.success) {\n        dispatch(getSuccess(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function resetDelete() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_RESET));\n  };\n}\nexport function resetAdd() {\n  return dispatch => {\n    dispatch(reset(YOUTUBE_ADD.YOUTUBE_ADD_RESET));\n  };\n}\nexport function resetSingle() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_RESET));\n  };\n}\nexport function resetUpdate() {\n  return dispatch => {\n    dispatch(reset(YOUTUBE_UPDATE.YOUTUBE_UPDATE_RESET));\n  };\n}","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/store/actions/youtubeActions.js"],"names":["AXIOS_INSTANCE","YOUTUBE_ADD","YOUTUBE_UPDATE","GET_YOUTUBE","GET_SINGLE_YOUTUBE","DELETE_SINGLE_YOUTUBE","YOUTUBE_API","API_SLUG","ALL_YOUTUBE_API","YOUTUBE_ARCHIVE","GET_YOUTUBE_BY_TYPE","YOUTUBE_BY_TYPE_API","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","Add","postObj","token","dispatch","YOUTUBE_ADD_REQUEST","getUrl","config","headers","Authorization","post","then","data","success","YOUTUBE_ADD_SUCCESS","catch","error","errorMessage","response","message","YOUTUBE_ADD_FAILURE","statusCode","Update","obj","id","YOUTUBE_UPDATE_REQUEST","put","YOUTUBE_UPDATE_SUCCESS","YOUTUBE_UPDATE_FAILURE","Archive","YOUTUBE_ARCHIVE_REQUEST","YOUTUBE_ARCHIVE_SUCCESS","YOUTUBE_ARCHIVE_FAILURE","items","type","page","count","sortType","sort","search","GET_YOUTUBE_REQUEST","get","GET_YOUTUBE_SUCCESS","error_description","GET_YOUTUBE_FAILURE","single","GET_SINGLE_YOUTUBE_REQUEST","GET_SINGLE_YOUTUBE_SUCCESS","GET_SINGLE_YOUTUBE_FAILURE","getCatByType","GET_YOUTUBE_BY_TYPE_REQUEST","console","log","GET_YOUTUBE_BY_TYPE_SUCCESS","GET_YOUTUBE_BY_TYPE_FAILURE","Delete","DELETE_SINGLE_YOUTUBE_REQUEST","delete","DELETE_SINGLE_YOUTUBE_SUCCESS","DELETE_SINGLE_YOUTUBE_FAILURE","resetDelete","DELETE_SINGLE_YOUTUBE_RESET","resetAdd","YOUTUBE_ADD_RESET","resetSingle","GET_SINGLE_YOUTUBE_RESET","resetUpdate","YOUTUBE_UPDATE_RESET"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has category add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  // YOUTUBE_ADD,\n  YOUTUBE_ADD,\n  // YOUTUBE_UPDATE,\n  YOUTUBE_UPDATE,\n  // GET_CATEGORIES,\n  GET_YOUTUBE,\n  // GET_SINGLE_YOUTUBE,\n  GET_SINGLE_YOUTUBE,\n  // DELETE_SINGLE_YOUTUBE,\n  DELETE_SINGLE_YOUTUBE,\n  // YOUTUBE_API,\n  YOUTUBE_API,\n  API_SLUG,\n  // ALL_YOUTUBE_API,\n  ALL_YOUTUBE_API,\n  YOUTUBE_ARCHIVE,\n  // GET_YOUTUBE_BY_TYPE,\n  GET_YOUTUBE_BY_TYPE,\n  // YOUTUBE_BY_TYPE_API,\n  YOUTUBE_BY_TYPE_API\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\n\n// add the\n\nexport function Add(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_ADD.YOUTUBE_ADD_REQUEST));\n    const getUrl = YOUTUBE_API;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(YOUTUBE_ADD.YOUTUBE_ADD_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(YOUTUBE_ADD.YOUTUBE_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// update the\n\nexport function Update(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_UPDATE.YOUTUBE_UPDATE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('updateUser', data);\n        if (data.success) {\n          dispatch(getSuccess(YOUTUBE_UPDATE.YOUTUBE_UPDATE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(YOUTUBE_UPDATE.YOUTUBE_UPDATE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n\n// is Archive start\nexport function Archive(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_REQUEST));\n    const getUrl = `${API_SLUG}/changeArchiveStatus/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('updateUser', data);\n        if (data.success) {\n          dispatch(getSuccess(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(YOUTUBE_ARCHIVE.YOUTUBE_ARCHIVE_FAILURE, {\n            data: {\n              statusCode: 403,\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n// is Archive end\n\n\n// get all categories\n\nexport function items(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_YOUTUBE.GET_YOUTUBE_REQUEST));\n    const getUrl = `${ALL_YOUTUBE_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        if (data.success) {\n          dispatch(getSuccess(GET_YOUTUBE.GET_YOUTUBE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_YOUTUBE.GET_YOUTUBE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get single\n\nexport function single(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('singleCategory', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function getCatByType(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_REQUEST));\n    const getUrl = `${YOUTUBE_BY_TYPE_API}?typeid=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        console.log('getCatByType', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_YOUTUBE_BY_TYPE.GET_YOUTUBE_BY_TYPE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// delete single\n\nexport function Delete(id, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_REQUEST));\n    const getUrl = `${YOUTUBE_API}/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('deleteUser', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function resetDelete() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_YOUTUBE.DELETE_SINGLE_YOUTUBE_RESET));\n  };\n}\n\nexport function resetAdd() {\n  return dispatch => {\n    dispatch(reset(YOUTUBE_ADD.YOUTUBE_ADD_RESET));\n  };\n}\n\nexport function resetSingle() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_YOUTUBE.GET_SINGLE_YOUTUBE_RESET));\n  };\n}\n\nexport function resetUpdate() {\n  return dispatch => {\n    dispatch(reset(YOUTUBE_UPDATE.YOUTUBE_UPDATE_RESET));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}