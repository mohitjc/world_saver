{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/pages/Types.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport QuestionListing from '../components/questions/QuestionListing';\nimport QuestionForm from '../components/questions/QuestionsForm';\nimport { types, resetSingleType, deleteType, resetDeleteType } from '../store/actions/typeActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport TypeListing from '../components/types/TypeListing';\nimport TypeForm from '../components/types/TypeForm';\nconst Types = _ref => {\n  let {\n    data,\n    types,\n    resetSingleType,\n    deleteType,\n    resetDeleteType,\n    isDeleteSuccess,\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    isDeleteError,\n    changeStatus,\n    resetStatus,\n    isRequesting,\n    isSuccess,\n    changeStatusRequesting\n  } = _ref;\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    types(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [reloadToggle, page, sort, searchKeyword, isDeleteSuccess, token, type, count, sortType, types]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Type has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteType();\n    }\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteType();\n    }\n  }, [isDeleteSuccess, isDeleteError, resetDeleteType]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Type has been activated' : 'Type has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError, status, reloadToggle, resetStatus]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [typeId, setTypeId] = useState(null);\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n  const getTypeId = id => {\n    setTypeId(id);\n  };\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n  const getStatus = value => {\n    setStatus(value);\n  };\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n  console.log('data', data);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), !formVisibility ? /*#__PURE__*/React.createElement(TypeListing, {\n    handleFormVisibilty: handleFormVisibilty,\n    questions: data && data.result,\n    total: data && data.total,\n    handAddFormToggle: handAddFormToggle,\n    getQuestionId: getTypeId,\n    isRequesting: isRequesting,\n    changeStatusRequesting: changeStatusRequesting\n    // UserListing={UserListing}\n    ,\n    resetSingleQuestion: resetSingleType,\n    deleteQuestion: deleteType,\n    sort: sort,\n    setSort: setSort,\n    setPage: setPage,\n    page: page,\n    count: count,\n    getSearchKeyword: getSearchKeyword,\n    changeStatus: changeStatus,\n    getStatus: getStatus,\n    toggleSort: toggleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(TypeForm, {\n    handleFormVisibilty: handleFormVisibilty,\n    isAddForm: isAddForm,\n    questionId: typeId,\n    setReloadToggle: setReloadToggle,\n    reloadToggle: reloadToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  data: state.types.data,\n  isRequesting: state.types.isRequesting,\n  isSuccess: state.types.isSuccess,\n  isError: state.types.isError,\n  isDeleteSuccess: state.deleteType.isSuccess,\n  isDeleteError: state.deleteType.isError,\n  changeStatusRequesting: state.status.isRequesting,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\nexport default connect(mapStateToProps, {\n  types,\n  resetSingleType,\n  deleteType,\n  resetDeleteType,\n  changeStatus,\n  resetStatus\n})(Types);","map":{"version":3,"names":["React","useState","useEffect","connect","swal","Layout","MainSidebar","SectionHeader","QuestionListing","QuestionForm","types","resetSingleType","deleteType","resetDeleteType","changeStatus","resetStatus","TypeListing","TypeForm","Types","data","isDeleteSuccess","isChangeStatusSuccess","isChangeStatusError","isDeleteError","isRequesting","isSuccess","changeStatusRequesting","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","typeId","setTypeId","handleFormVisibilty","handAddFormToggle","bool","getTypeId","id","getSearchKeyword","value","getStatus","toggleSort","console","log","result","total","mapStateToProps","state","isError"],"sources":["/home/jc-2/Documents/sociality-web/src/pages/Types.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport QuestionListing from '../components/questions/QuestionListing';\nimport QuestionForm from '../components/questions/QuestionsForm';\nimport {\n  types,\n  resetSingleType,\n  deleteType,\n  resetDeleteType\n} from '../store/actions/typeActions';\nimport {\n  changeStatus,\n  resetStatus\n} from '../store/actions/changeStatusActions';\nimport TypeListing from '../components/types/TypeListing';\nimport TypeForm from '../components/types/TypeForm';\n\nconst Types = ({\n  data,\n  types,\n  resetSingleType,\n  deleteType,\n  resetDeleteType,\n  isDeleteSuccess,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isRequesting,\n  isSuccess,\n  changeStatusRequesting\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    types(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [\n    reloadToggle,\n    page,\n    sort,\n    searchKeyword,\n    isDeleteSuccess,\n    token,\n    type,\n    count,\n    sortType,\n    types\n  ]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Type has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteType();\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteType();\n    }\n  }, [isDeleteSuccess, isDeleteError, resetDeleteType]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Type has been activated'\n          : 'Type has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    status,\n    reloadToggle,\n    resetStatus\n  ]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [typeId, setTypeId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getTypeId = id => {\n    setTypeId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  console.log('data', data);\n  return (\n    <Layout title=\"Types\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Types\" />\n          {!formVisibility ? (\n            <TypeListing\n              handleFormVisibilty={handleFormVisibilty}\n              questions={data && data.result}\n              total={data && data.total}\n              handAddFormToggle={handAddFormToggle}\n              getQuestionId={getTypeId}\n              isRequesting={isRequesting}\n              changeStatusRequesting={changeStatusRequesting}\n              // UserListing={UserListing}\n              resetSingleQuestion={resetSingleType}\n              deleteQuestion={deleteType}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : (\n            <TypeForm\n              handleFormVisibilty={handleFormVisibilty}\n              isAddForm={isAddForm}\n              questionId={typeId}\n              setReloadToggle={setReloadToggle}\n              reloadToggle={reloadToggle}\n            />\n          )}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.types.data,\n  isRequesting: state.types.isRequesting,\n  isSuccess: state.types.isSuccess,\n  isError: state.types.isError,\n  isDeleteSuccess: state.deleteType.isSuccess,\n  isDeleteError: state.deleteType.isError,\n  changeStatusRequesting: state.status.isRequesting,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\n\nexport default connect(mapStateToProps, {\n  types,\n  resetSingleType,\n  deleteType,\n  resetDeleteType,\n  changeStatus,\n  resetStatus\n})(Types);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}