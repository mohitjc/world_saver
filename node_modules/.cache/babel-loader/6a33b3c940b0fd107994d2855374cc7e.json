{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/rolesAndPermissions/RolesAndPermissionsForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { skillAdd, skillUpdate, singleSkill, resetAddSkill, resetUpdateSkill, skills } from '../../store/actions/skillsActions';\n\nconst SkillsForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  skills,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  skillId,\n  singleSkill,\n  singleSkillData,\n  resetAddSkill,\n  resetUpdateSkill\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New skill added!', '', 'success');\n      handleFormVisibilty();\n      resetAddSkill();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning'); // handleFormVisibilty();\n\n      resetUpdateSkill(); // setReloadToggle(!reloadToggle);\n    }\n\n    if (isUpdateSuccess) {\n      swal('Skill updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateSkill();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess]);\n  useEffect(() => {\n    if (!isAddForm) {\n      singleSkill(skillId, token); // swal('New user added!', '', 'success');\n    }\n  }, [singleSkill]); // console.log('data', data);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"View R & P\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" R & P\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, errors.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst SkillsFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleSkillData\n  }) => {\n    // console.log('singleSkillData', singleSkillData);\n    return {\n      name: singleSkillData && singleSkillData.skill.name\n    };\n  },\n  validationSchema: yupObject().shape({\n    name: yupString().max(50).required()\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token'); // console.log('state values', values);\n\n    if (props.isAddForm) {\n      props.skillAdd({\n        name: values.name\n      }, token);\n    } else {\n      props.skillUpdate({\n        name: values.name,\n        id: props.skillId\n      }, token);\n    } // resetForm();\n\n  },\n  displayName: 'SkillsForm' // helps with React DevTools\n\n})(SkillsForm);\n\nconst mapStateToProps = state => ({\n  data: state.skillsAdd.data,\n  isRequesting: state.skillsAdd.isRequesting,\n  isUpdateRequesting: state.skillsUpdate.isRequesting,\n  isSuccess: state.skillsAdd.isSuccess,\n  isUpdateSuccess: state.skillsUpdate.isSuccess,\n  isError: state.skillsAdd.isError,\n  singleSkillData: state.skill.data\n});\n\nexport default connect(mapStateToProps, {\n  skillAdd,\n  skillUpdate,\n  singleSkill,\n  resetAddSkill,\n  resetUpdateSkill,\n  skills\n})(SkillsFormFormik);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/rolesAndPermissions/RolesAndPermissionsForm.js"],"names":["React","useEffect","useState","connect","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","skillAdd","skillUpdate","singleSkill","resetAddSkill","resetUpdateSkill","skills","SkillsForm","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","data","isAddForm","reloadToggle","setReloadToggle","skillId","singleSkillData","token","localStorage","getItem","message","name","display","SkillsFormFormik","enableReinitialize","mapPropsToValues","skill","validationSchema","shape","max","required","props","setSubmitting","resetForm","id","displayName","mapStateToProps","state","skillsAdd","skillsUpdate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\n\nimport {\n  skillAdd,\n  skillUpdate,\n  singleSkill,\n  resetAddSkill,\n  resetUpdateSkill,\n  skills\n} from '../../store/actions/skillsActions';\n\nconst SkillsForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  skills,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  skillId,\n  singleSkill,\n  singleSkillData,\n  resetAddSkill,\n  resetUpdateSkill\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New skill added!', '', 'success');\n      handleFormVisibilty();\n      resetAddSkill();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      // handleFormVisibilty();\n      resetUpdateSkill();\n      // setReloadToggle(!reloadToggle);\n    }\n    if (isUpdateSuccess) {\n      swal('Skill updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateSkill();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess]);\n\n  useEffect(() => {\n    if (!isAddForm) {\n      singleSkill(skillId, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [singleSkill]);\n\n  // console.log('data', data);\n\n  return (\n    <div className=\"\">\n      <button className=\"btn btn-primary mb-3\" onClick={handleFormVisibilty}>\n        View R & P\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} R & P</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.name}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.name && touched.name && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.name}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* <div className=\"row\">\n              <div className=\"form-group col-12\">\n                <label>Bio</label>\n                <textarea className=\"form-control summernote-simple\">\n                  asdkahjs\n                </textarea>\n              </div>\n            </div> */}\n            {/* <div className=\"row\">\n              <div className=\"form-group mb-0 col-12\">\n                <div className=\"custom-control custom-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    className=\"custom-control-input\"\n                    id=\"newsletter\"\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"newsletter\">\n                    Subscribe to newsletter\n                  </label>\n                  <div className=\"text-muted form-text\">\n                    You will get new information about products, offers and\n                    promotions\n                  </div>\n                </div>\n              </div>\n            </div> */}\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst SkillsFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleSkillData }) => {\n    // console.log('singleSkillData', singleSkillData);\n    return {\n      name: singleSkillData && singleSkillData.skill.name\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    name: yupString()\n      .max(50)\n      .required()\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    // console.log('state values', values);\n    if (props.isAddForm) {\n      props.skillAdd(\n        {\n          name: values.name\n        },\n        token\n      );\n    } else {\n      props.skillUpdate(\n        {\n          name: values.name,\n          id: props.skillId\n        },\n\n        token\n      );\n    }\n\n    // resetForm();\n  },\n\n  displayName: 'SkillsForm' // helps with React DevTools\n})(SkillsForm);\n\nconst mapStateToProps = state => ({\n  data: state.skillsAdd.data,\n  isRequesting: state.skillsAdd.isRequesting,\n  isUpdateRequesting: state.skillsUpdate.isRequesting,\n  isSuccess: state.skillsAdd.isSuccess,\n  isUpdateSuccess: state.skillsUpdate.isSuccess,\n  isError: state.skillsAdd.isError,\n  singleSkillData: state.skill.data\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    skillAdd,\n    skillUpdate,\n    singleSkill,\n    resetAddSkill,\n    resetUpdateSkill,\n    skills\n  }\n)(SkillsFormFormik);\n"]},"metadata":{},"sourceType":"module"}