{"ast":null,"code":"/**\n * @description :  This file has question add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, QUESTION_ADD, QUESTION_UPDATE, GET_QUESTIONS, GET_SINGLE_QUESTION, DELETE_SINGLE_QUESTION, QUESTION_API, ADD_QUESTION_API, ALL_QUESTION_API, DELETE_QUESTION_API } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index'; // add questions\n\nexport function questionsAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(QUESTION_ADD.QUESTION_ADD_REQUEST));\n    const getUrl = ADD_QUESTION_API;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.post(getUrl, postObj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(QUESTION_ADD.QUESTION_ADD_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error.message : 'Something went wrong!';\n      dispatch(getFailure(QUESTION_ADD.QUESTION_ADD_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // update questions\n\nexport function questionsUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(QUESTION_UPDATE.QUESTION_UPDATE_REQUEST));\n    const getUrl = `${QUESTION_API}/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.put(getUrl, obj, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('updateUser', data);\n      if (data.success) {\n        dispatch(getSuccess(QUESTION_UPDATE.QUESTION_UPDATE_SUCCESS, data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(QUESTION_UPDATE.QUESTION_UPDATE_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get all questions\n\nexport function questions(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_QUESTIONS.GET_QUESTIONS_REQUEST));\n    const getUrl = `${ALL_QUESTION_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_QUESTIONS.GET_QUESTIONS_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_QUESTIONS.GET_QUESTIONS_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // get single question detail\n\nexport function singleQuestion(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_REQUEST));\n    const getUrl = `${QUESTION_API}/?id=${id}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('singleCategory', data);\n      if (data.success) {\n        dispatch(getSuccess(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n} // delete single question\n\nexport function deleteQuestion(obj, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_REQUEST));\n    const getUrl = `${DELETE_QUESTION_API}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: obj\n    };\n    AXIOS_INSTANCE.delete(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('deleteUser', data);\n      if (data.success) {\n        dispatch(getSuccess(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_SUCCESS, data.data));\n      }\n    }).catch(error => {\n      console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function resetDeleteQuestion() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_RESET));\n  };\n}\nexport function resetAddQuestion() {\n  return dispatch => {\n    dispatch(reset(QUESTION_ADD.QUESTION_ADD_RESET));\n  };\n}\nexport function resetSingleQuestion() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_RESET));\n  };\n}\nexport function resetUpdateQuestion() {\n  return dispatch => {\n    dispatch(reset(QUESTION_UPDATE.QUESTION_UPDATE_RESET));\n  };\n}","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/store/actions/questionsActions.js"],"names":["AXIOS_INSTANCE","QUESTION_ADD","QUESTION_UPDATE","GET_QUESTIONS","GET_SINGLE_QUESTION","DELETE_SINGLE_QUESTION","QUESTION_API","ADD_QUESTION_API","ALL_QUESTION_API","DELETE_QUESTION_API","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","questionsAdd","postObj","token","dispatch","QUESTION_ADD_REQUEST","getUrl","config","headers","Authorization","post","then","data","success","QUESTION_ADD_SUCCESS","catch","error","errorMessage","response","message","QUESTION_ADD_FAILURE","statusCode","questionsUpdate","obj","id","QUESTION_UPDATE_REQUEST","put","QUESTION_UPDATE_SUCCESS","console","log","error_description","QUESTION_UPDATE_FAILURE","questions","type","page","count","sortType","sort","search","GET_QUESTIONS_REQUEST","get","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILURE","singleQuestion","GET_SINGLE_QUESTION_REQUEST","GET_SINGLE_QUESTION_SUCCESS","GET_SINGLE_QUESTION_FAILURE","deleteQuestion","DELETE_SINGLE_QUESTION_REQUEST","delete","DELETE_SINGLE_QUESTION_SUCCESS","DELETE_SINGLE_QUESTION_FAILURE","resetDeleteQuestion","DELETE_SINGLE_QUESTION_RESET","resetAddQuestion","QUESTION_ADD_RESET","resetSingleQuestion","GET_SINGLE_QUESTION_RESET","resetUpdateQuestion","QUESTION_UPDATE_RESET"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has question add, edit, delete, blog detail functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  QUESTION_ADD,\n  QUESTION_UPDATE,\n  GET_QUESTIONS,\n  GET_SINGLE_QUESTION,\n  DELETE_SINGLE_QUESTION,\n  QUESTION_API,\n  ADD_QUESTION_API,\n  ALL_QUESTION_API,\n  DELETE_QUESTION_API\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset } from './index';\n\n// add questions\n\nexport function questionsAdd(postObj, token) {\n  return dispatch => {\n    dispatch(getRequest(QUESTION_ADD.QUESTION_ADD_REQUEST));\n    const getUrl = ADD_QUESTION_API;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.post(getUrl, postObj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(QUESTION_ADD.QUESTION_ADD_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.error\n            ? error.response.data.error.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(QUESTION_ADD.QUESTION_ADD_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// update questions\n\nexport function questionsUpdate(obj, id, token) {\n  return dispatch => {\n    dispatch(getRequest(QUESTION_UPDATE.QUESTION_UPDATE_REQUEST));\n    const getUrl = `${QUESTION_API}/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.put(getUrl, obj, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('updateUser', data);\n        if (data.success) {\n          dispatch(getSuccess(QUESTION_UPDATE.QUESTION_UPDATE_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(QUESTION_UPDATE.QUESTION_UPDATE_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get all questions\n\nexport function questions(token, type, page, count, sortType, sort, search) {\n  return dispatch => {\n    dispatch(getRequest(GET_QUESTIONS.GET_QUESTIONS_REQUEST));\n    const getUrl = `${ALL_QUESTION_API}?type=${type}&search=${search}&page=${page}&count=${10}&sortBy=${sortType} ${sort}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(GET_QUESTIONS.GET_QUESTIONS_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_QUESTIONS.GET_QUESTIONS_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// get single question detail\n\nexport function singleQuestion(id, token) {\n  return dispatch => {\n    dispatch(getRequest(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_REQUEST));\n    const getUrl = `${QUESTION_API}/?id=${id}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('singleCategory', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// delete single question\n\nexport function deleteQuestion(obj, token) {\n  return dispatch => {\n    dispatch(getRequest(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_REQUEST));\n    const getUrl = `${DELETE_QUESTION_API}`;\n    const config = { headers: { Authorization: `Bearer ${token}` }, data: obj };\n    AXIOS_INSTANCE.delete(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('deleteUser', data);\n        if (data.success) {\n          dispatch(\n            getSuccess(\n              DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_SUCCESS,\n              data.data\n            )\n          );\n        }\n      })\n      .catch(error => {\n        console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function resetDeleteQuestion() {\n  return dispatch => {\n    dispatch(reset(DELETE_SINGLE_QUESTION.DELETE_SINGLE_QUESTION_RESET));\n  };\n}\n\nexport function resetAddQuestion() {\n  return dispatch => {\n    dispatch(reset(QUESTION_ADD.QUESTION_ADD_RESET));\n  };\n}\n\nexport function resetSingleQuestion() {\n  return dispatch => {\n    dispatch(reset(GET_SINGLE_QUESTION.GET_SINGLE_QUESTION_RESET));\n  };\n}\n\nexport function resetUpdateQuestion() {\n  return dispatch => {\n    dispatch(reset(QUESTION_UPDATE.QUESTION_UPDATE_RESET));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}