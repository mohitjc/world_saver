{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/components/articles/ArticleForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { blogAdd, blogsUpdate, singleBlog, resetAddBlog, resetUpdateBlog, uploadImage, blogs } from '../../store/actions/blogsActions';\nimport ImageUpload from '../global/ImageUpload';\nimport TagInput from '../global/TagInput';\n\nconst ArticleForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  blogId,\n  singleBlog,\n  resetAddBlog,\n  resetUpdateBlog,\n  setFieldValue,\n  categories\n}) => {\n  const token = localStorage.getItem('token');\n  const [showUrlInput, setShowUrlInput] = useState(false);\n  console.log(\"categories\", categories);\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New blog added!', '', 'success');\n      handleFormVisibilty();\n      resetAddBlog();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning'); // handleFormVisibilty();\n\n      resetUpdateBlog(); // setReloadToggle(!reloadToggle);\n    }\n\n    if (isUpdateSuccess) {\n      swal('Blog updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateBlog();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess, handleFormVisibilty, resetAddBlog, setReloadToggle, reloadToggle, data, resetUpdateBlog]);\n  useEffect(() => {\n    if (!isAddForm) {\n      singleBlog(blogId, token); // swal('New user added!', '', 'success');\n    }\n  }, [blogId, isAddForm, singleBlog, token]);\n\n  const getInput = values => {\n    setFieldValue('tags', values);\n  };\n\n  const getImage = value => {\n    setFieldValue('image', value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"View Articles\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" article\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, !showUrlInput && /*#__PURE__*/React.createElement(ImageUpload, {\n    getImage: getImage,\n    type: \"blogs\",\n    value: values.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, !showUrlInput && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.title,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }), errors.title && touched.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, errors.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Category\"), values.category.id, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control\",\n    value: values.category,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, \"Select category\"), categories && categories.data && categories.data.category.map(item => {\n    if (item.category == 'blog') {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item.id,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      }, item.name);\n    }\n  })), errors.category && touched.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"Please select category\")), !showUrlInput && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-8 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    name: \"description\",\n    value: values.description,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }), errors.description && touched.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Please select description\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: \"customCheck1\",\n    checked: showUrlInput,\n    onChange: () => setShowUrlInput(!showUrlInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    for: \"customCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"Or add your custom link for the blog\"))), showUrlInput && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"blogUrl\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.blogUrl,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), errors.blogUrl && touched.blogUrl && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, errors.blogUrl)), /*#__PURE__*/React.createElement(TagInput, {\n    getInput: getInput,\n    tags: values.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst ArticleFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleBlogData\n  }) => {\n    var _singleBlogData$categ;\n\n    // console.log('singleBlogData', singleBlogData);\n    return {\n      title: singleBlogData && singleBlogData.title || '',\n      description: singleBlogData && singleBlogData.description || '',\n      image: singleBlogData && singleBlogData.image || '',\n      category: singleBlogData && ((_singleBlogData$categ = singleBlogData.category) === null || _singleBlogData$categ === void 0 ? void 0 : _singleBlogData$categ.id) || '',\n      blogUrl: singleBlogData && singleBlogData.blogUrl || '',\n      tags: singleBlogData && singleBlogData.tags || []\n    };\n  },\n  validationSchema: yupObject().shape({\n    // title: yupString()\n    //   .max(50)\n    //   .required(),\n    // description: yupString().required(),\n    category: yupString().required()\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // console.log('values', values);\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n\n    if (props.isAddForm) {\n      props.blogAdd({\n        title: values.title,\n        category: values.category,\n        image: values.image,\n        tags: values.tags,\n        blogUrl: values.blogUrl,\n        // slug: values.slug,\n        description: values.description\n      }, token);\n    } else {\n      props.blogsUpdate({\n        title: values.title,\n        category: values.category,\n        image: values.image,\n        tags: values.tags,\n        blogUrl: values.blogUrl,\n        // slug: values.slug,\n        description: values.description\n      }, props.blogId, token);\n    }\n\n    resetForm();\n  },\n  displayName: 'BlogForm' // helps with React DevTools\n\n})(ArticleForm);\n\nconst mapStateToProps = state => ({\n  data: state.blogAdd.data,\n  isRequesting: state.blogAdd.isRequesting,\n  isUpdateRequesting: state.blogUpdate.isRequesting,\n  isSuccess: state.blogAdd.isSuccess,\n  isUpdateSuccess: state.blogUpdate.isSuccess,\n  isError: state.blogAdd.isError,\n  singleBlogData: state.blog.data\n});\n\nexport default connect(mapStateToProps, {\n  blogAdd,\n  blogsUpdate,\n  singleBlog,\n  resetAddBlog,\n  resetUpdateBlog,\n  uploadImage,\n  blogs\n})(ArticleFormFormik);","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/components/articles/ArticleForm.js"],"names":["React","useEffect","useState","connect","useSelector","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","blogAdd","blogsUpdate","singleBlog","resetAddBlog","resetUpdateBlog","uploadImage","blogs","ImageUpload","TagInput","ArticleForm","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","data","isAddForm","reloadToggle","setReloadToggle","blogId","setFieldValue","categories","token","localStorage","getItem","showUrlInput","setShowUrlInput","console","log","message","getInput","getImage","value","image","title","display","category","id","map","item","name","description","blogUrl","tags","ArticleFormFormik","enableReinitialize","mapPropsToValues","singleBlogData","validationSchema","shape","required","props","setSubmitting","resetForm","displayName","mapStateToProps","state","blogUpdate","blog"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\nimport {\n  blogAdd,\n  blogsUpdate,\n  singleBlog,\n  resetAddBlog,\n  resetUpdateBlog,\n  uploadImage,\n  blogs\n} from '../../store/actions/blogsActions';\nimport ImageUpload from '../global/ImageUpload';\nimport TagInput from '../global/TagInput';\n\nconst ArticleForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  blogId,\n  singleBlog,\n  resetAddBlog,\n  resetUpdateBlog,\n  setFieldValue,\n  categories\n}) => {\n  const token = localStorage.getItem('token');\n  const [showUrlInput, setShowUrlInput] = useState(false);\n\n  console.log(\"categories\",categories)\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New blog added!', '', 'success');\n      handleFormVisibilty();\n      resetAddBlog();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      // handleFormVisibilty();\n      resetUpdateBlog();\n      // setReloadToggle(!reloadToggle);\n    }\n    if (isUpdateSuccess) {\n      swal('Blog updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateBlog();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [\n    isSuccess,\n    isError,\n    isUpdateSuccess,\n    handleFormVisibilty,\n    resetAddBlog,\n    setReloadToggle,\n    reloadToggle,\n    data,\n    resetUpdateBlog\n  ]);\n\n  useEffect(() => {\n    if (!isAddForm) {\n      singleBlog(blogId, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [blogId, isAddForm, singleBlog, token]);\n\n  const getInput = values => {\n    setFieldValue('tags', values);\n  };\n\n  const getImage = value => {\n    setFieldValue('image', value);\n  };\n\n  return (\n    <div className=\"\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary mb-3\"\n        onClick={handleFormVisibilty}\n      >\n        View Articles\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} article</h4>\n          </div>\n\n          <div className=\"card-body\">\n            {!showUrlInput && (\n              <ImageUpload\n                getImage={getImage}\n                type=\"blogs\"\n                value={values.image}\n              />\n            )}\n            <div className=\"row\">\n              {!showUrlInput && (\n                <div className=\"form-group col-md-4 col-12 mt-3\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    className=\"form-control\"\n                    // value=\"john\"\n\n                    value={values.title}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                  {errors.title && touched.title && (\n                    <div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      {errors.title}\n                    </div>\n                  )}\n                </div>\n              )}\n\n              <div className=\"form-group col-md-4 col-12 mt-3\">\n                <label>Category</label>{values.category.id}\n                <select\n                  name=\"category\"\n                  className=\"form-control\"\n                  value={values.category}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option>Select category</option>\n                  {categories && categories.data &&\n                    categories.data.category.map(item =>{\n                      if(item.category=='blog'){\n                        return  <option value={item.id} key={item.id}>\n                        {item.name}\n                      </option>\n                      }\n                    })}\n                </select>\n                {errors.category && touched.category && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    Please select category\n                  </div>\n                )}\n              </div>\n\n              {!showUrlInput && (\n                <div className=\"form-group col-md-8 col-12\">\n                  <label>Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"description\"\n                    value={values.description}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                  {errors.description && touched.description && (\n                    <div\n                      className=\"invalid-feedback\"\n                      style={{ display: 'block' }}\n                    >\n                      Please select description\n                    </div>\n                  )}\n                </div>\n              )}\n              <div className=\"form-group col-md-12 col-12\">\n                <div className=\"custom-control custom-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"custom-control-input\"\n                    id=\"customCheck1\"\n                    checked={showUrlInput}\n                    onChange={() => setShowUrlInput(!showUrlInput)}\n                  />\n                  <label className=\"custom-control-label\" for=\"customCheck1\">\n                    Or add your custom link for the blog\n                  </label>\n                </div>\n              </div>\n              {showUrlInput && (\n                <>\n                  <div className=\"form-group col-md-12 col-12\">\n                    <label>URL</label>\n                    <input\n                      type=\"text\"\n                      name=\"blogUrl\"\n                      className=\"form-control\"\n                      // value=\"john\"\n\n                      value={values.blogUrl}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                    />\n                    {errors.blogUrl && touched.blogUrl && (\n                      <div\n                        className=\"invalid-feedback\"\n                        style={{ display: 'block' }}\n                      >\n                        {errors.blogUrl}\n                      </div>\n                    )}\n                  </div>\n                  <TagInput getInput={getInput} tags={values.tags} />\n                </>\n              )}\n            </div>\n          </div>\n\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst ArticleFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleBlogData }) => {\n    // console.log('singleBlogData', singleBlogData);\n    return {\n      title: (singleBlogData && singleBlogData.title) || '',\n      description: (singleBlogData && singleBlogData.description) || '',\n      image: (singleBlogData && singleBlogData.image) || '',\n      category: (singleBlogData && singleBlogData.category?.id) || '',\n      blogUrl: (singleBlogData && singleBlogData.blogUrl) || '',\n      tags: (singleBlogData && singleBlogData.tags) || []\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    // title: yupString()\n    //   .max(50)\n    //   .required(),\n    // description: yupString().required(),\n    category: yupString().required()\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // console.log('values', values);\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    if (props.isAddForm) {\n      props.blogAdd(\n        {\n          title: values.title,\n          category: values.category,\n          image: values.image,\n          tags: values.tags,\n          blogUrl: values.blogUrl,\n          // slug: values.slug,\n          description: values.description\n        },\n        token\n      );\n    } else {\n      props.blogsUpdate(\n        {\n          title: values.title,\n          category: values.category,\n          image: values.image,\n          tags: values.tags,\n          blogUrl: values.blogUrl,\n          // slug: values.slug,\n          description: values.description\n        },\n        props.blogId,\n        token\n      );\n    }\n\n    resetForm();\n  },\n\n  displayName: 'BlogForm' // helps with React DevTools\n})(ArticleForm);\n\nconst mapStateToProps = state => ({\n  data: state.blogAdd.data,\n  isRequesting: state.blogAdd.isRequesting,\n  isUpdateRequesting: state.blogUpdate.isRequesting,\n  isSuccess: state.blogAdd.isSuccess,\n  isUpdateSuccess: state.blogUpdate.isSuccess,\n  isError: state.blogAdd.isError,\n  singleBlogData: state.blog.data\n});\n\nexport default connect(mapStateToProps, {\n  blogAdd,\n  blogsUpdate,\n  singleBlog,\n  resetAddBlog,\n  resetUpdateBlog,\n  uploadImage,\n  blogs\n})(ArticleFormFormik);\n"]},"metadata":{},"sourceType":"module"}