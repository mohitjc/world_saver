{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/pages/RolesAndPermissions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport RolesAndPermissionsListing from '../components/rolesAndPermissions/RolesAndPermissionsListing';\nimport { names, resetSingleName, deleteName, resetDeleteName } from '../store/actions/planNameActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport RolesAndPermissionsForm from '../components/rolesAndPermissions/RolesAndPermissionsForm';\nconst RolesAndPermissions = _ref => {\n  let {\n    data,\n    names,\n    resetSingleName,\n    deleteName,\n    resetDeleteName,\n    isDeleteSuccess,\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    isDeleteError,\n    changeStatus,\n    resetStatus,\n    isSuccess\n  } = _ref;\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    names(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [names, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Name has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Name has been activated' : 'Name has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [nameId, setNameId] = useState(null);\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n  const getNameId = id => {\n    setNameId(id);\n  };\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n  const getStatus = value => {\n    setStatus(value);\n  };\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  // console.log('isDeleteError', isDeleteError);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Roles And Permissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Roles And Permissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  data: state.names.data,\n  isRequesting: state.names.isRequesting,\n  isSuccess: state.names.isSuccess,\n  isError: state.names.isError,\n  isDeleteSuccess: state.deleteName.isSuccess,\n  isDeleteError: state.deleteName.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\nexport default connect(mapStateToProps, {\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName,\n  changeStatus,\n  resetStatus\n})(RolesAndPermissions);","map":{"version":3,"names":["React","useState","useEffect","connect","swal","Layout","MainSidebar","SectionHeader","RolesAndPermissionsListing","names","resetSingleName","deleteName","resetDeleteName","changeStatus","resetStatus","RolesAndPermissionsForm","RolesAndPermissions","data","isDeleteSuccess","isChangeStatusSuccess","isChangeStatusError","isDeleteError","isSuccess","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","nameId","setNameId","handleFormVisibilty","handAddFormToggle","bool","getNameId","id","getSearchKeyword","value","getStatus","toggleSort","mapStateToProps","state","isRequesting","isError"],"sources":["/home/jc-2/Documents/sociality-web/src/pages/RolesAndPermissions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport RolesAndPermissionsListing from '../components/rolesAndPermissions/RolesAndPermissionsListing';\nimport {\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName\n} from '../store/actions/planNameActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport RolesAndPermissionsForm from '../components/rolesAndPermissions/RolesAndPermissionsForm';\n\nconst RolesAndPermissions = ({\n  data,\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName,\n  isDeleteSuccess,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isSuccess\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    names(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [names, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Name has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Name has been activated'\n          : 'Name has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [nameId, setNameId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getNameId = id => {\n    setNameId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  // console.log('isDeleteError', isDeleteError);\n  return (\n    <Layout title=\"Roles And Permissions\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Roles And Permissions\" />\n          {/* {!formVisibility ? (\n            <RolesAndPermissionsListing\n              handleFormVisibilty={handleFormVisibilty}\n              names={data && data.data && data.data.subscribenames}\n              total={data && data.data && data.data.total}\n              handAddFormToggle={handAddFormToggle}\n              getNameId={getNameId}\n              // UserListing={UserListing}\n              resetSingleName={resetSingleName}\n              deleteName={deleteName}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : null} */}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.names.data,\n  isRequesting: state.names.isRequesting,\n  isSuccess: state.names.isSuccess,\n  isError: state.names.isError,\n  isDeleteSuccess: state.deleteName.isSuccess,\n  isDeleteError: state.deleteName.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    names,\n    resetSingleName,\n    deleteName,\n    resetDeleteName,\n    changeStatus,\n    resetStatus\n  }\n)(RolesAndPermissions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}