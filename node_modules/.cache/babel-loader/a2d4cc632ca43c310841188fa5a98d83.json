{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/user/UserForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, { object as yupObject, string as yupString, number as yupNumber } from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\nimport { isNull } from 'lodash';\nimport { userAdd, userUpdate, singleUser, resetAddUser, resetUpdateUser, users } from '../../store/actions/userActions';\n\nconst UserEditForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  users,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  userId,\n  singleUser,\n  singleUserData,\n  resetAddUser,\n  resetUpdateUser\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New user added!', '', 'success');\n      handleFormVisibilty();\n      resetAddUser();\n      setReloadToggle(!reloadToggle);\n    }\n\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning'); // handleFormVisibilty();\n\n      resetAddUser(); // setReloadToggle(!reloadToggle);\n    }\n\n    if (isUpdateSuccess) {\n      swal('User updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateUser();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [isSuccess, isError, isUpdateSuccess, handleFormVisibilty, resetAddUser, setReloadToggle, reloadToggle, data, resetUpdateUser]);\n  useEffect(() => {\n    if (!isAddForm) {\n      singleUser(userId, token); // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, singleUser, token, userId]); // console.log('data', data);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"View Users\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"needs-validation\",\n    noValidate: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, isAddForm ? 'Add' : 'Edit', \" user\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\" // value=\"john\"\n    ,\n    value: values.firstName,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, errors.firstName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"lastName\" // value=\"Maman\"\n    ,\n    required: \"\",\n    value: values.lastName,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, errors.lastName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\" // value=\"ujang@maman.com\"\n    ,\n    name: \"email\",\n    required: \"\",\n    value: values.email,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"Please fill in the email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-md-4 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\" // value=\"\"\n    ,\n    name: \"mobile\",\n    value: values.mobile,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), errors.mobile && touched.mobile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, errors.mobile)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleFormVisibilty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary   ${isRequesting || isUpdateRequesting ? 'btn-progress disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\n\nconst UserEditFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({\n    singleUserData\n  }) => {\n    // console.log('singleUserData', singleUserData);\n    return {\n      firstName: singleUserData && singleUserData.firstName || '',\n      lastName: singleUserData && singleUserData.lastName || '',\n      email: singleUserData && singleUserData.email || '',\n      mobile: singleUserData && singleUserData.mobile || '',\n      roles: singleUserData && singleUserData.roles || ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    firstName: yupString().max(15).required(),\n    lastName: yupString().max(15).required(),\n    // roles: yupString().required(),\n    email: yupString().email().required(),\n    mobile: yupString().length(10).required() // .required()\n    // password: yupString().min(8)\n\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token'); // console.log('state values', values);\n\n    if (props.isAddForm) {\n      props.userAdd({\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        mobile: values.mobile,\n        roles: 'U'\n      }, token);\n    } else {\n      props.userUpdate({\n        firstName: values.firstName,\n        lastName: values.lastName,\n        username: values.username,\n        mobile: values.mobile,\n        roles: 'U'\n      }, props.userId, token);\n    } // resetForm();\n\n  },\n  displayName: 'UserEditForm' // helps with React DevTools\n\n})(UserEditForm);\n\nconst mapStateToProps = state => ({\n  data: state.userAdd.data,\n  isRequesting: state.userAdd.isRequesting,\n  isUpdateRequesting: state.userUpdate.isRequesting,\n  isSuccess: state.userAdd.isSuccess,\n  isUpdateSuccess: state.userUpdate.isSuccess,\n  isError: state.userAdd.isError,\n  singleUserData: state.user.data\n});\n\nexport default connect(mapStateToProps, {\n  userAdd,\n  userUpdate,\n  singleUser,\n  resetAddUser,\n  resetUpdateUser\n})(UserEditFormFormik);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/user/UserForm.js"],"names":["React","useEffect","useState","connect","withFormik","Yup","object","yupObject","string","yupString","number","yupNumber","swal","withRouter","isNull","userAdd","userUpdate","singleUser","resetAddUser","resetUpdateUser","users","UserEditForm","handleFormVisibilty","handleSubmit","handleBlur","handleChange","values","isRequesting","isUpdateRequesting","isSuccess","isUpdateSuccess","isError","errors","touched","data","isAddForm","reloadToggle","setReloadToggle","userId","singleUserData","token","localStorage","getItem","message","firstName","display","lastName","email","mobile","UserEditFormFormik","enableReinitialize","mapPropsToValues","roles","validationSchema","shape","max","required","length","props","setSubmitting","resetForm","username","displayName","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport Yup, {\n  object as yupObject,\n  string as yupString,\n  number as yupNumber\n} from 'yup';\nimport swal from 'sweetalert';\nimport { withRouter } from 'react-router-dom';\n\nimport { isNull } from 'lodash';\nimport {\n  userAdd,\n  userUpdate,\n  singleUser,\n  resetAddUser,\n  resetUpdateUser,\n  users\n} from '../../store/actions/userActions';\n\nconst UserEditForm = ({\n  handleFormVisibilty,\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  isRequesting,\n  isUpdateRequesting,\n  isSuccess,\n  isUpdateSuccess,\n  isError,\n  errors,\n  touched,\n  users,\n  data,\n  isAddForm,\n  reloadToggle,\n  setReloadToggle,\n  userId,\n  singleUser,\n  singleUserData,\n  resetAddUser,\n  resetUpdateUser\n}) => {\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    if (isSuccess) {\n      swal('New user added!', '', 'success');\n      handleFormVisibilty();\n      resetAddUser();\n      setReloadToggle(!reloadToggle);\n    }\n    if (isError) {\n      swal(data && data.data && data.data.message, '', 'warning');\n      // handleFormVisibilty();\n      resetAddUser();\n      // setReloadToggle(!reloadToggle);\n    }\n    if (isUpdateSuccess) {\n      swal('User updated!', '', 'success');\n      handleFormVisibilty();\n      resetUpdateUser();\n      setReloadToggle(!reloadToggle);\n    }\n  }, [\n    isSuccess,\n    isError,\n    isUpdateSuccess,\n    handleFormVisibilty,\n    resetAddUser,\n    setReloadToggle,\n    reloadToggle,\n    data,\n    resetUpdateUser\n  ]);\n\n  useEffect(() => {\n    if (!isAddForm) {\n      singleUser(userId, token);\n      // swal('New user added!', '', 'success');\n    }\n  }, [isAddForm, singleUser, token, userId]);\n\n  // console.log('data', data);\n\n  return (\n    <div className=\"\">\n      <button className=\"btn btn-primary mb-3\" onClick={handleFormVisibilty}>\n        View Users\n      </button>\n      <div className=\"card\">\n        <form\n          onSubmit={handleSubmit}\n          className=\"needs-validation\"\n          noValidate=\"\"\n        >\n          <div className=\"card-header\">\n            <h4>{isAddForm ? 'Add' : 'Edit'} user</h4>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>First Name</label>\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  className=\"form-control\"\n                  // value=\"john\"\n\n                  value={values.firstName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.firstName && touched.firstName && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.firstName}\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Last Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  // value=\"Maman\"\n                  required=\"\"\n                  value={values.lastName}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.lastName && touched.lastName && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.lastName}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  // value=\"ujang@maman.com\"\n                  name=\"email\"\n                  required=\"\"\n                  value={values.email}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.email && touched.email && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    Please fill in the email\n                  </div>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 col-12\">\n                <label>Phone</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  // value=\"\"\n                  name=\"mobile\"\n                  value={values.mobile}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                {errors.mobile && touched.mobile && (\n                  <div\n                    className=\"invalid-feedback\"\n                    style={{ display: 'block' }}\n                  >\n                    {errors.mobile}\n                  </div>\n                )}\n              </div>\n            </div>\n            {/* <div className=\"row\">\n              <div className=\"form-group col-12\">\n                <label>Bio</label>\n                <textarea className=\"form-control summernote-simple\">\n                  asdkahjs\n                </textarea>\n              </div>\n            </div> */}\n            {/* <div className=\"row\">\n              <div className=\"form-group mb-0 col-12\">\n                <div className=\"custom-control custom-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    className=\"custom-control-input\"\n                    id=\"newsletter\"\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"newsletter\">\n                    Subscribe to newsletter\n                  </label>\n                  <div className=\"text-muted form-text\">\n                    You will get new information about products, offers and\n                    promotions\n                  </div>\n                </div>\n              </div>\n            </div> */}\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={handleFormVisibilty}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn btn-primary   ${\n                isRequesting || isUpdateRequesting\n                  ? 'btn-progress disabled'\n                  : ''\n              }`}\n            >\n              Save Changes\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst UserEditFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ singleUserData }) => {\n    // console.log('singleUserData', singleUserData);\n    return {\n      firstName: (singleUserData && singleUserData.firstName) || '',\n      lastName: (singleUserData && singleUserData.lastName) || '',\n      email: (singleUserData && singleUserData.email) || '',\n      mobile: (singleUserData && singleUserData.mobile) || '',\n      roles: (singleUserData && singleUserData.roles) || ''\n    };\n  },\n\n  validationSchema: yupObject().shape({\n    firstName: yupString()\n      .max(15)\n      .required(),\n    lastName: yupString()\n      .max(15)\n      .required(),\n    // roles: yupString().required(),\n    email: yupString()\n      .email()\n      .required(),\n    mobile: yupString()\n      .length(10)\n      .required()\n    // .required()\n    // password: yupString().min(8)\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // const { router } = props;\n    const token = localStorage.getItem('token');\n    // console.log('state values', values);\n    if (props.isAddForm) {\n      props.userAdd(\n        {\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.email,\n          mobile: values.mobile,\n          roles: 'U'\n        },\n        token\n      );\n    } else {\n      props.userUpdate(\n        {\n          firstName: values.firstName,\n          lastName: values.lastName,\n          username: values.username,\n          mobile: values.mobile,\n          roles: 'U'\n        },\n        props.userId,\n        token\n      );\n    }\n\n    // resetForm();\n  },\n\n  displayName: 'UserEditForm' // helps with React DevTools\n})(UserEditForm);\n\nconst mapStateToProps = state => ({\n  data: state.userAdd.data,\n  isRequesting: state.userAdd.isRequesting,\n  isUpdateRequesting: state.userUpdate.isRequesting,\n  isSuccess: state.userAdd.isSuccess,\n  isUpdateSuccess: state.userUpdate.isSuccess,\n  isError: state.userAdd.isError,\n  singleUserData: state.user.data\n});\n\nexport default connect(mapStateToProps, {\n  userAdd,\n  userUpdate,\n  singleUser,\n  resetAddUser,\n  resetUpdateUser\n})(UserEditFormFormik);\n"]},"metadata":{},"sourceType":"module"}