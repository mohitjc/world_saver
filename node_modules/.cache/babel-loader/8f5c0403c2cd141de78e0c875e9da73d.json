{"ast":null,"code":"/**\n * @description :  This file has user count functions\n * @param:  access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\nimport { AXIOS_INSTANCE, TOTAL_COUNT_API, USER_COUNT_API, TOTAL_COUNT, USER_COUNT } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure } from './index';\nexport function totalCount(token) {\n  return dispatch => {\n    dispatch(getRequest(TOTAL_COUNT.TOTAL_COUNT_REQUEST));\n    const getUrl = `${TOTAL_COUNT_API}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(TOTAL_COUNT.TOTAL_COUNT_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.message ? error.response.data.message : 'Something went wrong!';\n      dispatch(getFailure(TOTAL_COUNT.TOTAL_COUNT_FAILURE, {\n        data: {\n          statusCode: 403,\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\nexport function userCount(token) {\n  return dispatch => {\n    dispatch(getRequest(USER_COUNT.USER_COUNT_REQUEST));\n    const getUrl = `${USER_COUNT_API}?roles=A`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    AXIOS_INSTANCE.get(getUrl, config).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.success) {\n        dispatch(getSuccess(USER_COUNT.USER_COUNT_SUCCESS, data));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.message ? error.response.data.message : 'Something went wrong!';\n      dispatch(getFailure(USER_COUNT.USER_COUNT_FAILURE, {\n        data: {\n          statusCode: 403,\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/totalCountActions.js"],"names":["AXIOS_INSTANCE","TOTAL_COUNT_API","USER_COUNT_API","TOTAL_COUNT","USER_COUNT","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","totalCount","token","dispatch","TOTAL_COUNT_REQUEST","getUrl","config","headers","Authorization","get","then","data","success","TOTAL_COUNT_SUCCESS","catch","error","errorMessage","response","message","TOTAL_COUNT_FAILURE","statusCode","userCount","USER_COUNT_REQUEST","USER_COUNT_SUCCESS","USER_COUNT_FAILURE"],"mappings":"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","sourcesContent":["/**\n * @description :  This file has user count functions\n * @param:  access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  TOTAL_COUNT_API,\n  USER_COUNT_API,\n  TOTAL_COUNT,\n  USER_COUNT\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure } from './index';\n\nexport function totalCount(token) {\n  return dispatch => {\n    dispatch(getRequest(TOTAL_COUNT.TOTAL_COUNT_REQUEST));\n    const getUrl = `${TOTAL_COUNT_API}`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(TOTAL_COUNT.TOTAL_COUNT_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.message\n            ? error.response.data.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(TOTAL_COUNT.TOTAL_COUNT_FAILURE, {\n            data: {\n              statusCode: 403,\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\nexport function userCount(token) {\n  return dispatch => {\n    dispatch(getRequest(USER_COUNT.USER_COUNT_REQUEST));\n    const getUrl = `${USER_COUNT_API}?roles=A`;\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n    AXIOS_INSTANCE.get(getUrl, config)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.success) {\n          dispatch(getSuccess(USER_COUNT.USER_COUNT_SUCCESS, data));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response && error.response.data && error.response.data.message\n            ? error.response.data.message\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(USER_COUNT.USER_COUNT_FAILURE, {\n            data: {\n              statusCode: 403,\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}