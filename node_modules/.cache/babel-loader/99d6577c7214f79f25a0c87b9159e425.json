{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/global/BannerImageUpload.js\";\n\n/* eslint-disable */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { isEmpty } from 'lodash';\nimport swal from 'sweetalert';\nimport { SyncLoader } from 'react-spinners';\nimport { uploadImage } from '../../store/actions/blogsActions';\nimport { API_SLUG } from '../../store/constants';\n\nconst ImageUpload = ({\n  getImage,\n  type,\n  value,\n  placeholder\n}) => {\n  const [images, setImages] = useState([]);\n  const {\n    data,\n    isRequesting,\n    isSuccess\n  } = useSelector(state => state.imageUpload);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isSuccess) {\n      getImage(data && data.data.fullPath);\n    } // setImages(values.images);\n\n  }, [data, images, isSuccess]);\n  const maxSize = 1048576;\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    getBase64(acceptedFiles[0]); // console.log('acceptedFiles', acceptedFiles);\n\n    setImages(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  });\n  const {\n    isDragActive,\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    acceptedFiles,\n    rejectedFiles\n  } = useDropzone({\n    onDrop,\n    accept: 'image/png, image/jpg, image/jpeg, image/svg',\n    minSize: 0,\n    // maxSize,\n    multiple: true\n  }); // const isFileTooLarge =\n  //   rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n  const thumbs = images.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    style: thumb,\n    key: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }))));\n  const files = acceptedFiles.map(file => /*#__PURE__*/React.createElement(\"li\", {\n    key: file.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, file.path, \" - \", file.size, \" bytes\"));\n\n  function getBase64(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      const token = localStorage.getItem('token');\n      dispatch(uploadImage({\n        type: type,\n        data: reader.result\n      }, token));\n    };\n\n    reader.onerror = function (error) {// console.log('Error: ', error);\n    }; // fetch()\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group image-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"demo-upload\",\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dz-message text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })), !isDragActive && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drag-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, isRequesting ? /*#__PURE__*/React.createElement(SyncLoader, {\n    color: '#5383ff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }) : !isEmpty(value) ? /*#__PURE__*/React.createElement(\"div\", {\n    style: thumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${API_SLUG}/images/${type}/${value}`,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }))) : placeholder ? placeholder : 'upload image'), isDragActive && !isDragReject && \"Drop it like it's hot!\", isDragReject && 'File type not accepted, sorry!')))));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/global/BannerImageUpload.js"],"names":["React","useCallback","useState","useEffect","useDropzone","useDispatch","useSelector","withFormik","Yup","isEmpty","swal","SyncLoader","uploadImage","API_SLUG","ImageUpload","getImage","type","value","placeholder","images","setImages","data","isRequesting","isSuccess","state","imageUpload","dispatch","fullPath","maxSize","onDrop","acceptedFiles","rejectedFiles","getBase64","map","file","Object","assign","preview","URL","createObjectURL","isDragActive","getRootProps","getInputProps","isDragReject","accept","minSize","multiple","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","thumbs","name","files","path","size","reader","FileReader","readAsDataURL","onload","token","localStorage","getItem","result","onerror","error"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { isEmpty } from 'lodash';\nimport swal from 'sweetalert';\n\nimport { SyncLoader } from 'react-spinners';\n\nimport { uploadImage } from '../../store/actions/blogsActions';\nimport { API_SLUG } from '../../store/constants';\n\nconst ImageUpload = ({ getImage, type, value, placeholder }) => {\n  const [images, setImages] = useState([]);\n  const { data, isRequesting, isSuccess } = useSelector(\n    state => state.imageUpload\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isSuccess) {\n      getImage(data && data.data.fullPath);\n    }\n    // setImages(values.images);\n  }, [data, images, isSuccess]);\n  const maxSize = 1048576;\n\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    getBase64(acceptedFiles[0]);\n    // console.log('acceptedFiles', acceptedFiles);\n    setImages(\n      acceptedFiles.map(file =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    );\n  });\n  const {\n    isDragActive,\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    acceptedFiles,\n    rejectedFiles\n  } = useDropzone({\n    onDrop,\n    accept: 'image/png, image/jpg, image/jpeg, image/svg',\n    minSize: 0,\n    // maxSize,\n    multiple: true\n  });\n\n  // const isFileTooLarge =\n  //   rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n\n  const thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n  };\n\n  const thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n  };\n\n  const thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n  };\n\n  const img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n  };\n\n  const thumbs = images.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} />\n      </div>\n    </div>\n  ));\n  const files = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  function getBase64(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function() {\n      const token = localStorage.getItem('token');\n\n      dispatch(uploadImage({ type: type, data: reader.result }, token));\n    };\n    reader.onerror = function(error) {\n      // console.log('Error: ', error);\n    };\n    // fetch()\n  }\n  return (\n    <>\n      <div className=\"form-group image-upload\">\n        <form id=\"demo-upload\" className=\"dropzone\">\n          <div className=\"dz-message text-muted\">\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              {!isDragActive && (\n                <div className=\"drag-active\">\n                  {isRequesting ? (\n                    <SyncLoader color={'#5383ff'} />\n                  ) : !isEmpty(value) ? (\n                    <div style={thumb}>\n                      <div style={thumbInner}>\n                        <img\n                          src={`${API_SLUG}/images/${type}/${value}`}\n                          style={img}\n                        />\n                      </div>\n                    </div>\n                  ) : placeholder ? (\n                    placeholder\n                  ) : (\n                    'upload image'\n                  )}\n                </div>\n              )}\n              {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n              {isDragReject && 'File type not accepted, sorry!'}\n              {/* {isFileTooLarge && (\n              <div className=\"text-danger mt-2\">File is too large.</div>\n            )} */}\n            </div>\n          </div>\n        </form>\n      </div>\n      {/* <aside style={thumbsContainer}>\n        {!isEmpty(value) ? (\n          <div style={thumb}>\n            <div style={thumbInner}>\n              <img src={`${API_SLUG}/images/${type}/${value}`} style={img} />\n            </div>\n          </div>\n        ) : (\n          thumbs\n        )}\n      </aside> */}\n    </>\n  );\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}