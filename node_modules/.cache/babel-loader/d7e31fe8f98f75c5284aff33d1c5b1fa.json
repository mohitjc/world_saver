{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/components/login/ForgotPasswordForm.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { object as yupObject, string as yupString } from 'yup';\nimport swal from 'sweetalert';\nimport forgotPassword from '../../store/actions/forgotPasswordActions';\n\nconst ForgotPasswordForm = ({\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  forgotPassword,\n  isRequesting,\n  isSuccess,\n  isError,\n  errors,\n  touched,\n  data\n}) => {\n  useEffect(() => {\n    if (isSuccess) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n    } else if (isError) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n    }\n  }, [isSuccess, isError]); // console.log('isError', isError);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    className: \"form-control\",\n    name: \"email\",\n    tabIndex: \"1\",\n    required: true,\n    autoFocus: true,\n    value: values.email,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary btn-lg btn-block  ${isRequesting ? 'btn-progress disabled' : ''}`,\n    tabIndex: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Forgot Password\")));\n};\n\nconst ForgotPasswordFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => {\n    return {\n      email: ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    email: yupString().email('Email Required ')\n  }),\n  handleSubmit: async (values, {\n    props,\n    setSubmitting,\n    resetForm\n  }) => {\n    // console.log('state values123', values);\n    props.forgotPassword({\n      username: values.email\n    });\n    resetForm();\n  },\n  displayName: 'ForgotPassword' // helps with React DevTools\n\n})(ForgotPasswordForm);\n\nconst mapStateToProps = state => ({\n  data: state.forgotPassword.data,\n  isRequesting: state.forgotPassword.isRequesting,\n  isSuccess: state.forgotPassword.isSuccess,\n  isError: state.forgotPassword.isError\n});\n\nexport default connect(mapStateToProps, {\n  forgotPassword\n})(ForgotPasswordFormFormik);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/components/login/ForgotPasswordForm.js"],"names":["React","useEffect","connect","withFormik","object","yupObject","string","yupString","swal","forgotPassword","ForgotPasswordForm","handleSubmit","handleBlur","handleChange","values","isRequesting","isSuccess","isError","errors","touched","data","message","buttons","timer","email","ForgotPasswordFormFormik","enableReinitialize","mapPropsToValues","validationSchema","shape","props","setSubmitting","resetForm","username","displayName","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { object as yupObject, string as yupString } from 'yup';\nimport swal from 'sweetalert';\n\nimport forgotPassword from '../../store/actions/forgotPasswordActions';\n\nconst ForgotPasswordForm = ({\n  handleSubmit,\n  handleBlur,\n  handleChange,\n  values,\n  forgotPassword,\n  isRequesting,\n  isSuccess,\n  isError,\n  errors,\n  touched,\n  data\n}) => {\n  useEffect(() => {\n    if (isSuccess) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n    } else if (isError) {\n      swal(data && data.data && data.data.message, {\n        buttons: false,\n        timer: 1500\n      });\n    }\n  }, [isSuccess, isError]);\n\n  // console.log('isError', isError);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          className=\"form-control\"\n          name=\"email\"\n          tabIndex=\"1\"\n          required\n          autoFocus\n          value={values.email}\n          onBlur={handleBlur}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <button\n          type=\"submit\"\n          className={`btn btn-primary btn-lg btn-block  ${\n            isRequesting ? 'btn-progress disabled' : ''\n          }`}\n          tabIndex=\"4\"\n        >\n          Forgot Password\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst ForgotPasswordFormFormik = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => {\n    return {\n      email: ''\n    };\n  },\n  validationSchema: yupObject().shape({\n    email: yupString().email('Email Required ')\n  }),\n  handleSubmit: async (values, { props, setSubmitting, resetForm }) => {\n    // console.log('state values123', values);\n    props.forgotPassword({\n      username: values.email\n    });\n    resetForm();\n  },\n  displayName: 'ForgotPassword' // helps with React DevTools\n})(ForgotPasswordForm);\n\nconst mapStateToProps = state => ({\n  data: state.forgotPassword.data,\n  isRequesting: state.forgotPassword.isRequesting,\n  isSuccess: state.forgotPassword.isSuccess,\n  isError: state.forgotPassword.isError\n});\n\nexport default connect(\n  mapStateToProps,\n  { forgotPassword }\n)(ForgotPasswordFormFormik);\n"]},"metadata":{},"sourceType":"module"}