{"ast":null,"code":"var _jsxFileName = \"/home/jc-2/Documents/sociality-web/src/pages/youtube.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport Listing from '../components/youtube/Listing';\nimport Form from '../components/youtube/Form';\nimport { items, resetSingle, Delete, resetDelete, Archive } from '../store/actions/youtubeActions';\nimport { types } from '../store/actions/typeActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport ApiClient from '../components/apiClient';\n\nconst Youtube = ({\n  items,\n  data,\n  resetSingle,\n  Delete,\n  Archive,\n  resetDelete,\n  isDeleteSuccess,\n  isArchiveSuccess,\n  isDeleteError,\n  isArchiveError,\n  changeStatus,\n  resetStatus,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isSuccess,\n  isRequesting,\n  allTypes,\n  types\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    items(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [items, reloadToggle, page, sort, searchKeyword, isDeleteSuccess, isArchiveSuccess, token, type, count, sortType]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Youtube has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isArchiveSuccess) {\n      swal('Youtube has been archived!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isDeleteError || isArchiveError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    resetDelete();\n  }, [isDeleteSuccess, isArchiveSuccess, isDeleteError, isArchiveError, resetDelete]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Youtube has been activated' : 'Youtube has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError, status, reloadToggle, resetStatus]);\n  useEffect(() => {\n    types(token);\n  }, [token, types]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [Id, setId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getId = id => {\n    setId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSortType(value);\n    setSort(!sort);\n  };\n\n  const featrued = id => {\n    ApiClient.put(`/youTube/featured?isfeaured=true&id=${id}`, {\n      id: id\n    }).then(res => {\n      console.log(\"res\", res);\n\n      if (res.data.success) {\n        items(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Youtube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Youtube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }), !formVisibility ? /*#__PURE__*/React.createElement(Listing, {\n    handleFormVisibilty: handleFormVisibilty,\n    items: data && data.data,\n    total: data && data.total,\n    handAddFormToggle: handAddFormToggle,\n    getId: getId,\n    isRequesting: isRequesting,\n    featrued: featrued,\n    resetSingle: resetSingle,\n    deleteItem: Delete,\n    Archive: Archive,\n    sort: sort,\n    setSort: setSort,\n    setPage: setPage,\n    page: page,\n    count: count,\n    getSearchKeyword: getSearchKeyword,\n    changeStatus: changeStatus,\n    getStatus: getStatus,\n    toggleSort: toggleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Form, {\n    allTypes: allTypes,\n    items: data && data.data && data.data.category,\n    handleFormVisibilty: handleFormVisibilty,\n    isAddForm: isAddForm,\n    Id: Id,\n    setReloadToggle: setReloadToggle,\n    reloadToggle: reloadToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  var _state$youtubeArchive;\n\n  return {\n    data: state.youtubes.data,\n    isRequesting: state.youtubes.isRequesting,\n    isSuccess: state.youtubes.isSuccess,\n    isError: state.youtubes.isError,\n    isDeleteSuccess: state.deleteYoutube.isSuccess,\n    isDeleteError: state.deleteYoutube.isError,\n    isArchiveSuccess: state.youtubeArchive.isSuccess,\n    isArchiveError: (_state$youtubeArchive = state.youtubeArchive) === null || _state$youtubeArchive === void 0 ? void 0 : _state$youtubeArchive.isError,\n    isChangeStatusSuccess: state.status.isSuccess,\n    isChangeStatusError: state.status.isError,\n    allTypes: state.types.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  items,\n  resetSingle,\n  Delete,\n  Archive,\n  resetDelete,\n  changeStatus,\n  resetStatus,\n  types\n})(Youtube);","map":{"version":3,"sources":["/home/jc-2/Documents/sociality-web/src/pages/youtube.js"],"names":["React","useState","useEffect","connect","useDispatch","swal","Layout","MainSidebar","SectionHeader","Listing","Form","items","resetSingle","Delete","resetDelete","Archive","types","changeStatus","resetStatus","ApiClient","Youtube","data","isDeleteSuccess","isArchiveSuccess","isDeleteError","isArchiveError","isChangeStatusSuccess","isChangeStatusError","isSuccess","isRequesting","allTypes","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","dispatch","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","Id","setId","handleFormVisibilty","handAddFormToggle","bool","getId","id","getSearchKeyword","value","getStatus","toggleSort","featrued","put","then","res","console","log","success","total","category","mapStateToProps","state","youtubes","isError","deleteYoutube","youtubeArchive"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport Listing from '../components/youtube/Listing';\nimport Form from '../components/youtube/Form';\nimport {\n  items,\n  resetSingle,\n  Delete,\n  resetDelete,\n  Archive\n} from '../store/actions/youtubeActions';\nimport { types } from '../store/actions/typeActions';\n\nimport {\n  changeStatus,\n  resetStatus\n} from '../store/actions/changeStatusActions';\nimport ApiClient from '../components/apiClient';\n\nconst Youtube = ({\n  items,\n  data,\n  resetSingle,\n  Delete,\n  Archive,\n  resetDelete,\n  isDeleteSuccess,\n  isArchiveSuccess,\n  isDeleteError,\n  isArchiveError,\n  changeStatus,\n  resetStatus,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isSuccess,\n  isRequesting,\n  allTypes,\n  types\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    items(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [\n    items,\n    reloadToggle,\n    page,\n    sort,\n    searchKeyword,\n    isDeleteSuccess,\n    isArchiveSuccess,\n    token,\n    type,\n    count,\n    sortType\n  ]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Youtube has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isArchiveSuccess) {\n      swal('Youtube has been archived!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    if (isDeleteError || isArchiveError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n    }\n\n    resetDelete();\n  }, [isDeleteSuccess,isArchiveSuccess, isDeleteError, isArchiveError, resetDelete]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Youtube has been activated'\n          : 'Youtube has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [\n    isChangeStatusSuccess,\n    isChangeStatusError,\n    status,\n    reloadToggle,\n    resetStatus\n  ]);\n\n  useEffect(() => {\n    types(token);\n  }, [token, types]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [Id, setId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getId = id => {\n    setId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSortType(value);\n    setSort(!sort);\n  };\n\n  const featrued =(id)=>{\n    ApiClient.put(`/youTube/featured?isfeaured=true&id=${id}`,{id:id}).then(res=>{\n      console.log(\"res\",res)\n      if(res.data.success){\n        items(\n          token,\n          type,\n          page,\n          count,\n          sortType,\n          sort ? 'asc' : 'desc',\n          searchKeyword\n        )\n      }\n    })\n  }\n\n\n  return (\n    <Layout title=\"Youtube\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Youtube\" />\n          {!formVisibility ? (\n            <Listing\n              handleFormVisibilty={handleFormVisibilty}\n              items={data && data.data}\n              total={data && data.total}\n              handAddFormToggle={handAddFormToggle}\n              getId={getId}\n              isRequesting={isRequesting}\n              featrued={featrued}\n              resetSingle={resetSingle}\n              deleteItem={Delete}\n              Archive={Archive}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : (\n            <Form\n              allTypes={allTypes}\n              items={data && data.data && data.data.category}\n              handleFormVisibilty={handleFormVisibilty}\n              isAddForm={isAddForm}\n              Id={Id}\n              setReloadToggle={setReloadToggle}\n              reloadToggle={reloadToggle}\n            />\n          )}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.youtubes.data,\n  isRequesting: state.youtubes.isRequesting,\n  isSuccess: state.youtubes.isSuccess,\n  isError: state.youtubes.isError,\n  isDeleteSuccess: state.deleteYoutube.isSuccess,\n  isDeleteError: state.deleteYoutube.isError,\n  isArchiveSuccess: state.youtubeArchive.isSuccess,\n  isArchiveError: state.youtubeArchive?.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError,\n  allTypes: state.types.data\n});\n\nexport default connect(mapStateToProps, {\n  items,\n  resetSingle,\n  Delete,\n  Archive,\n  resetDelete,\n  changeStatus,\n  resetStatus,\n  types\n})(Youtube);\n"]},"metadata":{},"sourceType":"module"}