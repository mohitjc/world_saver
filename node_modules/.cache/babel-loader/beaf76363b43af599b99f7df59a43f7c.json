{"ast":null,"code":"/**\n * @description :  This file has login and authentication functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport { AXIOS_INSTANCE, LOGIN_CONST, LOGIN_API, DEAUTHENTICATE } from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport { getRequest, getSuccess, getFailure, reset, authenticate, deauthenticate } from './index';\n\n// login user into app\n\nexport function login(postObj) {\n  return dispatch => {\n    dispatch(getRequest(LOGIN_CONST.LOGIN_REQUEST));\n    const getUrl = LOGIN_API;\n    AXIOS_INSTANCE.post(getUrl, postObj).then(checkHttpStatus).then(parseJSON).then(data => {\n      // console.log('response', data);\n      if (data.roles === 'SA') {\n        dispatch(getSuccess(LOGIN_CONST.LOGIN_SUCCESS, data));\n        localStorage.setItem('token', data.access_token);\n        dispatch(authenticate(data.access_token));\n      }\n    }).catch(error => {\n      // console.log('error', error.response);\n      const errorMessage = error.response && error.response.data && error.response.data.error_description ? error.response.data.error_description : 'Something went wrong!';\n      dispatch(getFailure(LOGIN_CONST.LOGIN_FAILURE, {\n        data: {\n          statusCode: 403,\n          // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n          message: errorMessage\n        }\n      }));\n    });\n  };\n}\n\n// remove token and logout user\n\nexport function logOut() {\n  return dispatch => {\n    dispatch(deauthenticate(DEAUTHENTICATE));\n    localStorage.removeItem('token');\n  };\n}\nexport function resetLogin() {\n  return dispatch => {\n    dispatch(reset(LOGIN_CONST.LOGIN_RESET));\n  };\n}","map":{"version":3,"names":["AXIOS_INSTANCE","LOGIN_CONST","LOGIN_API","DEAUTHENTICATE","checkHttpStatus","parseJSON","getRequest","getSuccess","getFailure","reset","authenticate","deauthenticate","login","postObj","dispatch","LOGIN_REQUEST","getUrl","post","then","data","roles","LOGIN_SUCCESS","localStorage","setItem","access_token","catch","error","errorMessage","response","error_description","LOGIN_FAILURE","statusCode","message","logOut","removeItem","resetLogin","LOGIN_RESET"],"sources":["/home/jc-2/Documents/sociality-web/src/store/actions/loginActions.js"],"sourcesContent":["/**\n * @description :  This file has login and authentication functions\n * @param: CRUD values and access token\n * @return : Boolean and success, error message\n * @author JC Software Solution PVT. LTD.\n */\n\nimport {\n  AXIOS_INSTANCE,\n  LOGIN_CONST,\n  LOGIN_API,\n  DEAUTHENTICATE\n} from '../constants';\nimport { checkHttpStatus, parseJSON } from '../../utils/helpers';\nimport {\n  getRequest,\n  getSuccess,\n  getFailure,\n  reset,\n  authenticate,\n  deauthenticate\n} from './index';\n\n// login user into app\n\nexport function login(postObj) {\n  return dispatch => {\n    dispatch(getRequest(LOGIN_CONST.LOGIN_REQUEST));\n    const getUrl = LOGIN_API;\n    AXIOS_INSTANCE.post(getUrl, postObj)\n      .then(checkHttpStatus)\n      .then(parseJSON)\n      .then(data => {\n        // console.log('response', data);\n        if (data.roles === 'SA') {\n          dispatch(getSuccess(LOGIN_CONST.LOGIN_SUCCESS, data));\n          localStorage.setItem('token', data.access_token);\n          dispatch(authenticate(data.access_token));\n        }\n      })\n      .catch(error => {\n        // console.log('error', error.response);\n        const errorMessage =\n          error.response &&\n          error.response.data &&\n          error.response.data.error_description\n            ? error.response.data.error_description\n            : 'Something went wrong!';\n        dispatch(\n          getFailure(LOGIN_CONST.LOGIN_FAILURE, {\n            data: {\n              statusCode: 403,\n              // statusText: (error_message.message) ? error_message.message : \"Something went wrong. Please try again later.\",\n              message: errorMessage\n            }\n          })\n        );\n      });\n  };\n}\n\n// remove token and logout user\n\nexport function logOut() {\n  return dispatch => {\n    dispatch(deauthenticate(DEAUTHENTICATE));\n    localStorage.removeItem('token');\n  };\n}\n\nexport function resetLogin() {\n  return dispatch => {\n    dispatch(reset(LOGIN_CONST.LOGIN_RESET));\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,cAAc,EACdC,WAAW,EACXC,SAAS,EACTC,cAAc,QACT,cAAc;AACrB,SAASC,eAAe,EAAEC,SAAS,QAAQ,qBAAqB;AAChE,SACEC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,KAAK,EACLC,YAAY,EACZC,cAAc,QACT,SAAS;;AAEhB;;AAEA,OAAO,SAASC,KAAK,CAACC,OAAO,EAAE;EAC7B,OAAOC,QAAQ,IAAI;IACjBA,QAAQ,CAACR,UAAU,CAACL,WAAW,CAACc,aAAa,CAAC,CAAC;IAC/C,MAAMC,MAAM,GAAGd,SAAS;IACxBF,cAAc,CAACiB,IAAI,CAACD,MAAM,EAAEH,OAAO,CAAC,CACjCK,IAAI,CAACd,eAAe,CAAC,CACrBc,IAAI,CAACb,SAAS,CAAC,CACfa,IAAI,CAACC,IAAI,IAAI;MACZ;MACA,IAAIA,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE;QACvBN,QAAQ,CAACP,UAAU,CAACN,WAAW,CAACoB,aAAa,EAAEF,IAAI,CAAC,CAAC;QACrDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,YAAY,CAAC;QAChDV,QAAQ,CAACJ,YAAY,CAACS,IAAI,CAACK,YAAY,CAAC,CAAC;MAC3C;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACA,MAAMC,YAAY,GAChBD,KAAK,CAACE,QAAQ,IACdF,KAAK,CAACE,QAAQ,CAACT,IAAI,IACnBO,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,iBAAiB,GACjCH,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,iBAAiB,GACrC,uBAAuB;MAC7Bf,QAAQ,CACNN,UAAU,CAACP,WAAW,CAAC6B,aAAa,EAAE;QACpCX,IAAI,EAAE;UACJY,UAAU,EAAE,GAAG;UACf;UACAC,OAAO,EAAEL;QACX;MACF,CAAC,CAAC,CACH;IACH,CAAC,CAAC;EACN,CAAC;AACH;;AAEA;;AAEA,OAAO,SAASM,MAAM,GAAG;EACvB,OAAOnB,QAAQ,IAAI;IACjBA,QAAQ,CAACH,cAAc,CAACR,cAAc,CAAC,CAAC;IACxCmB,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;AACH;AAEA,OAAO,SAASC,UAAU,GAAG;EAC3B,OAAOrB,QAAQ,IAAI;IACjBA,QAAQ,CAACL,KAAK,CAACR,WAAW,CAACmC,WAAW,CAAC,CAAC;EAC1C,CAAC;AACH"},"metadata":{},"sourceType":"module"}