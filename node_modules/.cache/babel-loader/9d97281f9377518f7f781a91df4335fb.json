{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/socialify/sociality-web/src/pages/RolesAndPermissions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport RolesAndPermissionsListing from '../components/rolesAndPermissions/RolesAndPermissionsListing';\nimport { names, resetSingleName, deleteName, resetDeleteName } from '../store/actions/planNameActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport RolesAndPermissionsForm from '../components/rolesAndPermissions/RolesAndPermissionsForm';\n\nconst RolesAndPermissions = ({\n  data,\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName,\n  isDeleteSuccess,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isSuccess\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null); // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    names(token, type, page, count, sortType, sort ? 'asc' : 'desc', searchKeyword);\n  }, [names, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Name has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(status === 'active' ? 'Name has been activated' : 'Name has been deactivated', {\n        buttons: false,\n        timer: 1500\n      });\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [nameId, setNameId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getNameId = id => {\n    setNameId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  }; // console.log('isDeleteError', isDeleteError);\n\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Roles And Permissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    title: \"Roles And Permissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  data: state.names.data,\n  isRequesting: state.names.isRequesting,\n  isSuccess: state.names.isSuccess,\n  isError: state.names.isError,\n  isDeleteSuccess: state.deleteName.isSuccess,\n  isDeleteError: state.deleteName.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\n\nexport default connect(mapStateToProps, {\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName,\n  changeStatus,\n  resetStatus\n})(RolesAndPermissions);","map":{"version":3,"sources":["/home/user/Documents/socialify/sociality-web/src/pages/RolesAndPermissions.js"],"names":["React","useState","useEffect","connect","swal","Layout","MainSidebar","SectionHeader","RolesAndPermissionsListing","names","resetSingleName","deleteName","resetDeleteName","changeStatus","resetStatus","RolesAndPermissionsForm","RolesAndPermissions","data","isDeleteSuccess","isChangeStatusSuccess","isChangeStatusError","isDeleteError","isSuccess","token","localStorage","getItem","page","setPage","count","setCount","type","setType","sort","setSort","sortType","setSortType","reloadToggle","setReloadToggle","searchKeyword","setSearchKeyword","status","setStatus","buttons","timer","formVisibility","setFormVisibilty","isAddForm","setIsAddForm","nameId","setNameId","handleFormVisibilty","handAddFormToggle","bool","getNameId","id","getSearchKeyword","value","getStatus","toggleSort","mapStateToProps","state","isRequesting","isError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\nimport Layout from '../components/global/Layout';\nimport MainSidebar from '../components/global/MainSidebar';\nimport SectionHeader from '../components/global/SectionHeader';\nimport RolesAndPermissionsListing from '../components/rolesAndPermissions/RolesAndPermissionsListing';\nimport {\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName\n} from '../store/actions/planNameActions';\nimport { changeStatus, resetStatus } from '../store/actions/changeStatusActions';\nimport RolesAndPermissionsForm from '../components/rolesAndPermissions/RolesAndPermissionsForm';\n\nconst RolesAndPermissions = ({\n  data,\n  names,\n  resetSingleName,\n  deleteName,\n  resetDeleteName,\n  isDeleteSuccess,\n  isChangeStatusSuccess,\n  isChangeStatusError,\n  isDeleteError,\n  changeStatus,\n  resetStatus,\n  isSuccess\n}) => {\n  const token = localStorage.getItem('token');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const [type, setType] = useState('I');\n  const [sort, setSort] = useState(false);\n  const [sortType, setSortType] = useState('createdAt');\n  const [reloadToggle, setReloadToggle] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [status, setStatus] = useState(null);\n  // const [currentCount, setCurrentCount] = useState(count);\n\n  useEffect(() => {\n    names(\n      token,\n      type,\n      page,\n      count,\n      sortType,\n      sort ? 'asc' : 'desc',\n      searchKeyword\n    );\n  }, [names, reloadToggle, page, sort, searchKeyword, isDeleteSuccess]);\n\n  useEffect(() => {\n    if (isDeleteSuccess) {\n      swal('Name has been deleted!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n\n    if (isDeleteError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetDeleteName();\n    }\n  }, [isDeleteSuccess, isDeleteError]);\n\n  useEffect(() => {\n    if (isChangeStatusSuccess) {\n      swal(\n        status === 'active'\n          ? 'Name has been activated'\n          : 'Name has been deactivated',\n        {\n          buttons: false,\n          timer: 1500\n        }\n      );\n      setReloadToggle(!reloadToggle);\n      resetStatus();\n    }\n\n    if (isChangeStatusError) {\n      swal('Something went wrong!', {\n        buttons: false,\n        timer: 1500\n      });\n      resetStatus();\n    }\n  }, [isChangeStatusSuccess, isChangeStatusError]);\n\n  const [formVisibility, setFormVisibilty] = useState(false);\n  const [isAddForm, setIsAddForm] = useState(false);\n  const [nameId, setNameId] = useState(null);\n\n  const handleFormVisibilty = () => {\n    setFormVisibilty(!formVisibility);\n  };\n\n  const handAddFormToggle = bool => {\n    setIsAddForm(bool);\n  };\n\n  const getNameId = id => {\n    setNameId(id);\n  };\n\n  const getSearchKeyword = value => {\n    setSearchKeyword(value);\n  };\n\n  const getStatus = value => {\n    setStatus(value);\n  };\n\n  const toggleSort = value => {\n    setSort(!sort);\n    setSortType(value);\n  };\n\n  // console.log('isDeleteError', isDeleteError);\n  return (\n    <Layout title=\"Roles And Permissions\">\n      <MainSidebar />\n      <div className=\"main-content\">\n        <section className=\"section\">\n          <SectionHeader title=\"Roles And Permissions\" />\n          {/* {!formVisibility ? (\n            <RolesAndPermissionsListing\n              handleFormVisibilty={handleFormVisibilty}\n              names={data && data.data && data.data.subscribenames}\n              total={data && data.data && data.data.total}\n              handAddFormToggle={handAddFormToggle}\n              getNameId={getNameId}\n              // UserListing={UserListing}\n              resetSingleName={resetSingleName}\n              deleteName={deleteName}\n              sort={sort}\n              setSort={setSort}\n              setPage={setPage}\n              page={page}\n              count={count}\n              getSearchKeyword={getSearchKeyword}\n              changeStatus={changeStatus}\n              getStatus={getStatus}\n              toggleSort={toggleSort}\n            />\n          ) : null} */}\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  data: state.names.data,\n  isRequesting: state.names.isRequesting,\n  isSuccess: state.names.isSuccess,\n  isError: state.names.isError,\n  isDeleteSuccess: state.deleteName.isSuccess,\n  isDeleteError: state.deleteName.isError,\n  isChangeStatusSuccess: state.status.isSuccess,\n  isChangeStatusError: state.status.isError\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    names,\n    resetSingleName,\n    deleteName,\n    resetDeleteName,\n    changeStatus,\n    resetStatus\n  }\n)(RolesAndPermissions);\n"]},"metadata":{},"sourceType":"module"}