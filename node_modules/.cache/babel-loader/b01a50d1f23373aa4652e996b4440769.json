{"ast":null,"code":"/*\n * @file: index.js\n * @description: It Contain rest functions for api call .\n * @author: Poonam\n */\n\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport { setAuthorizationToken } from './auth';\n// import { ToastsStore } from 'react-toasts';\nimport { API_SLUG } from '../store/constants';\nimport load from '../methods/load';\nvar config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nvar baseUrl = API_SLUG;\nconst handleError = status => {\n  if (status == 400) {\n    // ToastsStore.error('Not Found');\n  }\n  if (status == 500) {\n    // ToastsStore.error('Error');\n  } else if (status == 404) {\n    // ToastsStore.error('Server Error');\n  }\n};\nclass ApiClient {\n  static post(url1, params) {\n    let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.post(url, JSON.stringify(params), config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        load(false);\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n  static put(url1, params) {\n    let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.put(url, JSON.stringify(params), config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n  static get(url1, params) {\n    let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    let query = querystring.stringify(params);\n    url = query ? `${url}?${query}` : url;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.get(url, config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n  static delete(url1) {\n    let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    let url = baseUrl + url1;\n    if (base) url = base + url1;\n    setAuthorizationToken(axios);\n    return new Promise(function (fulfill, reject) {\n      axios.delete(url, config).then(function (response) {\n        fulfill(response);\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n\n  /*************** Form-Data Method ***********/\n  static postFormData(url, params) {\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    url = baseUrl + url;\n    config.headers['Content-Type'] = 'multipart/form-data';\n    return new Promise(function (fulfill, reject) {\n      var body = new FormData();\n      body.append('file', params);\n      axios.post(url, body, config).then(function (response) {\n        fulfill({\n          status: response.status,\n          data: response\n        });\n        load(false);\n      }).catch(function (error) {\n        // loader(false)\n        load(false);\n        if (error && error.response) {\n          let eres = error.response;\n          handleError(eres.status);\n          fulfill(eres);\n        } else {\n          // ToastsStore.error('Network Error');\n          reject(error);\n        }\n      });\n    });\n  }\n}\nexport default ApiClient;","map":{"version":3,"names":["axios","querystring","setAuthorizationToken","API_SLUG","load","config","headers","baseUrl","handleError","status","ApiClient","post","url1","params","base","url","Promise","fulfill","reject","JSON","stringify","then","response","catch","error","eres","put","get","query","delete","postFormData","token","body","FormData","append","data"],"sources":["/home/jc-2/Documents/sociality-web/src/components/apiClient.js"],"sourcesContent":["/*\n * @file: index.js\n * @description: It Contain rest functions for api call .\n * @author: Poonam\n */\n\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport { setAuthorizationToken } from './auth';\n// import { ToastsStore } from 'react-toasts';\nimport { API_SLUG } from '../store/constants';\nimport load from '../methods/load';\n\nvar config = {\n    headers: { 'Content-Type': 'application/json' },\n};\n\nvar baseUrl = API_SLUG\n\n\nconst handleError = (status) => {\n    if (status == 400) {\n        // ToastsStore.error('Not Found');\n    } if (status == 500) {\n        // ToastsStore.error('Error');\n    } else if (status == 404) {\n        // ToastsStore.error('Server Error');\n    }\n}\n\nclass ApiClient {\n    static post(url1, params, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .post(url, JSON.stringify(params), config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static put(url1, params, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .put(url, JSON.stringify(params), config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static get(url1, params, base = '') {\n\n        let url = baseUrl + url1\n        if (base) url = base + url1\n\n        let query = querystring.stringify(params);\n        url = query ? `${url}?${query}` : url;\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .get(url, config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    static delete(url1, base = '') {\n        let url = baseUrl + url1\n        if (base) url = base + url1\n        setAuthorizationToken(axios);\n        return new Promise(function (fulfill, reject) {\n            axios\n                .delete(url, config)\n                .then(function (response) {\n                    fulfill(response);\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n    /*************** Form-Data Method ***********/\n    static postFormData(url, params, token = '') {\n        url = baseUrl + url\n        config.headers['Content-Type'] = 'multipart/form-data';\n        return new Promise(function (fulfill, reject) {\n            var body = new FormData();\n            body.append('file', params);\n\n            axios\n                .post(url, body, config)\n\n                .then(function (response) {\n                    fulfill({ status: response.status, data: response });\n                    load(false)\n                })\n                .catch(function (error) {\n                    // loader(false)\n                    load(false)\n                    if (error && error.response) {\n                        let eres = error.response;\n                        handleError(eres.status)\n                        fulfill(eres);\n                    } else {\n                        // ToastsStore.error('Network Error');\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n}\n\nexport default ApiClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}